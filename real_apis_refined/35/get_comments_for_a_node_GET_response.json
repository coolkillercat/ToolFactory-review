{"status_code": 200, "text": "{\"self\":\"https:\\/\\/www.drupal.org\\/api-d7\\/comment?node=1978202\",\"first\":\"https:\\/\\/www.drupal.org\\/api-d7\\/comment?node=1978202\\u0026page=0\",\"last\":\"https:\\/\\/www.drupal.org\\/api-d7\\/comment?node=1978202\\u0026page=0\",\"list\":[{\"comment_body\":{\"value\":\"\\u003Cp\\u003EAgreed. This makes it especially tricky to render an image field using something like \\u003Ca href=\\u0022http:\\/\\/drupal.org\\/project\\/backbone\\u0022 rel=\\u0022nofollow\\u0022\\u003Ehttp:\\/\\/drupal.org\\/project\\/backbone\\u003C\\/a\\u003E.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EI can get at the file URI via {{ field_image.file.uri }} in a twig.tpl.php file, for example, but the template is not the place to make another call to RESTws.\\u003C\\/p\\u003E\\n\\u003Cp\\u003ESee also \\u003Cspan class=\\u0022project-issue-issue-link project-issue-status-info project-issue-status-1\\u0022\\u003E\\u003Ca href=\\u0022\\/project\\/backbone\\/issues\\/2035103\\u0022 title=\\u0022Status: Active\\u0022\\u003E#2035103: RESTws does not return file field data for images\\u003C\\/a\\u003E\\u003C\\/span\\u003E.\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"7616121\",\"name\":\"sethviebrock\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-7616121\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/7616121\",\"created\":\"1372966899\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/552128\",\"id\":\"552128\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EThis solution is actually more appropriate for the d.o need: \\u003Cspan class=\\u0022project-issue-issue-link project-issue-status-info project-issue-status-7\\u0022\\u003E\\u003Ca href=\\u0022\\/comment\\/8462741#comment-8462741\\u0022 title=\\u0022Status: Closed (fixed), Assigned to: drumm\\u0022\\u003E#1710850-69: Deploy RestWS for D7 project issue JSON\\u003C\\/a\\u003E\\u003C\\/span\\u003E\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"8464873\",\"name\":\"markhalliwell\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-8464873\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/8464873\",\"created\":\"1391969914\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/501638\",\"id\":\"501638\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EI disagree with aggregate data on a normal resource.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EWhile working on \\u003Cspan class=\\u0022project-issue-issue-link project-issue-status-info project-issue-status-7\\u0022\\u003E\\u003Ca href=\\u0022\\/project\\/drush_iq\\/issues\\/2127965\\u0022 title=\\u0022Status: Closed (fixed)\\u0022\\u003E#2127965: Fix for the new json structure on d.o D7\\u003C\\/a\\u003E\\u003C\\/span\\u003E I indeed needed to call a zillion request to get all files, comments and users. \\u003C\\/p\\u003E\\n\\u003Cp\\u003EThe data needed for the requester depends on his\\/her use case.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EThe question here to be asked should be: \\u0022What\\u0027s the hook to implement aggregation results?\\u0022 as for d.o. we need a _full issue_ response while @sirkitree and @sethviebrock only want the files added.\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"8884147\",\"name\":\"clemens.tolboom\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-8884147\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/8884147\",\"created\":\"1402907919\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/125814\",\"id\":\"125814\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EI don\\u0027t think they want \\u0022only the files added\\u0022. I think we\\u0027re all on the same page. It makes no sense (for anyone) to return just the URIs to said resources when it has the potential to be so many. Instead, it should just include the data with it.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EThat being said, if there really is a option desired, is it possible to perhaps just add a toggle setting on the entity to \\u0022Include all sub-entity data\\u0022? If it\\u0027s checked it includes the data, if not, it just provides the URI to the entity.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EThis begs the question though: \\u0022Should all sub-entities get expanded?\\u0022; probably not. Especially since comments can be quite lengthy.\\u003C\\/p\\u003E\\n\\u003Cp\\u003ESo perhaps we should instead make the following toggle instead: \\u0022Allow this entity to be expanded in parent entities\\u0022. I could see us enabling this for taxonomy and files, but not comments (at least for d.o\\u0027s purposes). And then when, say, an entity references other entities, it checks if that entity has that option toggled and either 1) merges in the data or 2) provides the URI to that entity.\\u003C\\/p\\u003E\\n\\u003Cp\\u003Eedit: just updated some verbiage to make it a little clearer.\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9036831\",\"name\":\"markhalliwell\",\"homepage\":\"\",\"subject\":\"I don\\u0027t think they want \\u0022only\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9036831\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9036831\",\"created\":\"1407472749\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/501638\",\"id\":\"501638\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EAfter done some testing on D8 rest and hal is disagree with my previous comment. In Hal context its result has an _embed element whose items could contain interesting items to add upfront into the result. In D8 we have a views REST display type too build up ie a node with it\\u0027s relations. What is lacking is a display mode for JSON result.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EIs the lack of display mode the missing part?\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9040713\",\"name\":\"clemens.tolboom\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9040713\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9040713\",\"created\":\"1407590652\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/125814\",\"id\":\"125814\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EI want to expose a content type that contains a multiple taxonomy references and multiple image files.\\u003Cbr \\/\\u003E\\nI expected the JSON result for the node list to have resolved those references, but apparently thats not what happens.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EHas anyone come up with an interim solution to this problem? (am I holding it wrong?)\\u003Cbr \\/\\u003E\\nShould I write a custom menu callback to serve the required JSON or do you handle the aggregation logic in the frontend?\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9230269\",\"name\":\"cjoy\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9230269\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9230269\",\"created\":\"1412792758\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/1502360\",\"id\":\"1502360\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EThe following post has a solution with a simple \\u0022?deep-load-refs\\u0022 at the end of URL: \\u003Ca href=\\u0022http:\\/\\/dropbucket.org\\/node\\/659\\u0022 rel=\\u0022nofollow\\u0022\\u003Ehttp:\\/\\/dropbucket.org\\/node\\/659\\u003C\\/a\\u003E\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9454095\",\"name\":\"pedrorocha\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9454095\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9454095\",\"created\":\"1419213716\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/218937\",\"id\":\"218937\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9519607\",\"name\":\"drumm\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9519607\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9519607\",\"created\":\"1421446814\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/3064\",\"id\":\"3064\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003E+1 to pedrorocha\\u0027s comment in #7\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9966401\",\"name\":\"TechNikh\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9966401\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9966401\",\"created\":\"1432755664\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/372123\",\"id\":\"372123\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EI found a drupal-friendly work-around without modifying anything in the core. If anyone is interested, they can read this:\\u003Cbr \\/\\u003E\\n\\u003Ca href=\\u0022http:\\/\\/stackoverflow.com\\/questions\\/37033484\\/drupal-services-direct-file-url-instead-of-file-resource-reference\\/37033486#37033486\\u0022 rel=\\u0022nofollow\\u0022\\u003Ehttp:\\/\\/stackoverflow.com\\/questions\\/37033484\\/drupal-services-direct-file-...\\u003C\\/a\\u003E\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[\"1\",\"0\"],\"cid\":\"11155843\",\"name\":\"jigarius\",\"homepage\":\"\",\"subject\":\"I found a drupal-friendly\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-11155843\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/11155843\",\"created\":\"1462380450\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/2492730\",\"id\":\"2492730\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null}]}", "json": {"self": "https://www.drupal.org/api-d7/comment?node=1978202", "first": "https://www.drupal.org/api-d7/comment?node=1978202&page=0", "last": "https://www.drupal.org/api-d7/comment?node=1978202&page=0", "list": [{"comment_body": {"value": "<p>Agreed. This makes it especially tricky to render an image field using something like <a href=\"http://drupal.org/project/backbone\" rel=\"nofollow\">http://drupal.org/project/backbone</a>.</p>\n<p>I can get at the file URI via {{ field_image.file.uri }} in a twig.tpl.php file, for example, but the template is not the place to make another call to RESTws.</p>\n<p>See also <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-1\"><a href=\"/project/backbone/issues/2035103\" title=\"Status: Active\">#2035103: RESTws does not return file field data for images</a></span>.</p>", "format": "1"}, "field_attribute_contribution_to": [], "field_for_customer": [], "field_attribute_as_volunteer": [], "cid": "7616121", "name": "sethviebrock", "homepage": "", "subject": "", "url": "https://www.drupal.org/project/restws/issues/1978202#comment-7616121", "edit_url": "https://www.drupal.org/comment/edit/7616121", "created": "1372966899", "node": {"uri": "https://www.drupal.org/api-d7/node/1978202", "id": "1978202", "resource": "node"}, "author": {"uri": "https://www.drupal.org/api-d7/user/552128", "id": "552128", "resource": "user"}, "feeds_item_guid": null, "feeds_item_url": null, "feed_nid": null}, {"comment_body": {"value": "<p>This solution is actually more appropriate for the d.o need: <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-7\"><a href=\"/comment/8462741#comment-8462741\" title=\"Status: Closed (fixed), Assigned to: drumm\">#1710850-69: Deploy RestWS for D7 project issue JSON</a></span></p>", "format": "1"}, "field_attribute_contribution_to": [], "field_for_customer": [], "field_attribute_as_volunteer": [], "cid": "8464873", "name": "markhalliwell", "homepage": "", "subject": "", "url": "https://www.drupal.org/project/restws/issues/1978202#comment-8464873", "edit_url": "https://www.drupal.org/comment/edit/8464873", "created": "1391969914", "node": {"uri": "https://www.drupal.org/api-d7/node/1978202", "id": "1978202", "resource": "node"}, "author": {"uri": "https://www.drupal.org/api-d7/user/501638", "id": "501638", "resource": "user"}, "feeds_item_guid": null, "feeds_item_url": null, "feed_nid": null}, {"comment_body": {"value": "<p>I disagree with aggregate data on a normal resource.</p>\n<p>While working on <span class=\"project-issue-issue-link project-issue-status-info project-issue-status-7\"><a href=\"/project/drush_iq/issues/2127965\" title=\"Status: Closed (fixed)\">#2127965: Fix for the new json structure on d.o D7</a></span> I indeed needed to call a zillion request to get all files, comments and users. </p>\n<p>The data needed for the requester depends on his/her use case.</p>\n<p>The question here to be asked should be: \"What's the hook to implement aggregation results?\" as for d.o. we need a _full issue_ response while @sirkitree and @sethviebrock only want the files added.</p>", "format": "1"}, "field_attribute_contribution_to": [], "field_for_customer": [], "field_attribute_as_volunteer": [], "cid": "8884147", "name": "clemens.tolboom", "homepage": "", "subject": "", "url": "https://www.drupal.org/project/restws/issues/1978202#comment-8884147", "edit_url": "https://www.drupal.org/comment/edit/8884147", "created": "1402907919", "node": {"uri": "https://www.drupal.org/api-d7/node/1978202", "id": "1978202", "resource": "node"}, "author": {"uri": "https://www.drupal.org/api-d7/user/125814", "id": "125814", "resource": "user"}, "feeds_item_guid": null, "feeds_item_url": null, "feed_nid": null}, {"comment_body": {"value": "<p>I don't think they want \"only the files added\". I think we're all on the same page. It makes no sense (for anyone) to return just the URIs to said resources when it has the potential to be so many. Instead, it should just include the data with it.</p>\n<p>That being said, if there really is a option desired, is it possible to perhaps just add a toggle setting on the entity to \"Include all sub-entity data\"? If it's checked it includes the data, if not, it just provides the URI to the entity.</p>\n<p>This begs the question though: \"Should all sub-entities get expanded?\"; probably not. Especially since comments can be quite lengthy.</p>\n<p>So perhaps we should instead make the following toggle instead: \"Allow this entity to be expanded in parent entities\". I could see us enabling this for taxonomy and files, but not comments (at least for d.o's purposes). And then when, say, an entity references other entities, it checks if that entity has that option toggled and either 1) merges in the data or 2) provides the URI to that entity.</p>\n<p>edit: just updated some verbiage to make it a little clearer.</p>", "format": "1"}, "field_attribute_contribution_to": [], "field_for_customer": [], "field_attribute_as_volunteer": [], "cid": "9036831", "name": "markhalliwell", "homepage": "", "subject": "I don't think they want \"only", "url": "https://www.drupal.org/project/restws/issues/1978202#comment-9036831", "edit_url": "https://www.drupal.org/comment/edit/9036831", "created": "1407472749", "node": {"uri": "https://www.drupal.org/api-d7/node/1978202", "id": "1978202", "resource": "node"}, "author": {"uri": "https://www.drupal.org/api-d7/user/501638", "id": "501638", "resource": "user"}, "feeds_item_guid": null, "feeds_item_url": null, "feed_nid": null}, {"comment_body": {"value": "<p>After done some testing on D8 rest and hal is disagree with my previous comment. In Hal context its result has an _embed element whose items could contain interesting items to add upfront into the result. In D8 we have a views REST display type too build up ie a node with it's relations. What is lacking is a display mode for JSON result.</p>\n<p>Is the lack of display mode the missing part?</p>", "format": "1"}, "field_attribute_contribution_to": [], "field_for_customer": [], "field_attribute_as_volunteer": [], "cid": "9040713", "name": "clemens.tolboom", "homepage": "", "subject": "", "url": "https://www.drupal.org/project/restws/issues/1978202#comment-9040713", "edit_url": "https://www.drupal.org/comment/edit/9040713", "created": "1407590652", "node": {"uri": "https://www.drupal.org/api-d7/node/1978202", "id": "1978202", "resource": "node"}, "author": {"uri": "https://www.drupal.org/api-d7/user/125814", "id": "125814", "resource": "user"}, "feeds_item_guid": null, "feeds_item_url": null, "feed_nid": null}, {"comment_body": {"value": "<p>I want to expose a content type that contains a multiple taxonomy references and multiple image files.<br />\nI expected the JSON result for the node list to have resolved those references, but apparently thats not what happens.</p>\n<p>Has anyone come up with an interim solution to this problem? (am I holding it wrong?)<br />\nShould I write a custom menu callback to serve the required JSON or do you handle the aggregation logic in the frontend?</p>", "format": "1"}, "field_attribute_contribution_to": [], "field_for_customer": [], "field_attribute_as_volunteer": [], "cid": "9230269", "name": "cjoy", "homepage": "", "subject": "", "url": "https://www.drupal.org/project/restws/issues/1978202#comment-9230269", "edit_url": "https://www.drupal.org/comment/edit/9230269", "created": "1412792758", "node": {"uri": "https://www.drupal.org/api-d7/node/1978202", "id": "1978202", "resource": "node"}, "author": {"uri": "https://www.drupal.org/api-d7/user/1502360", "id": "1502360", "resource": "user"}, "feeds_item_guid": null, "feeds_item_url": null, "feed_nid": null}, {"comment_body": {"value": "<p>The following post has a solution with a simple \"?deep-load-refs\" at the end of URL: <a href=\"http://dropbucket.org/node/659\" rel=\"nofollow\">http://dropbucket.org/node/659</a></p>", "format": "1"}, "field_attribute_contribution_to": [], "field_for_customer": [], "field_attribute_as_volunteer": [], "cid": "9454095", "name": "pedrorocha", "homepage": "", "subject": "", "url": "https://www.drupal.org/project/restws/issues/1978202#comment-9454095", "edit_url": "https://www.drupal.org/comment/edit/9454095", "created": "1419213716", "node": {"uri": "https://www.drupal.org/api-d7/node/1978202", "id": "1978202", "resource": "node"}, "author": {"uri": "https://www.drupal.org/api-d7/user/218937", "id": "218937", "resource": "user"}, "feeds_item_guid": null, "feeds_item_url": null, "feed_nid": null}, {"comment_body": {"value": "", "format": "1"}, "field_attribute_contribution_to": [], "field_for_customer": [], "field_attribute_as_volunteer": [], "cid": "9519607", "name": "drumm", "homepage": "", "subject": "", "url": "https://www.drupal.org/project/restws/issues/1978202#comment-9519607", "edit_url": "https://www.drupal.org/comment/edit/9519607", "created": "1421446814", "node": {"uri": "https://www.drupal.org/api-d7/node/1978202", "id": "1978202", "resource": "node"}, "author": {"uri": "https://www.drupal.org/api-d7/user/3064", "id": "3064", "resource": "user"}, "feeds_item_guid": null, "feeds_item_url": null, "feed_nid": null}, {"comment_body": {"value": "<p>+1 to pedrorocha's comment in #7</p>", "format": "1"}, "field_attribute_contribution_to": [], "field_for_customer": [], "field_attribute_as_volunteer": [], "cid": "9966401", "name": "TechNikh", "homepage": "", "subject": "", "url": "https://www.drupal.org/project/restws/issues/1978202#comment-9966401", "edit_url": "https://www.drupal.org/comment/edit/9966401", "created": "1432755664", "node": {"uri": "https://www.drupal.org/api-d7/node/1978202", "id": "1978202", "resource": "node"}, "author": {"uri": "https://www.drupal.org/api-d7/user/372123", "id": "372123", "resource": "user"}, "feeds_item_guid": null, "feeds_item_url": null, "feed_nid": null}, {"comment_body": {"value": "<p>I found a drupal-friendly work-around without modifying anything in the core. If anyone is interested, they can read this:<br />\n<a href=\"http://stackoverflow.com/questions/37033484/drupal-services-direct-file-url-instead-of-file-resource-reference/37033486#37033486\" rel=\"nofollow\">http://stackoverflow.com/questions/37033484/drupal-services-direct-file-...</a></p>", "format": "1"}, "field_attribute_contribution_to": [], "field_for_customer": [], "field_attribute_as_volunteer": ["1", "0"], "cid": "11155843", "name": "jigarius", "homepage": "", "subject": "I found a drupal-friendly", "url": "https://www.drupal.org/project/restws/issues/1978202#comment-11155843", "edit_url": "https://www.drupal.org/comment/edit/11155843", "created": "1462380450", "node": {"uri": "https://www.drupal.org/api-d7/node/1978202", "id": "1978202", "resource": "node"}, "author": {"uri": "https://www.drupal.org/api-d7/user/2492730", "id": "2492730", "resource": "user"}, "feeds_item_guid": null, "feeds_item_url": null, "feed_nid": null}]}, "content": "{\"self\":\"https:\\/\\/www.drupal.org\\/api-d7\\/comment?node=1978202\",\"first\":\"https:\\/\\/www.drupal.org\\/api-d7\\/comment?node=1978202\\u0026page=0\",\"last\":\"https:\\/\\/www.drupal.org\\/api-d7\\/comment?node=1978202\\u0026page=0\",\"list\":[{\"comment_body\":{\"value\":\"\\u003Cp\\u003EAgreed. This makes it especially tricky to render an image field using something like \\u003Ca href=\\u0022http:\\/\\/drupal.org\\/project\\/backbone\\u0022 rel=\\u0022nofollow\\u0022\\u003Ehttp:\\/\\/drupal.org\\/project\\/backbone\\u003C\\/a\\u003E.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EI can get at the file URI via {{ field_image.file.uri }} in a twig.tpl.php file, for example, but the template is not the place to make another call to RESTws.\\u003C\\/p\\u003E\\n\\u003Cp\\u003ESee also \\u003Cspan class=\\u0022project-issue-issue-link project-issue-status-info project-issue-status-1\\u0022\\u003E\\u003Ca href=\\u0022\\/project\\/backbone\\/issues\\/2035103\\u0022 title=\\u0022Status: Active\\u0022\\u003E#2035103: RESTws does not return file field data for images\\u003C\\/a\\u003E\\u003C\\/span\\u003E.\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"7616121\",\"name\":\"sethviebrock\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-7616121\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/7616121\",\"created\":\"1372966899\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/552128\",\"id\":\"552128\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EThis solution is actually more appropriate for the d.o need: \\u003Cspan class=\\u0022project-issue-issue-link project-issue-status-info project-issue-status-7\\u0022\\u003E\\u003Ca href=\\u0022\\/comment\\/8462741#comment-8462741\\u0022 title=\\u0022Status: Closed (fixed), Assigned to: drumm\\u0022\\u003E#1710850-69: Deploy RestWS for D7 project issue JSON\\u003C\\/a\\u003E\\u003C\\/span\\u003E\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"8464873\",\"name\":\"markhalliwell\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-8464873\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/8464873\",\"created\":\"1391969914\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/501638\",\"id\":\"501638\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EI disagree with aggregate data on a normal resource.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EWhile working on \\u003Cspan class=\\u0022project-issue-issue-link project-issue-status-info project-issue-status-7\\u0022\\u003E\\u003Ca href=\\u0022\\/project\\/drush_iq\\/issues\\/2127965\\u0022 title=\\u0022Status: Closed (fixed)\\u0022\\u003E#2127965: Fix for the new json structure on d.o D7\\u003C\\/a\\u003E\\u003C\\/span\\u003E I indeed needed to call a zillion request to get all files, comments and users. \\u003C\\/p\\u003E\\n\\u003Cp\\u003EThe data needed for the requester depends on his\\/her use case.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EThe question here to be asked should be: \\u0022What\\u0027s the hook to implement aggregation results?\\u0022 as for d.o. we need a _full issue_ response while @sirkitree and @sethviebrock only want the files added.\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"8884147\",\"name\":\"clemens.tolboom\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-8884147\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/8884147\",\"created\":\"1402907919\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/125814\",\"id\":\"125814\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EI don\\u0027t think they want \\u0022only the files added\\u0022. I think we\\u0027re all on the same page. It makes no sense (for anyone) to return just the URIs to said resources when it has the potential to be so many. Instead, it should just include the data with it.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EThat being said, if there really is a option desired, is it possible to perhaps just add a toggle setting on the entity to \\u0022Include all sub-entity data\\u0022? If it\\u0027s checked it includes the data, if not, it just provides the URI to the entity.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EThis begs the question though: \\u0022Should all sub-entities get expanded?\\u0022; probably not. Especially since comments can be quite lengthy.\\u003C\\/p\\u003E\\n\\u003Cp\\u003ESo perhaps we should instead make the following toggle instead: \\u0022Allow this entity to be expanded in parent entities\\u0022. I could see us enabling this for taxonomy and files, but not comments (at least for d.o\\u0027s purposes). And then when, say, an entity references other entities, it checks if that entity has that option toggled and either 1) merges in the data or 2) provides the URI to that entity.\\u003C\\/p\\u003E\\n\\u003Cp\\u003Eedit: just updated some verbiage to make it a little clearer.\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9036831\",\"name\":\"markhalliwell\",\"homepage\":\"\",\"subject\":\"I don\\u0027t think they want \\u0022only\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9036831\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9036831\",\"created\":\"1407472749\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/501638\",\"id\":\"501638\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EAfter done some testing on D8 rest and hal is disagree with my previous comment. In Hal context its result has an _embed element whose items could contain interesting items to add upfront into the result. In D8 we have a views REST display type too build up ie a node with it\\u0027s relations. What is lacking is a display mode for JSON result.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EIs the lack of display mode the missing part?\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9040713\",\"name\":\"clemens.tolboom\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9040713\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9040713\",\"created\":\"1407590652\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/125814\",\"id\":\"125814\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EI want to expose a content type that contains a multiple taxonomy references and multiple image files.\\u003Cbr \\/\\u003E\\nI expected the JSON result for the node list to have resolved those references, but apparently thats not what happens.\\u003C\\/p\\u003E\\n\\u003Cp\\u003EHas anyone come up with an interim solution to this problem? (am I holding it wrong?)\\u003Cbr \\/\\u003E\\nShould I write a custom menu callback to serve the required JSON or do you handle the aggregation logic in the frontend?\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9230269\",\"name\":\"cjoy\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9230269\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9230269\",\"created\":\"1412792758\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/1502360\",\"id\":\"1502360\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EThe following post has a solution with a simple \\u0022?deep-load-refs\\u0022 at the end of URL: \\u003Ca href=\\u0022http:\\/\\/dropbucket.org\\/node\\/659\\u0022 rel=\\u0022nofollow\\u0022\\u003Ehttp:\\/\\/dropbucket.org\\/node\\/659\\u003C\\/a\\u003E\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9454095\",\"name\":\"pedrorocha\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9454095\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9454095\",\"created\":\"1419213716\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/218937\",\"id\":\"218937\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9519607\",\"name\":\"drumm\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9519607\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9519607\",\"created\":\"1421446814\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/3064\",\"id\":\"3064\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003E+1 to pedrorocha\\u0027s comment in #7\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[],\"cid\":\"9966401\",\"name\":\"TechNikh\",\"homepage\":\"\",\"subject\":\"\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-9966401\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/9966401\",\"created\":\"1432755664\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/372123\",\"id\":\"372123\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null},{\"comment_body\":{\"value\":\"\\u003Cp\\u003EI found a drupal-friendly work-around without modifying anything in the core. If anyone is interested, they can read this:\\u003Cbr \\/\\u003E\\n\\u003Ca href=\\u0022http:\\/\\/stackoverflow.com\\/questions\\/37033484\\/drupal-services-direct-file-url-instead-of-file-resource-reference\\/37033486#37033486\\u0022 rel=\\u0022nofollow\\u0022\\u003Ehttp:\\/\\/stackoverflow.com\\/questions\\/37033484\\/drupal-services-direct-file-...\\u003C\\/a\\u003E\\u003C\\/p\\u003E\",\"format\":\"1\"},\"field_attribute_contribution_to\":[],\"field_for_customer\":[],\"field_attribute_as_volunteer\":[\"1\",\"0\"],\"cid\":\"11155843\",\"name\":\"jigarius\",\"homepage\":\"\",\"subject\":\"I found a drupal-friendly\",\"url\":\"https:\\/\\/www.drupal.org\\/project\\/restws\\/issues\\/1978202#comment-11155843\",\"edit_url\":\"https:\\/\\/www.drupal.org\\/comment\\/edit\\/11155843\",\"created\":\"1462380450\",\"node\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/node\\/1978202\",\"id\":\"1978202\",\"resource\":\"node\"},\"author\":{\"uri\":\"https:\\/\\/www.drupal.org\\/api-d7\\/user\\/2492730\",\"id\":\"2492730\",\"resource\":\"user\"},\"feeds_item_guid\":null,\"feeds_item_url\":null,\"feed_nid\":null}]}"}