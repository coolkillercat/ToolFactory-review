{
    "title": "Quotable API Documentation",
    "endpoints": [
        {
            "name": "Get Random Quote",
            "description": "Returns a single random quote from the database. This method is deprecated in favor of Get Random Quotes.",
            "method": "GET",
            "url": "https://api.quotable.io/random",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "maxLength",
                    "type": "int",
                    "description": "The maximum length in characters.",
                    "default": null,
                    "example": 100
                },
                {
                    "name": "minLength",
                    "type": "int",
                    "description": "The minimum length in characters.",
                    "default": null,
                    "example": 50
                },
                {
                    "name": "tags",
                    "type": "string",
                    "description": "Get a random quote with specific tag(s). This takes a list of one or more tag names, separated by a comma (AND) or a pipe (OR).",
                    "default": null,
                    "example": "technology,famous-quotes"
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Get a random quote by one or more authors. The value can be an author name or slug.",
                    "default": null,
                    "example": "albert-einstein"
                },
                {
                    "name": "authorId",
                    "type": "string",
                    "description": "Deprecated. Same as author param, except it uses author _id instead of slug.",
                    "default": null,
                    "example": "12345"
                }
            ]
        },
        {
            "name": "Get Random Quotes",
            "description": "Get one or more random quotes from the database. This method supports several filters that can be used to get random quotes with specific properties.",
            "method": "GET",
            "url": "https://api.quotable.io/quotes/random",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "limit",
                    "type": "int",
                    "description": "The number of random quotes to retrieve.",
                    "default": 1,
                    "example": 5
                },
                {
                    "name": "maxLength",
                    "type": "int",
                    "description": "The maximum length in characters.",
                    "default": null,
                    "example": 100
                },
                {
                    "name": "minLength",
                    "type": "int",
                    "description": "The minimum length in characters.",
                    "default": null,
                    "example": 50
                },
                {
                    "name": "tags",
                    "type": "string",
                    "description": "Get a random quote with specific tag(s). This takes a list of one or more tag names, separated by a comma (AND) or a pipe (OR).",
                    "default": null,
                    "example": "technology,famous-quotes"
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Get a random quote by one or more authors. The value can be an author name or slug.",
                    "default": null,
                    "example": "albert-einstein"
                },
                {
                    "name": "authorId",
                    "type": "string",
                    "description": "Deprecated. Same as author param, except it uses author _id instead of slug.",
                    "default": null,
                    "example": "12345"
                }
            ]
        },
        {
            "name": "List Quotes",
            "description": "Get all quotes matching a given query. By default, this will return a paginated list of all quotes, sorted by _id.",
            "method": "GET",
            "url": "https://api.quotable.io/quotes",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "maxLength",
                    "type": "int",
                    "description": "The maximum length in characters.",
                    "default": null,
                    "example": 100
                },
                {
                    "name": "minLength",
                    "type": "int",
                    "description": "The minimum length in characters.",
                    "default": null,
                    "example": 50
                },
                {
                    "name": "tags",
                    "type": "string",
                    "description": "Filter quotes by tag(s). Takes a list of one or more tag names, separated by a comma (AND) or a pipe (OR).",
                    "default": null,
                    "example": "technology,famous-quotes"
                },
                {
                    "name": "author",
                    "type": "string",
                    "description": "Get quotes by a specific author. The value can be an author name or slug.",
                    "default": null,
                    "example": "albert-einstein"
                },
                {
                    "name": "authorId",
                    "type": "string",
                    "description": "Deprecated. Same as author param, except it uses author _id instead of slug.",
                    "default": null,
                    "example": "12345"
                },
                {
                    "name": "sortBy",
                    "type": "enum",
                    "description": "The field used to sort quotes.",
                    "default": "dateAdded",
                    "example": "author"
                },
                {
                    "name": "order",
                    "type": "enum",
                    "description": "The order in which results are sorted.",
                    "default": "asc",
                    "example": "desc"
                },
                {
                    "name": "limit",
                    "type": "int",
                    "description": "Sets the number of results per page.",
                    "default": 20,
                    "example": 50
                },
                {
                    "name": "page",
                    "type": "int",
                    "description": "The page of results to return.",
                    "default": 1,
                    "example": 2
                }
            ]
        },
        {
            "name": "Get Quote By ID",
            "description": "Get a quote by its ID.",
            "method": "GET",
            "url": "https://api.quotable.io/quotes/:id",
            "headers": [],
            "required_parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "The ID of the quote.",
                    "default": null,
                    "example": "12345"
                }
            ],
            "optional_parameters": []
        },
        {
            "name": "List Authors",
            "description": "Get all authors matching the given query. This endpoint can be used to list authors, with several options for sorting and filtering.",
            "method": "GET",
            "url": "https://api.quotable.io/authors",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "slug",
                    "type": "string",
                    "description": "Filter authors by slug. The value can be one or more author slugs.",
                    "default": null,
                    "example": "albert-einstein"
                },
                {
                    "name": "sortBy",
                    "type": "enum",
                    "description": "The field used to sort authors.",
                    "default": "name",
                    "example": "quoteCount"
                },
                {
                    "name": "order",
                    "type": "enum",
                    "description": "The order in which results are sorted.",
                    "default": "asc",
                    "example": "desc"
                },
                {
                    "name": "limit",
                    "type": "int",
                    "description": "Sets the number of results per page.",
                    "default": 20,
                    "example": 50
                },
                {
                    "name": "page",
                    "type": "int",
                    "description": "The page of results to return.",
                    "default": 1,
                    "example": 2
                }
            ]
        },
        {
            "name": "Search Quotes",
            "description": "Search for quotes by keywords, content, and/or author name. This method is powered by Atlas Search and is designed to power a search bar UI.",
            "method": "GET",
            "url": "https://api.quotable.io/search/quotes",
            "headers": [],
            "required_parameters": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "The search string. The query can be wrapped in quotes to search for an exact phrase.",
                    "default": null,
                    "example": "life happiness"
                }
            ],
            "optional_parameters": [
                {
                    "name": "fields",
                    "type": "string",
                    "description": "Specify the fields to search by. This takes a comma separated list of field names.",
                    "default": "content,author,tags",
                    "example": "author"
                },
                {
                    "name": "fuzzyMaxEdits",
                    "type": "int",
                    "description": "The maximum number of single-character edits required to match the specified search term.",
                    "default": 0,
                    "example": 1
                },
                {
                    "name": "fuzzyMaxExpansions",
                    "type": "int",
                    "description": "When fuzzy search is enabled, this is the maximum number of variations to generate and search for.",
                    "default": 50,
                    "example": 100
                },
                {
                    "name": "limit",
                    "type": "int",
                    "description": "The maximum number of results per page.",
                    "default": 20,
                    "example": 50
                },
                {
                    "name": "page",
                    "type": "int",
                    "description": "Sets the page number for pagination.",
                    "default": 1,
                    "example": 2
                }
            ]
        },
        {
            "name": "Search Authors",
            "description": "Search for authors by name. It is designed to power a search bar for authors that displays autocomplete suggestions as the user types.",
            "method": "GET",
            "url": "https://api.quotable.io/search/authors",
            "headers": [],
            "required_parameters": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "The search query.",
                    "default": null,
                    "example": "Einstein"
                }
            ],
            "optional_parameters": [
                {
                    "name": "autocomplete",
                    "type": "boolean",
                    "description": "Enables autocomplete matching.",
                    "default": true,
                    "example": true
                },
                {
                    "name": "matchThreshold",
                    "type": "int",
                    "description": "Sets the minimum number of search terms (words) that must match for an author to be included in results.",
                    "default": 2,
                    "example": 1
                },
                {
                    "name": "limit",
                    "type": "int",
                    "description": "Maximum number of results per page.",
                    "default": 20,
                    "example": 50
                },
                {
                    "name": "page",
                    "type": "int",
                    "description": "Sets the page number for pagination.",
                    "default": 1,
                    "example": 2
                }
            ]
        },
        {
            "name": "Get Author By Slug",
            "description": "Get a single author by slug. This method can be used to get author details such as bio, website link, and profile image.",
            "method": "GET",
            "url": "https://api.quotable.io/authors/:id",
            "headers": [],
            "required_parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "The slug of the author.",
                    "default": null,
                    "example": "albert-einstein"
                }
            ],
            "optional_parameters": []
        },
        {
            "name": "List Tags",
            "description": "Get a list of all tags.",
            "method": "GET",
            "url": "https://api.quotable.io/tags",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "sortBy",
                    "type": "enum",
                    "description": "The field used to sort tags.",
                    "default": "name",
                    "example": "quoteCount"
                },
                {
                    "name": "order",
                    "type": "enum",
                    "description": "The order in which results are sorted.",
                    "default": "asc",
                    "example": "desc"
                }
            ]
        }
    ]
}