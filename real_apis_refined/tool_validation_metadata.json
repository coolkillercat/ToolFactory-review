{
  "tools": [
    {
      "path": "extractor\\apidocs\\0\\connect_to_a_session_GET.py",
      "function_name": "connect_to_a_session",
      "api_description": "Streaming endpoint to deliver live updates to the client over a long-lived HTTP connection. Both players should connect to their tables right after a session is created.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\0\\create_a_session_GET.py",
      "function_name": "create_a_session",
      "api_description": "Session will be created. Client receives a session ID used for the rest of the API calls.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\0\\delete_a_session_GET.py",
      "function_name": "delete_a_session",
      "api_description": "Delete a session. Not needed as session expires after an hour of inactivity.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\0\\drop_piece_GET.py",
      "function_name": "drop_piece",
      "api_description": "Drop a piece on the board.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\0\\join_a_session_GET.py",
      "function_name": "join_a_session",
      "api_description": "Join a session by giving a name. There can only be at most 2 players in a session.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\0\\leave_a_table_GET.py",
      "function_name": "leave_a_table",
      "api_description": "Leave a session. Can only call this route when the game has not started.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\0\\\\leave_a_table_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\0\\start_the_game_GET.py",
      "function_name": "start_the_game",
      "api_description": "Start the game. Session must include 2 players.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\1\\create_key_GET.py",
      "function_name": "create_key",
      "api_description": "Creates a key. All parameters are optional.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\1\\\\create_key_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\1\\get_api_stats_GET.py",
      "function_name": "get_api_stats",
      "api_description": "Get some CountABC stats.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\1\\\\get_api_stats_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\1\\get_key_info_GET.py",
      "function_name": "get_key_info",
      "api_description": "Get information about a key. Optionally specify the namespace.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\1\\\\get_key_info_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\1\\get_key_value_GET.py",
      "function_name": "get_key_value",
      "api_description": "Get the value of a key. Optionally specify the namespace.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\1\\\\get_key_value_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\1\\hit_key_GET.py",
      "function_name": "hit_key",
      "api_description": "An easier way to track incrementing by one keys. This endpoint will create a key if it doesn't exist and increment it by one on each subsequent request. Optionally specify a namespace.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\1\\\\hit_key_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\1\\set_key_value_GET.py",
      "function_name": "set_key_value",
      "api_description": "Set the value of a key. Optionally specify the namespace. The key must be created with enable_reset set to true.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\1\\\\set_key_value_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\1\\update_key_value_GET.py",
      "function_name": "update_key_value",
      "api_description": "Updates a key with +/- amount. Optionally specify the namespace. The amount must be within update_lowerbound and update_upperbound specified during the creation of the key.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\1\\\\update_key_value_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\10\\create_json_POST.py",
      "function_name": "create_json",
      "api_description": "Create a JSON bin.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\10\\delete_json_DELETE.py",
      "function_name": [],
      "api_description": {
        "title": "Free JSON Storage API Documentation",
        "endpoints": [
          {
            "name": "Request JSON",
            "description": "Return a JSON bin by ID.",
            "method": "GET",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to request a private bin.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Create JSON",
            "description": "Create a JSON bin.",
            "method": "POST",
            "url": "https://json.extendsclass.com/bin",
            "headers": [
              {
                "name": "Api-key",
                "description": "Your API key.",
                "type": "string",
                "required": true,
                "example": "your-api-key"
              },
              {
                "name": "Security-key",
                "description": "The security key of your bin (maximum of 256 characters). The security key allows to protect your bin against requests, modifications, and deletions. The security key is required to update and delete your bin. The security key is required to request the private bins, but not required for the public bins.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              },
              {
                "name": "Private",
                "description": "The security key is required to request private bins. Public by default.",
                "type": "boolean",
                "required": false,
                "example": true
              }
            ],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Request all bin IDs",
            "description": "Return all bin IDs.",
            "method": "GET",
            "url": "https://json.extendsclass.com/bins",
            "headers": [
              {
                "name": "Api-key",
                "description": "Your API key.",
                "type": "string",
                "required": true,
                "example": "your-api-key"
              }
            ],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Update JSON",
            "description": "Update a JSON bin.",
            "method": "PUT",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to update a bin protected by a security key.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Partially update JSON",
            "description": "Partially update a JSON bin with JSON Merge Patch (default) or JSON PATCH.",
            "method": "PATCH",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to update a bin protected by a security key.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              },
              {
                "name": "Content-type",
                "description": "If you want to use the JSON-PATCH format then put the value: application/json-patch+json",
                "type": "string",
                "required": false,
                "example": "application/json-patch+json"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete JSON",
            "description": "Delete a JSON bin.",
            "method": "DELETE",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to delete a bin protected by a security key.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\10\\partially_update_json_PATCH.py",
      "function_name": [],
      "api_description": {
        "title": "Free JSON Storage API Documentation",
        "endpoints": [
          {
            "name": "Request JSON",
            "description": "Return a JSON bin by ID.",
            "method": "GET",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to request a private bin.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Create JSON",
            "description": "Create a JSON bin.",
            "method": "POST",
            "url": "https://json.extendsclass.com/bin",
            "headers": [
              {
                "name": "Api-key",
                "description": "Your API key.",
                "type": "string",
                "required": true,
                "example": "your-api-key"
              },
              {
                "name": "Security-key",
                "description": "The security key of your bin (maximum of 256 characters). The security key allows to protect your bin against requests, modifications, and deletions. The security key is required to update and delete your bin. The security key is required to request the private bins, but not required for the public bins.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              },
              {
                "name": "Private",
                "description": "The security key is required to request private bins. Public by default.",
                "type": "boolean",
                "required": false,
                "example": true
              }
            ],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Request all bin IDs",
            "description": "Return all bin IDs.",
            "method": "GET",
            "url": "https://json.extendsclass.com/bins",
            "headers": [
              {
                "name": "Api-key",
                "description": "Your API key.",
                "type": "string",
                "required": true,
                "example": "your-api-key"
              }
            ],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Update JSON",
            "description": "Update a JSON bin.",
            "method": "PUT",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to update a bin protected by a security key.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Partially update JSON",
            "description": "Partially update a JSON bin with JSON Merge Patch (default) or JSON PATCH.",
            "method": "PATCH",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to update a bin protected by a security key.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              },
              {
                "name": "Content-type",
                "description": "If you want to use the JSON-PATCH format then put the value: application/json-patch+json",
                "type": "string",
                "required": false,
                "example": "application/json-patch+json"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete JSON",
            "description": "Delete a JSON bin.",
            "method": "DELETE",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to delete a bin protected by a security key.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\10\\request_all_bin_ids_GET.py",
      "function_name": "request_all_bin_ids",
      "api_description": "Return all bin IDs.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\10\\request_json_GET.py",
      "function_name": "request_json",
      "api_description": "Return a JSON bin by ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\10\\update_json_PUT.py",
      "function_name": [],
      "api_description": {
        "title": "Free JSON Storage API Documentation",
        "endpoints": [
          {
            "name": "Request JSON",
            "description": "Return a JSON bin by ID.",
            "method": "GET",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to request a private bin.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Create JSON",
            "description": "Create a JSON bin.",
            "method": "POST",
            "url": "https://json.extendsclass.com/bin",
            "headers": [
              {
                "name": "Api-key",
                "description": "Your API key.",
                "type": "string",
                "required": true,
                "example": "your-api-key"
              },
              {
                "name": "Security-key",
                "description": "The security key of your bin (maximum of 256 characters). The security key allows to protect your bin against requests, modifications, and deletions. The security key is required to update and delete your bin. The security key is required to request the private bins, but not required for the public bins.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              },
              {
                "name": "Private",
                "description": "The security key is required to request private bins. Public by default.",
                "type": "boolean",
                "required": false,
                "example": true
              }
            ],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Request all bin IDs",
            "description": "Return all bin IDs.",
            "method": "GET",
            "url": "https://json.extendsclass.com/bins",
            "headers": [
              {
                "name": "Api-key",
                "description": "Your API key.",
                "type": "string",
                "required": true,
                "example": "your-api-key"
              }
            ],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Update JSON",
            "description": "Update a JSON bin.",
            "method": "PUT",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to update a bin protected by a security key.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Partially update JSON",
            "description": "Partially update a JSON bin with JSON Merge Patch (default) or JSON PATCH.",
            "method": "PATCH",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to update a bin protected by a security key.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              },
              {
                "name": "Content-type",
                "description": "If you want to use the JSON-PATCH format then put the value: application/json-patch+json",
                "type": "string",
                "required": false,
                "example": "application/json-patch+json"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete JSON",
            "description": "Delete a JSON bin.",
            "method": "DELETE",
            "url": "https://json.extendsclass.com/bin/:id",
            "headers": [
              {
                "name": "Security-key",
                "description": "Required to delete a bin protected by a security key.",
                "type": "string",
                "required": false,
                "example": "your-security-key"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The ID of the JSON bin",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\100\\full_height_capture_GET.py",
      "function_name": "full_height_capture",
      "api_description": "Capture a full-height screenshot of a website.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\100\\http_headers_capture_GET.py",
      "function_name": "http_headers_capture",
      "api_description": "Capture a screenshot of a website with custom HTTP headers.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\100\\thumbnail_capture_GET.py",
      "function_name": "thumbnail_capture",
      "api_description": "Capture a thumbnail of a website.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\101\\sv\u00e1tky_api_GET.py",
      "function_name": "sv\u8c29tky_api",
      "api_description": {
        "title": "Sv\u00e1tky API Documentation",
        "endpoints": [
          {
            "name": "Sv\u00e1tky API",
            "description": "Retrieves name day information based on date or name.",
            "method": "GET",
            "url": "https://svatky.adresa.info/",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date",
                "type": "string",
                "description": "The date in DDMM format",
                "default": null,
                "example": "0101"
              },
              {
                "name": "name",
                "type": "string",
                "description": "The name to look up",
                "default": null,
                "example": "Jan"
              },
              {
                "name": "lang",
                "type": "string",
                "description": "The language of the response, either 'cs' for Czech or 'sk' for Slovak",
                "default": "cs",
                "example": "cs"
              }
            ]
          }
        ]
      },
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\102\\get_latest_covid_19_data_GET.py",
      "function_name": "get_latest_covid_19_data",
      "api_description": "Fetches the latest number of confirmed cases, recoveries, and deaths from a public Google Sheet published by the team at the Center for Systems Science and Engineering (CSSE) at John Hopkins University. Returns both the raw regional breakouts as well as summary stats in JSON format.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\103\\batch_language_detection_GET.py",
      "function_name": "batch_language_detection",
      "api_description": "Use the batch language detection endpoint to request the API to identify a series of query texts at once.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\103\\standard_language_detection_GET.py",
      "function_name": "standard_language_detection",
      "api_description": "Detect any of 173 languages simply by passing in your URL encoded query text into the API's request URL.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\104\\get_top_50_stocks_discussed_on_reddit_wallstreetbets_GET.py",
      "function_name": "get_top_50_stocks_discussed_on_reddit_wallstreetbets",
      "api_description": "Retrieves the top 50 stocks discussed on the Reddit subreddit WallstreetBets.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\105\\get_current_comic_GET.py",
      "function_name": "get_current_comic",
      "api_description": "Fetches the current comic and its metadata.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\105\\get_specific_comic_GET.py",
      "function_name": "get_specific_comic",
      "api_description": "Fetches a specific comic and its metadata by comic number.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\106\\generate_bacon_ipsum_text_GET.py",
      "function_name": "generate_bacon_ipsum_text",
      "api_description": "Generates meaty lorem ipsum text.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\107\\get_book_by_id_GET.py",
      "function_name": "get_book_by_id",
      "api_description": "Get the corresponding book from its ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\107\\get_multiple_books_GET.py",
      "function_name": "get_multiple_books",
      "api_description": "Returns an array with a specified number of books.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\107\\get_multiple_quotes_GET.py",
      "function_name": "get_multiple_quotes",
      "api_description": "Returns an array with a specified number of quotes.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\107\\get_quote_by_id_GET.py",
      "function_name": "get_quote_by_id",
      "api_description": "Get the corresponding quote from its ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\107\\get_random_book_GET.py",
      "function_name": "get_random_book",
      "api_description": "Get a random book.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\107\\get_random_quote_GET.py",
      "function_name": "get_random_quote",
      "api_description": "Get a random quote.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\108\\get_active_scheduled_maintenances_GET.py",
      "function_name": "get_active_scheduled_maintenances",
      "api_description": "Get a list of any active maintenances. This endpoint will only return scheduled maintenances in the In Progress or Verifying state.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\108\\get_all_incidents_GET.py",
      "function_name": "get_all_incidents",
      "api_description": "Get a list of the 50 most recent incidents. This includes all unresolved incidents as well as those in the Resolved and Postmortem state.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\108\\get_all_scheduled_maintenances_GET.py",
      "function_name": "get_all_scheduled_maintenances",
      "api_description": "Get a list of the 50 most recent scheduled maintenances. This includes scheduled maintenances as well as those in the Completed state.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\108\\get_components_GET.py",
      "function_name": "get_components",
      "api_description": "Get the components for the page. Each component is listed along with its status.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\108\\get_status_GET.py",
      "function_name": "get_status",
      "api_description": "Get the status rollup for the whole page. This endpoint includes an indicator and a human description of the blended component status.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\108\\get_summary_GET.py",
      "function_name": "get_summary",
      "api_description": "Get a summary of the status page, including a status indicator, component statuses, unresolved incidents, and any upcoming or in-progress scheduled maintenances.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\108\\get_unresolved_incidents_GET.py",
      "function_name": "get_unresolved_incidents",
      "api_description": "Get a list of any unresolved incidents. This endpoint will only return incidents in the Investigating, Identified, or Monitoring state.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\108\\get_upcoming_scheduled_maintenances_GET.py",
      "function_name": "get_upcoming_scheduled_maintenances",
      "api_description": "Get a list of any upcoming maintenances. This endpoint will only return scheduled maintenances still in the Scheduled state.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\109\\create_account_POST.py",
      "function_name": "create_account",
      "api_description": "Creates an Account resource (Registration).",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\109\\delete_account_DELETE.py",
      "function_name": [],
      "api_description": {
        "title": "Mail.tm API Documentation",
        "endpoints": [
          {
            "name": "Get Domains",
            "description": "Retrieve a list of available domains.",
            "method": "GET",
            "url": "https://api.mail.tm/domains",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "page",
                "type": "int",
                "description": "The collection page number",
                "default": null,
                "example": 1
              }
            ]
          },
          {
            "name": "Get Domain by ID",
            "description": "Retrieve a domain by its ID.",
            "method": "GET",
            "url": "https://api.mail.tm/domains/{id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The domain you want to get with ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Create Account",
            "description": "Creates an Account resource (Registration).",
            "method": "POST",
            "url": "https://api.mail.tm/accounts",
            "headers": [],
            "required_parameters": [
              {
                "name": "address",
                "type": "string",
                "description": "Account's address.",
                "default": null,
                "example": "user@example.com"
              },
              {
                "name": "password",
                "type": "string",
                "description": "Account's password.",
                "default": null,
                "example": "password123"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Account by ID",
            "description": "Get an Account resource by its ID.",
            "method": "GET",
            "url": "https://api.mail.tm/accounts/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The account you want to get by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete Account",
            "description": "Deletes the Account resource.",
            "method": "DELETE",
            "url": "https://api.mail.tm/accounts/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The account you want to delete by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Current Account",
            "description": "Returns the Account resource that matches the Bearer token that sent the request.",
            "method": "GET",
            "url": "https://api.mail.tm/me",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Messages",
            "description": "Gets all the Message resources of a given page.",
            "method": "GET",
            "url": "https://api.mail.tm/messages",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "page",
                "type": "int",
                "description": "The collection page number",
                "default": null,
                "example": 1
              }
            ]
          },
          {
            "name": "Get Message by ID",
            "description": "Retrieves a Message resource with a specific ID.",
            "method": "GET",
            "url": "https://api.mail.tm/messages/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The message you want to get by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete Message",
            "description": "Deletes the Message resource.",
            "method": "DELETE",
            "url": "https://api.mail.tm/messages/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The message you want to delete by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Mark Message as Read",
            "description": "Marks a Message resource as read.",
            "method": "PATCH",
            "url": "https://api.mail.tm/messages/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The message you want to read by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Message Source",
            "description": "Gets a Message's Source resource.",
            "method": "GET",
            "url": "https://api.mail.tm/sources/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The source you want to get by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\109\\delete_message_DELETE.py",
      "function_name": [],
      "api_description": {
        "title": "Mail.tm API Documentation",
        "endpoints": [
          {
            "name": "Get Domains",
            "description": "Retrieve a list of available domains.",
            "method": "GET",
            "url": "https://api.mail.tm/domains",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "page",
                "type": "int",
                "description": "The collection page number",
                "default": null,
                "example": 1
              }
            ]
          },
          {
            "name": "Get Domain by ID",
            "description": "Retrieve a domain by its ID.",
            "method": "GET",
            "url": "https://api.mail.tm/domains/{id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The domain you want to get with ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Create Account",
            "description": "Creates an Account resource (Registration).",
            "method": "POST",
            "url": "https://api.mail.tm/accounts",
            "headers": [],
            "required_parameters": [
              {
                "name": "address",
                "type": "string",
                "description": "Account's address.",
                "default": null,
                "example": "user@example.com"
              },
              {
                "name": "password",
                "type": "string",
                "description": "Account's password.",
                "default": null,
                "example": "password123"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Account by ID",
            "description": "Get an Account resource by its ID.",
            "method": "GET",
            "url": "https://api.mail.tm/accounts/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The account you want to get by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete Account",
            "description": "Deletes the Account resource.",
            "method": "DELETE",
            "url": "https://api.mail.tm/accounts/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The account you want to delete by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Current Account",
            "description": "Returns the Account resource that matches the Bearer token that sent the request.",
            "method": "GET",
            "url": "https://api.mail.tm/me",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Messages",
            "description": "Gets all the Message resources of a given page.",
            "method": "GET",
            "url": "https://api.mail.tm/messages",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "page",
                "type": "int",
                "description": "The collection page number",
                "default": null,
                "example": 1
              }
            ]
          },
          {
            "name": "Get Message by ID",
            "description": "Retrieves a Message resource with a specific ID.",
            "method": "GET",
            "url": "https://api.mail.tm/messages/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The message you want to get by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete Message",
            "description": "Deletes the Message resource.",
            "method": "DELETE",
            "url": "https://api.mail.tm/messages/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The message you want to delete by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Mark Message as Read",
            "description": "Marks a Message resource as read.",
            "method": "PATCH",
            "url": "https://api.mail.tm/messages/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The message you want to read by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Message Source",
            "description": "Gets a Message's Source resource.",
            "method": "GET",
            "url": "https://api.mail.tm/sources/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The source you want to get by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\109\\get_account_by_id_GET.py",
      "function_name": "get_account_by_id",
      "api_description": "Get an Account resource by its ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\109\\get_current_account_GET.py",
      "function_name": "get_current_account",
      "api_description": "Returns the Account resource that matches the Bearer token that sent the request.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\109\\get_domains_GET.py",
      "function_name": "get_domains",
      "api_description": "Retrieve a list of available domains.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\109\\get_domain_by_id_GET.py",
      "function_name": "get_domain_by_id",
      "api_description": "Retrieve a domain by its ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\109\\get_messages_GET.py",
      "function_name": "get_messages",
      "api_description": "Gets all the Message resources of a given page.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\109\\get_message_by_id_GET.py",
      "function_name": "get_message_by_id",
      "api_description": "Retrieves a Message resource with a specific ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\109\\get_message_source_GET.py",
      "function_name": "get_message_source",
      "api_description": "Gets a Message's Source resource.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\109\\mark_message_as_read_PATCH.py",
      "function_name": [],
      "api_description": {
        "title": "Mail.tm API Documentation",
        "endpoints": [
          {
            "name": "Get Domains",
            "description": "Retrieve a list of available domains.",
            "method": "GET",
            "url": "https://api.mail.tm/domains",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "page",
                "type": "int",
                "description": "The collection page number",
                "default": null,
                "example": 1
              }
            ]
          },
          {
            "name": "Get Domain by ID",
            "description": "Retrieve a domain by its ID.",
            "method": "GET",
            "url": "https://api.mail.tm/domains/{id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The domain you want to get with ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Create Account",
            "description": "Creates an Account resource (Registration).",
            "method": "POST",
            "url": "https://api.mail.tm/accounts",
            "headers": [],
            "required_parameters": [
              {
                "name": "address",
                "type": "string",
                "description": "Account's address.",
                "default": null,
                "example": "user@example.com"
              },
              {
                "name": "password",
                "type": "string",
                "description": "Account's password.",
                "default": null,
                "example": "password123"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Account by ID",
            "description": "Get an Account resource by its ID.",
            "method": "GET",
            "url": "https://api.mail.tm/accounts/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The account you want to get by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete Account",
            "description": "Deletes the Account resource.",
            "method": "DELETE",
            "url": "https://api.mail.tm/accounts/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The account you want to delete by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Current Account",
            "description": "Returns the Account resource that matches the Bearer token that sent the request.",
            "method": "GET",
            "url": "https://api.mail.tm/me",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Messages",
            "description": "Gets all the Message resources of a given page.",
            "method": "GET",
            "url": "https://api.mail.tm/messages",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "page",
                "type": "int",
                "description": "The collection page number",
                "default": null,
                "example": 1
              }
            ]
          },
          {
            "name": "Get Message by ID",
            "description": "Retrieves a Message resource with a specific ID.",
            "method": "GET",
            "url": "https://api.mail.tm/messages/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The message you want to get by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete Message",
            "description": "Deletes the Message resource.",
            "method": "DELETE",
            "url": "https://api.mail.tm/messages/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The message you want to delete by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Mark Message as Read",
            "description": "Marks a Message resource as read.",
            "method": "PATCH",
            "url": "https://api.mail.tm/messages/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The message you want to read by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Message Source",
            "description": "Gets a Message's Source resource.",
            "method": "GET",
            "url": "https://api.mail.tm/sources/{id}",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "Bearer token",
                "default": null,
                "example": "Bearer TOKEN"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "The source you want to get by ID",
                "default": null,
                "example": "12345"
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\11\\get_quote_GET.py",
      "function_name": "get_quote",
      "api_description": "Selects a random quote using a passed numeric key. If the key is not specified, the server generates a random key. The key influences the choice of quotation.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\110\\consultar_cep_GET.py",
      "function_name": "consultar_cep",
      "api_description": "Consulta informa\u00e7\u00f5es de um CEP espec\u00edfico.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\110\\consultar_encomenda_GET.py",
      "function_name": "consultar_encomenda",
      "api_description": "Consulta informa\u00e7\u00f5es de rastreamento de uma encomenda.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\111\\get_multiple_quotes_GET.py",
      "function_name": "get_multiple_quotes",
      "api_description": "Returns an array with a specified number of Ron Swanson quotes.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\111\\get_random_quote_GET.py",
      "function_name": "get_random_quote",
      "api_description": "Returns an array with one random Ron Swanson quote.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\111\\search_quotes_GET.py",
      "function_name": "search_quotes",
      "api_description": "Returns an array of quotes matching the search term without case sensitivity.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\112\\get_list_of_shows_GET.py",
      "function_name": "get_list_of_shows",
      "api_description": "Retrieves a list of available show slugs.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\112\\get_random_quote_from_show_GET.py",
      "function_name": "get_random_quote_from_show",
      "api_description": "Retrieves a random quote from a specific show.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\112\\get_random_quote_GET.py",
      "function_name": "get_random_quote",
      "api_description": "Retrieves a random quote from all available quotes.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\112\\get_random_quote__censored__GET.py",
      "function_name": "get_random_quote__censored_",
      "api_description": "Retrieves a random quote from all available quotes, excluding those with adult language.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\113\\check_email_GET.py",
      "function_name": "check_email",
      "api_description": "Checks for new email on the server.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\113\\delete_email_POST.py",
      "function_name": "delete_email",
      "api_description": "Deletes the emails from the server.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\113\\extend_POST.py",
      "function_name": "extend",
      "api_description": "Extends the email address time by 1 hour. A maximum of 2 hours can be extended.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\113\\fetch_email_GET.py",
      "function_name": "fetch_email",
      "api_description": "Gets the contents of an email.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\113\\forget_me_POST.py",
      "function_name": "forget_me",
      "api_description": "Forgets the current email address. This will not stop the session, the existing session will be maintained.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\113\\get_email_address_GET.py",
      "function_name": "get_email_address",
      "api_description": "Initializes a session and sets the client with an email address. If the session already exists, it returns the email address details of the existing session.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\113\\get_email_list_GET.py",
      "function_name": "get_email_list",
      "api_description": "Gets a maximum of 20 messages from the specified offset.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\113\\set_email_user_POST.py",
      "function_name": "set_email_user",
      "api_description": "Sets the email address to a different email address.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\114\\get_all_cards_GET.py",
      "function_name": "get_all_cards",
      "api_description": "Retrieves all cards with a maximum of 60 cards per request.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\114\\get_card_by_id_GET.py",
      "function_name": "get_card_by_id",
      "api_description": "Retrieves a card by its ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\115\\debug_bedrock_GET.py",
      "function_name": "debug_bedrock",
      "api_description": "Debugs the response of a Minecraft Bedrock server.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\115\\debug_ping_GET.py",
      "function_name": "debug_ping",
      "api_description": "Debugs the ping response of a Minecraft server.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\115\\debug_query_GET.py",
      "function_name": "debug_query",
      "api_description": "Debugs the query response of a Minecraft server.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\115\\get_bedrock_server_status_GET.py",
      "function_name": "get_bedrock_server_status",
      "api_description": "Retrieves the status of a Minecraft Bedrock server.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\115\\get_server_icon_GET.py",
      "function_name": "get_server_icon",
      "api_description": "Retrieves the icon of a Minecraft server.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\115\\get_server_status_GET.py",
      "function_name": "get_server_status",
      "api_description": "Retrieves the status of a Minecraft server.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\115\\http_status_code_endpoint_for_bedrock_GET.py",
      "function_name": "http_status_code_endpoint_for_bedrock",
      "api_description": "Checks if a Bedrock server is online or offline using HTTP status codes.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\115\\http_status_code_endpoint_GET.py",
      "function_name": "http_status_code_endpoint",
      "api_description": "Checks if a server is online or offline using HTTP status codes.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\116\\get_mount_by_id_GET.py",
      "function_name": "get_mount_by_id",
      "api_description": "Retrieves details of a specific mount by its ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\117\\categories_GET.py",
      "function_name": "categories",
      "api_description": "Returns a list of all available joke categories.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\117\\endpoints_GET.py",
      "function_name": "endpoints",
      "api_description": "Returns a list of all available endpoints, their usage, and a short description each.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\117\\flags_GET.py",
      "function_name": "flags",
      "api_description": "Returns a list of all available blacklist flags.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\117\\formats_GET.py",
      "function_name": "formats",
      "api_description": "Returns a list of all available response formats.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\117\\get_joke_GET.py",
      "function_name": "get_joke",
      "api_description": "Fetches a joke from the specified categories with optional filters.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\117\\info_GET.py",
      "function_name": "info",
      "api_description": "Provides information about JokeAPI and its jokes.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\117\\language_code_GET.py",
      "function_name": "language_code",
      "api_description": "Returns the ISO 639-1 language code of a provided language.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\117\\ping_GET.py",
      "function_name": "ping",
      "api_description": "Returns a parameter named 'ping' that contains the word 'Pong!' and a 13-character UNIX timestamp.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\117\\submit_joke_POST.py",
      "function_name": "submit_joke",
      "api_description": "Submits a joke to be reviewed and added to JokeAPI's official jokes.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\117\\supported_languages_GET.py",
      "function_name": "supported_languages",
      "api_description": "Returns lists of supported languages in jokes and system messages.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\118\\get_all_active_players_GET.py",
      "function_name": "get_all_active_players",
      "api_description": "Retrieves all active players.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_all_advanced_stats_GET.py",
      "function_name": "get_all_advanced_stats",
      "api_description": "Retrieves all advanced stats.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_all_games_GET.py",
      "function_name": "get_all_games",
      "api_description": "Retrieves all games.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_all_players_GET.py",
      "function_name": "get_all_players",
      "api_description": "Retrieves all players.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_all_stats_GET.py",
      "function_name": "get_all_stats",
      "api_description": "Retrieves all stats.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_all_teams_GET.py",
      "function_name": "get_all_teams",
      "api_description": "Retrieves all teams.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_averages_GET.py",
      "function_name": "get_averages",
      "api_description": "Retrieves season averages.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_a_specific_game_GET.py",
      "function_name": "get_a_specific_game",
      "api_description": "Retrieves a specific game.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_a_specific_player_GET.py",
      "function_name": "get_a_specific_player",
      "api_description": "Retrieves a specific player.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_a_specific_team_GET.py",
      "function_name": "get_a_specific_team",
      "api_description": "Retrieves a specific team.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_betting_odds_GET.py",
      "function_name": "get_betting_odds",
      "api_description": "Retrieves betting odds.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_box_scores_GET.py",
      "function_name": "get_box_scores",
      "api_description": "Retrieves all box scores.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_leaders_GET.py",
      "function_name": "get_leaders",
      "api_description": "Retrieves regular season per game leaders for specific stat categories.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_live_box_scores_GET.py",
      "function_name": "get_live_box_scores",
      "api_description": "Retrieves all live box scores for the current day updated in real time.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\118\\get_team_standings_GET.py",
      "function_name": "get_team_standings",
      "api_description": "Retrieves regular season team standings.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\119\\predict_nationality_from_a_name_GET.py",
      "function_name": "predict_nationality_from_a_name",
      "api_description": "Predicts the nationality of a given name.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\12\\base_rate_GET.py",
      "function_name": "base_rate",
      "api_description": "Rates quote against the EUR by default. You can quote against other currencies using the base parameter.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\12\\currencies_GET.py",
      "function_name": "currencies",
      "api_description": "Returns a list of currencies with their names and symbols.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\12\\geolocation_GET.py",
      "function_name": "geolocation",
      "api_description": "Returns your visitor's country code by geolocating your visitor via CloudFlare IP geolocation. It's meant to be used in the frontend of your application by having the visitor's browser make the request.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\12\\historical_rates_GET.py",
      "function_name": "historical_rates",
      "api_description": "A date parameter returns historical rates data for any date since 04.01.1999.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\12\\latest_rates_GET.py",
      "function_name": "latest_rates",
      "api_description": "Currency rates track foreign exchange reference rates published by the European Central Bank. The data refreshes around 16:00 CET every working day.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\12\\vat_validation_GET.py",
      "function_name": "vat_validation",
      "api_description": "The VAT validation endpoint allows you to check whether a VAT number is valid. If the VAT number is valid, it returns information about the company with the country's VAT rates.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\120\\get_contributions_GET.py",
      "function_name": "get_contributions",
      "api_description": "Load all contributions by users of the site during December, ordered by newest first, also includes the user who made the contribution.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\120\\get_contributions_meta_GET.py",
      "function_name": "get_contributions_meta",
      "api_description": "Load information about all the contributions this year.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\120\\get_organisations_GET.py",
      "function_name": "get_organisations",
      "api_description": "Load all organisations that have signed up to the site, also includes the users that belong to each organisation.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\120\\get_organisation_GET.py",
      "function_name": "get_organisation",
      "api_description": "Load information for a specific organisation.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\120\\get_projects_GET.py",
      "function_name": "get_projects",
      "api_description": "All suggested projects on the site, ordered alphabetically.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\120\\get_users_GET.py",
      "function_name": "get_users",
      "api_description": "Load all users who have signed up to the site, ordered by how many contributions they have sent so far in December, also includes their organisation(s) and contributions.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\120\\get_user_GET.py",
      "function_name": "get_user",
      "api_description": "Load information for a specific user.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\121\\collection_GET.py",
      "function_name": "collection",
      "api_description": "Request details about a user's collection.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\121\\family_items_GET.py",
      "function_name": "family_items",
      "api_description": "Retrieve information about more abstract or esoteric concepts represented by a family in the BGG database.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\121\\forums_GET.py",
      "function_name": "forums",
      "api_description": "Request a list of threads in a particular forum.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\121\\forum_lists_GET.py",
      "function_name": "forum_lists",
      "api_description": "Request a list of forums for a particular type/id.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\121\\guilds_GET.py",
      "function_name": "guilds",
      "api_description": "Request information about particular guilds.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\121\\plays_GET.py",
      "function_name": "plays",
      "api_description": "Request plays logged by a particular user or for a particular item.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\121\\thing_items_GET.py",
      "function_name": [],
      "api_description": {
        "title": "BGG XML API2 Documentation",
        "endpoints": [
          {
            "name": "Thing Items",
            "description": "Retrieve information about physical, tangible products in the BGG database.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/thing?",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "Specifies the id of the thing(s) to retrieve. Can be a comma-delimited list of ids.",
                "default": null,
                "example": "123,456"
              }
            ],
            "optional_parameters": [
              {
                "name": "type",
                "type": "string",
                "description": "Specifies the type of thing to filter results by. Can be a comma-delimited list of types.",
                "default": null,
                "example": "boardgame,boardgameexpansion"
              },
              {
                "name": "versions",
                "type": "integer",
                "description": "Returns version info for the item.",
                "default": null,
                "example": "1"
              },
              {
                "name": "videos",
                "type": "integer",
                "description": "Returns videos for the item.",
                "default": null,
                "example": "1"
              },
              {
                "name": "stats",
                "type": "integer",
                "description": "Returns ranking and rating stats for the item.",
                "default": null,
                "example": "1"
              },
              {
                "name": "historical",
                "type": "integer",
                "description": "Not currently supported. Returns historical data over time.",
                "default": null,
                "example": "1"
              },
              {
                "name": "marketplace",
                "type": "integer",
                "description": "Returns marketplace data.",
                "default": null,
                "example": "1"
              },
              {
                "name": "comments",
                "type": "integer",
                "description": "Returns all comments about the item. Also includes ratings when commented.",
                "default": null,
                "example": "1"
              },
              {
                "name": "ratingcomments",
                "type": "integer",
                "description": "Returns all ratings for the item. Also includes comments when rated.",
                "default": null,
                "example": "1"
              },
              {
                "name": "page",
                "type": "integer",
                "description": "Controls the page of data to see for historical info, comments, and ratings data. Defaults to 1.",
                "default": 1,
                "example": "1"
              },
              {
                "name": "pagesize",
                "type": "integer",
                "description": "Set the number of records to return in paging. Minimum is 10, maximum is 100.",
                "default": null,
                "example": "50"
              },
              {
                "name": "from",
                "type": "string",
                "description": "Not currently supported. Filter results from a specific date (YYYY-MM-DD).",
                "default": null,
                "example": "2023-01-01"
              },
              {
                "name": "to",
                "type": "string",
                "description": "Not currently supported. Filter results to a specific date (YYYY-MM-DD).",
                "default": null,
                "example": "2023-12-31"
              }
            ]
          },
          {
            "name": "Family Items",
            "description": "Retrieve information about more abstract or esoteric concepts represented by a family in the BGG database.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/family?",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "Specifies the id of the family to retrieve. Can be a comma-delimited list of ids.",
                "default": null,
                "example": "123,456"
              }
            ],
            "optional_parameters": [
              {
                "name": "type",
                "type": "string",
                "description": "Specifies the type of family to filter results by. Can be a comma-delimited list of types.",
                "default": null,
                "example": "rpg,boardgamefamily"
              }
            ]
          },
          {
            "name": "Forum Lists",
            "description": "Request a list of forums for a particular type/id.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/forumlist?",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "Specifies the id of the type of database entry you want the forum list for.",
                "default": null,
                "example": "123"
              }
            ],
            "optional_parameters": [
              {
                "name": "type",
                "type": "string",
                "description": "The type of entry in the database.",
                "default": null,
                "example": "thing"
              }
            ]
          },
          {
            "name": "Forums",
            "description": "Request a list of threads in a particular forum.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/forum?",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "Specifies the id of the forum.",
                "default": null,
                "example": "123"
              }
            ],
            "optional_parameters": [
              {
                "name": "page",
                "type": "integer",
                "description": "The page of the thread list to return; page size is 50.",
                "default": 1,
                "example": "1"
              }
            ]
          },
          {
            "name": "Threads",
            "description": "Request forum threads by thread id.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/thread?",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "Specifies the id of the thread to retrieve.",
                "default": null,
                "example": "123"
              }
            ],
            "optional_parameters": [
              {
                "name": "minarticleid",
                "type": "string",
                "description": "Filters the results so that only articles with an equal or higher id than specified will be returned.",
                "default": null,
                "example": "100"
              },
              {
                "name": "minarticledate",
                "type": "string",
                "description": "Filters the results so that only articles on the specified date or later will be returned (YYYY-MM-DD).",
                "default": null,
                "example": "2023-01-01"
              },
              {
                "name": "minarticledate",
                "type": "string",
                "description": "Filters the results so that only articles after the specified date and time (YYYY-MM-DD HH:MM:SS) or later will be returned.",
                "default": null,
                "example": "2023-01-01 12:00:00"
              },
              {
                "name": "count",
                "type": "integer",
                "description": "Limits the number of articles returned to no more than specified.",
                "default": null,
                "example": "10"
              },
              {
                "name": "username",
                "type": "string",
                "description": "Not currently supported.",
                "default": null,
                "example": "john_doe"
              }
            ]
          },
          {
            "name": "Users",
            "description": "Request basic public profile information about a user by username.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/user?",
            "headers": [],
            "required_parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "Specifies the user name (only one user is requestable at a time).",
                "default": null,
                "example": "john_doe"
              }
            ],
            "optional_parameters": [
              {
                "name": "buddies",
                "type": "integer",
                "description": "Turns on optional buddies reporting. Results are paged.",
                "default": null,
                "example": "1"
              },
              {
                "name": "guilds",
                "type": "integer",
                "description": "Turns on optional guilds reporting. Results are paged.",
                "default": null,
                "example": "1"
              },
              {
                "name": "hot",
                "type": "integer",
                "description": "Include the user's hot 10 list from their profile. Omitted if empty.",
                "default": null,
                "example": "1"
              },
              {
                "name": "top",
                "type": "integer",
                "description": "Include the user's top 10 list from their profile. Omitted if empty.",
                "default": null,
                "example": "1"
              },
              {
                "name": "domain",
                "type": "string",
                "description": "Controls the domain for the users hot 10 and top 10 lists. The default is boardgame.",
                "default": "boardgame",
                "example": "rpg"
              },
              {
                "name": "page",
                "type": "integer",
                "description": "Specifies the page of buddy and guild results to return. The default page is 1.",
                "default": 1,
                "example": "1"
              }
            ]
          },
          {
            "name": "Guilds",
            "description": "Request information about particular guilds.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/guild?",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "string",
                "description": "ID of the guild you want to view.",
                "default": null,
                "example": "123"
              }
            ],
            "optional_parameters": [
              {
                "name": "members",
                "type": "integer",
                "description": "Include member roster in the results. Member list is paged and sorted.",
                "default": null,
                "example": "1"
              },
              {
                "name": "sort",
                "type": "string",
                "description": "Specifies how to sort the members list; default is username.",
                "default": "username",
                "example": "date"
              },
              {
                "name": "page",
                "type": "integer",
                "description": "The page of the members list to return. Page size is 25.",
                "default": 1,
                "example": "1"
              }
            ]
          },
          {
            "name": "Plays",
            "description": "Request plays logged by a particular user or for a particular item.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/plays?",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "username",
                "type": "string",
                "description": "Name of the player you want to request play information for. Data is returned in backwards-chronological form.",
                "default": null,
                "example": "john_doe"
              },
              {
                "name": "id",
                "type": "string",
                "description": "Id number of the item you want to request play information for. Data is returned in backwards-chronological form.",
                "default": null,
                "example": "123"
              },
              {
                "name": "type",
                "type": "string",
                "description": "Type of the item you want to request play information for. Valid types include: thing, family.",
                "default": null,
                "example": "thing"
              },
              {
                "name": "mindate",
                "type": "string",
                "description": "Returns only plays of the specified date or later (YYYY-MM-DD).",
                "default": null,
                "example": "2023-01-01"
              },
              {
                "name": "maxdate",
                "type": "string",
                "description": "Returns only plays of the specified date or earlier (YYYY-MM-DD).",
                "default": null,
                "example": "2023-12-31"
              },
              {
                "name": "subtype",
                "type": "string",
                "description": "Limits play results to the specified TYPE; boardgame is the default. Valid types include: boardgame, boardgameexpansion, boardgameaccessory, boardgameintegration, boardgamecompilation, boardgameimplementation, rpg, rpgitem, videogame.",
                "default": "boardgame",
                "example": "boardgame"
              },
              {
                "name": "page",
                "type": "integer",
                "description": "The page of information to request. Page size is 100 records.",
                "default": 1,
                "example": "1"
              }
            ]
          },
          {
            "name": "Collection",
            "description": "Request details about a user's collection.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/collection?",
            "headers": [],
            "required_parameters": [
              {
                "name": "username",
                "type": "string",
                "description": "Name of the user to request the collection for.",
                "default": null,
                "example": "john_doe"
              }
            ],
            "optional_parameters": [
              {
                "name": "version",
                "type": "integer",
                "description": "Returns version info for each item in your collection.",
                "default": null,
                "example": "1"
              },
              {
                "name": "subtype",
                "type": "string",
                "description": "Specifies which collection you want to retrieve. TYPE may be boardgame, boardgameexpansion, boardgameaccessory, rpgitem, rpgissue, or videogame; the default is boardgame.",
                "default": "boardgame",
                "example": "boardgame"
              },
              {
                "name": "excludesubtype",
                "type": "string",
                "description": "Specifies which subtype you want to exclude from the results.",
                "default": null,
                "example": "boardgameexpansion"
              },
              {
                "name": "id",
                "type": "string",
                "description": "Filter collection to specifically listed item(s). Can be a comma-delimited list of item ids.",
                "default": null,
                "example": "123,456"
              },
              {
                "name": "brief",
                "type": "integer",
                "description": "Returns more abbreviated results.",
                "default": null,
                "example": "1"
              },
              {
                "name": "stats",
                "type": "integer",
                "description": "Returns expanded rating/ranking info for the collection.",
                "default": null,
                "example": "1"
              },
              {
                "name": "own",
                "type": "integer",
                "description": "Filter for owned games. Set to 0 to exclude these items so marked. Set to 1 for returning owned games and 0 for non-owned games.",
                "default": null,
                "example": "1"
              },
              {
                "name": "rated",
                "type": "integer",
                "description": "Filter for whether an item has been rated. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                "default": null,
                "example": "1"
              },
              {
                "name": "played",
                "type": "integer",
                "description": "Filter for whether an item has been played. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                "default": null,
                "example": "1"
              },
              {
                "name": "comment",
                "type": "integer",
                "description": "Filter for items that have been commented. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                "default": null,
                "example": "1"
              },
              {
                "name": "trade",
                "type": "integer",
                "description": "Filter for items marked for trade. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                "default": null,
                "example": "1"
              },
              {
                "name": "want",
                "type": "integer",
                "description": "Filter for items wanted in trade. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                "default": null,
                "example": "1"
              },
              {
                "name": "wishlist",
                "type": "integer",
                "description": "Filter for items on the wishlist. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                "default": null,
                "example": "1"
              },
              {
                "name": "wishlistpriority",
                "type": "integer",
                "description": "Filter for wishlist priority. Returns only items of the specified priority.",
                "default": null,
                "example": "1"
              },
              {
                "name": "preordered",
                "type": "integer",
                "description": "Filter for pre-ordered games. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                "default": null,
                "example": "1"
              },
              {
                "name": "wanttoplay",
                "type": "integer",
                "description": "Filter for items marked as wanting to play. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                "default": null,
                "example": "1"
              },
              {
                "name": "wanttobuy",
                "type": "integer",
                "description": "Filter for ownership flag. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                "default": null,
                "example": "1"
              }
            ]
          }
        ]
      },
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\121\\\\thing_items_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\121\\threads_GET.py",
      "function_name": "threads",
      "api_description": "Request forum threads by thread id.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\121\\\\threads_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\121\\users_GET.py",
      "function_name": "users",
      "api_description": "Request basic public profile information about a user by username.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\122\\all_card_archetypes_GET.py",
      "function_name": "all_card_archetypes",
      "api_description": "Retrieve all current Yu-Gi-Oh! Card Archetype Names stored in the database.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\122\\all_card_sets_GET.py",
      "function_name": "all_card_sets",
      "api_description": "Retrieve all current Yu-Gi-Oh! Card Set Names stored in the database.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\122\\card_set_information_GET.py",
      "function_name": "card_set_information",
      "api_description": "Retrieve information about a specific card set using its set code.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\122\\check_database_version_GET.py",
      "function_name": "check_database_version",
      "api_description": "Check the current version of the card database.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\122\\get_card_information_GET.py",
      "function_name": [],
      "api_description": {
        "title": "Yu-Gi-Oh! API Documentation",
        "endpoints": [
          {
            "name": "Get Card Information",
            "description": "Retrieve detailed information about Yu-Gi-Oh! cards using various filters.",
            "method": "GET",
            "url": "https://db.ygoprodeck.com/api/v7/cardinfo.php",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "The exact name of the card. Multiple names can be separated by |.",
                "default": null,
                "example": "Dark Magician|Blue-Eyes White Dragon"
              },
              {
                "name": "fname",
                "type": "string",
                "description": "A fuzzy search using a string.",
                "default": null,
                "example": "Magician"
              },
              {
                "name": "id",
                "type": "string",
                "description": "The 8-digit passcode of the card. Multiple IDs can be separated by commas.",
                "default": null,
                "example": "6983839,93221206"
              },
              {
                "name": "konami_id",
                "type": "string",
                "description": "The Konami ID of the card.",
                "default": null,
                "example": "12345678"
              },
              {
                "name": "type",
                "type": "string",
                "description": "The type of card to filter by. Multiple types can be separated by commas.",
                "default": null,
                "example": "Effect Monster,Spell Card"
              },
              {
                "name": "atk",
                "type": "string",
                "description": "Filter by ATK value. Use lt, lte, gt, gte for comparisons.",
                "default": null,
                "example": "lt2500"
              },
              {
                "name": "def",
                "type": "string",
                "description": "Filter by DEF value. Use lt, lte, gt, gte for comparisons.",
                "default": null,
                "example": "gte2000"
              },
              {
                "name": "level",
                "type": "string",
                "description": "Filter by card level/RANK. Use lt, lte, gt, gte for comparisons.",
                "default": null,
                "example": "lte8"
              },
              {
                "name": "race",
                "type": "string",
                "description": "Filter by the card race/type (e.g., Spellcaster, Warrior). Multiple races can be separated by commas.",
                "default": null,
                "example": "Spellcaster,Warrior"
              },
              {
                "name": "attribute",
                "type": "string",
                "description": "Filter by the card attribute. Multiple attributes can be separated by commas.",
                "default": null,
                "example": "DARK,EARTH"
              },
              {
                "name": "link",
                "type": "string",
                "description": "Filter the cards by Link value.",
                "default": null,
                "example": "2"
              },
              {
                "name": "linkmarker",
                "type": "string",
                "description": "Filter the cards by Link Marker value. Multiple values can be separated by commas.",
                "default": null,
                "example": "Top,Bottom"
              },
              {
                "name": "scale",
                "type": "string",
                "description": "Filter the cards by Pendulum Scale value.",
                "default": null,
                "example": "4"
              },
              {
                "name": "cardset",
                "type": "string",
                "description": "Filter the cards by card set.",
                "default": null,
                "example": "Metal Raiders"
              },
              {
                "name": "archetype",
                "type": "string",
                "description": "Filter the cards by archetype.",
                "default": null,
                "example": "Blue-Eyes"
              },
              {
                "name": "banlist",
                "type": "string",
                "description": "Filter the cards by banlist (TCG, OCG, Goat).",
                "default": null,
                "example": "TCG"
              },
              {
                "name": "sort",
                "type": "string",
                "description": "Sort the order of the cards (atk, def, name, type, level, id, new).",
                "default": null,
                "example": "atk"
              },
              {
                "name": "format",
                "type": "string",
                "description": "Sort the format of the cards (tcg, goat, ocg goat, speed duel, rush duel, duel links).",
                "default": null,
                "example": "tcg"
              },
              {
                "name": "misc",
                "type": "string",
                "description": "Pass 'yes' to show additional response info.",
                "default": null,
                "example": "yes"
              },
              {
                "name": "staple",
                "type": "string",
                "description": "Check if card is a staple.",
                "default": null,
                "example": "yes"
              },
              {
                "name": "has_effect",
                "type": "boolean",
                "description": "Check if a card has an effect or not.",
                "default": null,
                "example": "true"
              },
              {
                "name": "startdate",
                "type": "string",
                "description": "Filter based on cards' release date. Format as YYYY-mm-dd.",
                "default": null,
                "example": "2000-01-01"
              },
              {
                "name": "enddate",
                "type": "string",
                "description": "Filter based on cards' release date. Format as YYYY-mm-dd.",
                "default": null,
                "example": "2002-08-23"
              },
              {
                "name": "dateregion",
                "type": "string",
                "description": "Specify the date region as 'tcg' (default) or 'ocg'.",
                "default": null,
                "example": "tcg"
              }
            ]
          },
          {
            "name": "Random Card",
            "description": "Retrieve a random Yu-Gi-Oh! card.",
            "method": "GET",
            "url": "https://db.ygoprodeck.com/api/v7/randomcard.php",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "All Card Sets",
            "description": "Retrieve all current Yu-Gi-Oh! Card Set Names stored in the database.",
            "method": "GET",
            "url": "https://db.ygoprodeck.com/api/v7/cardsets.php",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Card Set Information",
            "description": "Retrieve information about a specific card set using its set code.",
            "method": "GET",
            "url": "https://db.ygoprodeck.com/api/v7/cardsetsinfo.php",
            "headers": [],
            "required_parameters": [
              {
                "name": "setcode",
                "type": "string",
                "description": "The code of the card set.",
                "default": null,
                "example": "SDY-046"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "All Card Archetypes",
            "description": "Retrieve all current Yu-Gi-Oh! Card Archetype Names stored in the database.",
            "method": "GET",
            "url": "https://db.ygoprodeck.com/api/v7/archetypes.php",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Check Database Version",
            "description": "Check the current version of the card database.",
            "method": "GET",
            "url": "https://db.ygoprodeck.com/api/v7/checkDBVer.php",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\122\\\\get_card_information_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\122\\random_card_GET.py",
      "function_name": "random_card",
      "api_description": "Retrieve a random Yu-Gi-Oh! card.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\123\\album_url_endpoint_GET.py",
      "function_name": "album_url_endpoint",
      "api_description": "Fetches details for a specific album based on the provided JioSaavn album link.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\123\\\\album_url_endpoint_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\123\\lyrics_endpoint_GET.py",
      "function_name": "lyrics_endpoint",
      "api_description": "Fetches lyrics for a specific song based on the provided JioSaavn song link or song ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\123\\\\lyrics_endpoint_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\123\\playlist_url_endpoint_GET.py",
      "function_name": "playlist_url_endpoint",
      "api_description": "Fetches details for a specific playlist based on the provided JioSaavn playlist link.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\123\\\\playlist_url_endpoint_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\123\\song_url_endpoint_GET.py",
      "function_name": "song_url_endpoint",
      "api_description": "Fetches details for a specific song based on the provided JioSaavn song link.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\123\\\\song_url_endpoint_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\123\\universal_endpoint_GET.py",
      "function_name": "universal_endpoint",
      "api_description": "Fetches details for a song, album, or playlist based on the provided JioSaavn link or query.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\123\\\\universal_endpoint_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\124\\get_book_by_id_GET.py",
      "function_name": "get_book_by_id",
      "api_description": "Retrieves a book by its ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\124\\\\get_book_by_id_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\124\\get_character_by_id_GET.py",
      "function_name": "get_character_by_id",
      "api_description": "Retrieves a character by their ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\124\\\\get_character_by_id_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\124\\get_house_by_id_GET.py",
      "function_name": "get_house_by_id",
      "api_description": "Retrieves a house by its ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\124\\\\get_house_by_id_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\125\\get_recordings_GET.py",
      "function_name": "get_recordings",
      "api_description": "Retrieves recordings based on a search query.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\126\\get_color_suggestions_POST.py",
      "function_name": "get_color_suggestions",
      "api_description": "Retrieves color suggestions based on input colors.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\126\\get_random_color_palette_POST.py",
      "function_name": "get_random_color_palette",
      "api_description": "Retrieves a random color palette.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\126\\list_available_models_GET.py",
      "function_name": "list_available_models",
      "api_description": "Retrieves a list of currently available models.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\127\\get_multiple_quotes_GET.py",
      "function_name": "get_multiple_quotes",
      "api_description": "Retrieves a specified number of quotes from Breaking Bad.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\127\\\\get_multiple_quotes_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\127\\get_random_quote_GET.py",
      "function_name": "get_random_quote",
      "api_description": "Retrieves a random quote from Breaking Bad.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\128\\all_leagues_available_GET.py",
      "function_name": "all_leagues_available",
      "api_description": "Retrieve a list of all available football leagues.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\128\\league_detail_GET.py",
      "function_name": "league_detail",
      "api_description": "Retrieve details of a specific league by its ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\128\\seasons_available_GET.py",
      "function_name": "seasons_available",
      "api_description": "Retrieve available seasons for a specific league by its ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\128\\standings_GET.py",
      "function_name": "standings",
      "api_description": "Retrieve standings for a specific league and season.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\129\\get_sunset_and_sunrise_times_GET.py",
      "function_name": "get_sunset_and_sunrise_times",
      "api_description": "Provides sunset and sunrise times for a given latitude and longitude.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\13\\current_day_numbers_GET.py",
      "function_name": "current_day_numbers",
      "api_description": "Provides current day numbers across districts and states.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\13\\daily_numbers_GET.py",
      "function_name": "daily_numbers",
      "api_description": "Provides daily numbers across Confirmed, Recovered, Deceased, and Tested per state (historical data).",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\130\\get_amiibo_by_character_GET.py",
      "function_name": "get_amiibo_by_character",
      "api_description": "Retrieves amiibo information by character.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\130\\get_amiibo_by_game_series_GET.py",
      "function_name": "get_amiibo_by_game_series",
      "api_description": "Retrieves amiibo information by game series.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\130\\get_amiibo_by_name_GET.py",
      "function_name": "get_amiibo_by_name",
      "api_description": "Retrieves amiibo information by name.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\131\\adding_to_piles_GET.py",
      "function_name": "adding_to_piles",
      "api_description": "Add cards to a named pile.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\131\\a_brand_new_deck_GET.py",
      "function_name": "a_brand_new_deck",
      "api_description": "Open a brand new deck of cards.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\131\\a_partial_deck_GET.py",
      "function_name": "a_partial_deck",
      "api_description": "Create a partial deck with specified cards.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\131\\drawing_from_piles_GET.py",
      "function_name": "drawing_from_piles",
      "api_description": "Draw cards from a named pile.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\131\\draw_a_card_GET.py",
      "function_name": "draw_a_card",
      "api_description": "Draw a specified number of cards from a deck.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\131\\listing_cards_in_piles_GET.py",
      "function_name": "listing_cards_in_piles",
      "api_description": "List all cards in a named pile.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\131\\reshuffle_the_cards_GET.py",
      "function_name": "reshuffle_the_cards",
      "api_description": "Reshuffle the remaining cards in a deck.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\131\\returning_cards_to_the_deck_GET.py",
      "function_name": "returning_cards_to_the_deck",
      "api_description": "Return cards to the main deck.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\131\\shuffle_piles_GET.py",
      "function_name": "shuffle_piles",
      "api_description": "Shuffle a named pile.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\131\\shuffle_the_cards_GET.py",
      "function_name": "shuffle_the_cards",
      "api_description": "Shuffle a new deck of cards.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\132\\bin_iin_lookup_GET.py",
      "function_name": "bin_iin_lookup",
      "api_description": "Retrieves metadata for a given BIN/IIN.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\133\\get_birds_GET.py",
      "function_name": "get_birds",
      "api_description": "Retrieves random images of birds.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\133\\\\get_birds_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\133\\get_cats_GET.py",
      "function_name": "get_cats",
      "api_description": "Retrieves random images of cats.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\133\\\\get_cats_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\133\\get_shibes_GET.py",
      "function_name": "get_shibes",
      "api_description": "Retrieves random images of Shiba Inu dogs.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\133\\\\get_shibes_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\134\\get_bear_image_GET.py",
      "function_name": "get_bear_image",
      "api_description": "Retrieves a placeholder image of a bear with specified dimensions.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\134\\\\get_bear_image_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\135\\get_cat_facts_in_different_language_GET.py",
      "function_name": "get_cat_facts_in_different_language",
      "api_description": "Returns cat facts in a specified language.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\135\\get_multiple_cat_facts_GET.py",
      "function_name": "get_multiple_cat_facts",
      "api_description": "Returns multiple random facts about cats.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\135\\get_random_cat_fact_GET.py",
      "function_name": "get_random_cat_fact",
      "api_description": "Returns a random fact about cats.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\135\\get_specific_cat_fact_GET.py",
      "function_name": "get_specific_cat_fact",
      "api_description": "Returns a specific cat fact by its ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\136\\get_random_geek_joke_GET.py",
      "function_name": "get_random_geek_joke",
      "api_description": "Fetches a random geeky/programming related joke.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\137\\get_bible_verse_or_passage_GET.py",
      "function_name": "get_bible_verse_or_passage",
      "api_description": "Retrieves a specific bible verse or passage.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\138\\get_all_digimon_GET.py",
      "function_name": "get_all_digimon",
      "api_description": "Returns an array of all Digimon in the database.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\138\\get_digimon_by_level_GET.py",
      "function_name": "get_digimon_by_level",
      "api_description": "Returns an array of Digimon based on their level.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\138\\get_digimon_by_name_GET.py",
      "function_name": "get_digimon_by_name",
      "api_description": "Returns an array of Digimon based on their name. The array will contain one Digimon.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\139\\get_multiple_quotes_GET.py",
      "function_name": "get_multiple_quotes",
      "api_description": "Retrieves an array of quotes from Lucifer based on the specified number.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\139\\\\get_multiple_quotes_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\139\\get_random_quote_GET.py",
      "function_name": "get_random_quote",
      "api_description": "Retrieves a random quote from Lucifer.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\14\\get_all_results_GET.py",
      "function_name": "get_all_results",
      "api_description": "Retrieve all results across all TLDs for a given domain.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\14\\get_subdomains_GET.py",
      "function_name": "get_subdomains",
      "api_description": "Retrieve all subdomains for a given domain.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\14\\get_tlds_GET.py",
      "function_name": "get_tlds",
      "api_description": "Retrieve all TLDs found for a given domain.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\14\\reverse_dns_lookup_for_cidr_range_GET.py",
      "function_name": "reverse_dns_lookup_for_cidr_range",
      "api_description": "Perform reverse DNS lookup of a CIDR range.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\14\\reverse_dns_lookup_GET.py",
      "function_name": "reverse_dns_lookup",
      "api_description": "Perform reverse DNS lookup on an IP address.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\140\\avatars_GET.py",
      "function_name": "avatars",
      "api_description": "Retrieve the avatar of a Minecraft user by UUID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\140\\\\avatars_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\140\\body_renders_GET.py",
      "function_name": "body_renders",
      "api_description": "Retrieve the body render of a Minecraft user by UUID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\140\\\\body_renders_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\140\\capes_GET.py",
      "function_name": "capes",
      "api_description": "Retrieve the cape of a Minecraft user by UUID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\140\\\\capes_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\140\\head_renders_GET.py",
      "function_name": "head_renders",
      "api_description": "Retrieve the head render of a Minecraft user by UUID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\140\\\\head_renders_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\140\\skins_GET.py",
      "function_name": "skins",
      "api_description": "Retrieve the skin of a Minecraft user by UUID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\140\\\\skins_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\141\\validate_mass_domains_GET.py",
      "function_name": "validate_mass_domains",
      "api_description": "Validate and verify a bulk of domain providers. Check if the provider offers disposable, temporary email addresses, has invalid MX records, or is mistyped, inactive, or non-existent.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\141\\validate_mass_emails_GET.py",
      "function_name": "validate_mass_emails",
      "api_description": "Validate and verify a bulk of email addresses. Check if each email address is disposable, temporary, has invalid MX records, or is mistyped, inactive, or non-existent.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\141\\validate_single_email_GET.py",
      "function_name": "validate_single_email",
      "api_description": "Validate and verify a single email address. Check if the email address is disposable, temporary, has invalid MX records, or is mistyped, inactive, or non-existent.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\141\\view_valid_results_GET.py",
      "function_name": "view_valid_results",
      "api_description": "View the valid email addresses from a previous mass email/domain check session.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\142\\get_weather_by_city_GET.py",
      "function_name": "get_weather_by_city",
      "api_description": "Retrieves the current weather for a specified city.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\143\\get_all_networks_GET.py",
      "function_name": "get_all_networks",
      "api_description": "Retrieves a list of all bike networks.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\143\\get_network_by_id_GET.py",
      "function_name": "get_network_by_id",
      "api_description": "Retrieves detailed information about a specific bike network, including its stations.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\144\\get_word_definitions_GET.py",
      "function_name": "get_word_definitions",
      "api_description": "Retrieves definitions, phonetics, origin, and meanings of a specified word.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\145\\generate_qr_code_GET.py",
      "function_name": "generate_qr_code",
      "api_description": "Generates a QR code that can be embedded on your website.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\146\\get_random_food_dish_GET.py",
      "function_name": "get_random_food_dish",
      "api_description": "Fetches a random picture of a food dish from a random category.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\146\\get_random_picture_from_food_category_GET.py",
      "function_name": "get_random_picture_from_food_category",
      "api_description": "Fetches a random picture from a specified food category.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\147\\get_bulk_data_GET.py",
      "function_name": "get_bulk_data",
      "api_description": "Fetches bulk data files containing the entire Scryfall database.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\147\\get_card_data_GET.py",
      "function_name": "get_card_data",
      "api_description": "Fetches detailed information about a specific Magic: The Gathering card.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\147\\search_cards_GET.py",
      "function_name": "search_cards",
      "api_description": "Searches for Magic: The Gathering cards based on a query string.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\148\\get_all_dog_facts_GET.py",
      "function_name": "get_all_dog_facts",
      "api_description": "Retrieves all dog facts at once.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\148\\get_dog_fact_by_index_GET.py",
      "function_name": "get_dog_fact_by_index",
      "api_description": "Retrieves a specific dog fact by its index.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\148\\get_specific_number_of_dog_facts_GET.py",
      "function_name": "get_specific_number_of_dog_facts",
      "api_description": "Retrieves a specified number of random dog facts.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\149\\get_stoicism_quote_GET.py",
      "function_name": "get_stoicism_quote",
      "api_description": "Generates a stoicism quote to help you live a better life using Stoicism wisdom.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\15\\dcat_catalog_search_GET.py",
      "function_name": "dcat_catalog_search",
      "api_description": "Searches the catalog for datasets matching the query.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\15\\govdata_api___json_ld_GET.py",
      "function_name": "govdata_api___json_ld",
      "api_description": "Accesses the catalog in JSON-LD format.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\15\\govdata_api___rdf_GET.py",
      "function_name": "govdata_api___rdf",
      "api_description": "Accesses the catalog in RDF format.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\15\\govdata_api___turtle_GET.py",
      "function_name": "govdata_api___turtle",
      "api_description": "Accesses the catalog in Turtle format.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\15\\metadaten_rdf_GET.py",
      "function_name": "metadaten_rdf",
      "api_description": "Accesses the metadata in RDF/XML format.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\150\\get_phishing_data_by_asn_GET.py",
      "function_name": "get_phishing_data_by_asn",
      "api_description": "Retrieves phishing data by a specific ASN.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\150\\get_phishing_data_by_country_code_GET.py",
      "function_name": "get_phishing_data_by_country_code",
      "api_description": "Retrieves phishing data by a specific country code.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\150\\get_phishing_data_by_id_GET.py",
      "function_name": "get_phishing_data_by_id",
      "api_description": "Retrieves phishing data by a specific ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\150\\\\get_phishing_data_by_id_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\150\\get_phishing_data_by_ip_GET.py",
      "function_name": "get_phishing_data_by_ip",
      "api_description": "Retrieves phishing data by a specific IP address.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\150\\get_phishing_data_by_score_and_tld_GET.py",
      "function_name": "get_phishing_data_by_score_and_tld",
      "api_description": "Retrieves phishing data where the score is greater than 5, TLD equals .BR, but not hosted in Brazil, and sorts by ID in descending order.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\150\\get_phishing_data_by_title_or_url_with_id_sorted_GET.py",
      "function_name": "get_phishing_data_by_title_or_url_with_id_sorted",
      "api_description": "Retrieves phishing data by title or URL and sorts by ID in descending order.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\150\\get_phishing_data_by_title_with_id_sorted_GET.py",
      "function_name": "get_phishing_data_by_title_with_id_sorted",
      "api_description": "Retrieves phishing data by title and sorts by ID in descending order.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\150\\get_phishing_data_by_tld_GET.py",
      "function_name": "get_phishing_data_by_tld",
      "api_description": "Retrieves phishing data by a specific top-level domain (TLD).",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\150\\get_phishing_data_by_url_with_id_sorted_GET.py",
      "function_name": "get_phishing_data_by_url_with_id_sorted",
      "api_description": "Retrieves phishing data by URL and sorts by ID in descending order.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\150\\get_phishing_data_sorted_by_date_GET.py",
      "function_name": "get_phishing_data_sorted_by_date",
      "api_description": "Retrieves phishing data sorted by date in descending order.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\150\\get_phishing_data_sorted_by_id_GET.py",
      "function_name": "get_phishing_data_sorted_by_id",
      "api_description": "Retrieves phishing data sorted by ID in descending order.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\151\\get_item_details_GET.py",
      "function_name": "get_item_details",
      "api_description": "Retrieves details of an item by its ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\151\\\\get_item_details_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\152\\fetch_available_authors_GET.py",
      "function_name": "fetch_available_authors",
      "api_description": "Generate a JSON array of available authors in the ZenQuotes database.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\152\\fetch_custom_quotes_GET.py",
      "function_name": "fetch_custom_quotes",
      "api_description": "Generate a JSON array of your own quotes. Currently supports [random] and [quotes] calls.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\152\\fetch_quotes_by_author_GET.py",
      "function_name": "fetch_quotes_by_author",
      "api_description": "Generate a JSON array of quotes from a specific author.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\152\\fetch_quote_image_by_author_GET.py",
      "function_name": "fetch_quote_image_by_author",
      "api_description": "Generate a quote image from a specific author.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\152\\fetch_quote_of_the_day_GET.py",
      "function_name": "fetch_quote_of_the_day",
      "api_description": "Generate the quote of the day on each request.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\152\\fetch_random_inspirational_image_GET.py",
      "function_name": "fetch_random_inspirational_image",
      "api_description": "Generate a random inspirational image on each request.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\152\\fetch_random_quotes_GET.py",
      "function_name": "fetch_random_quotes",
      "api_description": "Generate a JSON array of 50 random quotes on each request.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\152\\fetch_random_quote_GET.py",
      "function_name": "fetch_random_quote",
      "api_description": "Generate a random quote on each request.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\152\\filter_quotes_by_keyword_GET.py",
      "function_name": "filter_quotes_by_keyword",
      "api_description": "Generate a JSON array of quotes filtered by supported keywords.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\152\\generate_quote_image_by_keyword_GET.py",
      "function_name": "generate_quote_image_by_keyword",
      "api_description": "Generate a quote image filtered by supported keywords.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\153\\get_all_anime_GET.py",
      "function_name": "get_all_anime",
      "api_description": "Retrieves a list of all available anime.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\153\\get_anime_facts_GET.py",
      "function_name": "get_anime_facts",
      "api_description": "Retrieves all facts related to a specific anime.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\153\\get_specific_anime_fact_GET.py",
      "function_name": "get_specific_anime_fact",
      "api_description": "Retrieves a specific fact related to a specific anime.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\153\\\\get_specific_anime_fact_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\154\\get_garden_image_by_http_status_code_GET.py",
      "function_name": "get_garden_image_by_http_status_code",
      "api_description": "Retrieves a garden image corresponding to a given HTTP response status code.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\154\\get_garden_image_by_http_status_code__avif_format__GET.py",
      "function_name": "get_garden_image_by_http_status_code__avif_format_",
      "api_description": "Retrieves a garden image in .avif format corresponding to a given HTTP response status code.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\154\\get_garden_image_by_http_status_code__jxl_format__GET.py",
      "function_name": "get_garden_image_by_http_status_code__jxl_format_",
      "api_description": "Retrieves a garden image in .jxl format corresponding to a given HTTP response status code.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\154\\get_garden_image_by_http_status_code__webp_format__GET.py",
      "function_name": "get_garden_image_by_http_status_code__webp_format_",
      "api_description": "Retrieves a garden image in .webp format corresponding to a given HTTP response status code.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\154\\get_garden_image_metadata_by_http_status_code_GET.py",
      "function_name": "get_garden_image_metadata_by_http_status_code",
      "api_description": "Retrieves metadata in JSON format for a garden image corresponding to a given HTTP response status code.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\155\\grab_a_random_joke_GET.py",
      "function_name": "grab_a_random_joke",
      "api_description": "Fetches a single random joke.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\155\\grab_jokes_by_type__random__GET.py",
      "function_name": "grab_jokes_by_type__random_",
      "api_description": "Fetches a single random joke of a specified type.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\155\\grab_jokes_by_type__ten__GET.py",
      "function_name": "grab_jokes_by_type__ten_",
      "api_description": "Fetches ten jokes of a specified type.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\155\\grab_joke_by_id_GET.py",
      "function_name": "grab_joke_by_id",
      "api_description": "Fetches a joke by its ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\155\\grab_ten_random_jokes_GET.py",
      "function_name": "grab_ten_random_jokes",
      "api_description": "Fetches ten random jokes.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\156\\classify_gender_from_name_GET.py",
      "function_name": "classify_gender_from_name",
      "api_description": "Predicts the gender of a person based on their name.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\156\\estimate_age_from_name_GET.py",
      "function_name": "estimate_age_from_name",
      "api_description": "Predicts the age of a person based on their name.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\156\\predict_nationality_from_name_GET.py",
      "function_name": "predict_nationality_from_name",
      "api_description": "Predicts the nationality of a person based on their name.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\157\\missing_Missing.py",
      "function_name": [],
      "api_description": {
        "title": "Missing API Documentation",
        "endpoints": [
          {
            "name": "Missing",
            "description": "Missing",
            "method": "Missing",
            "url": "missing",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\158\\graphical_api_GET.py",
      "function_name": "graphical_api",
      "api_description": "Displays the forecast diagram as seen on the 7Timer! website.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\158\\\\graphical_api_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\158\\machine_readable_api_GET.py",
      "function_name": "machine_readable_api",
      "api_description": "Returns a set of data that can be used directly by applications.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\159\\latest_GET.py",
      "function_name": "latest",
      "api_description": "Retrieve the latest phone specifications.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\159\\\\latest_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\159\\list_brands_GET.py",
      "function_name": "list_brands",
      "api_description": "Retrieve a list of phone brands.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\159\\\\list_brands_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\159\\list_phones_GET.py",
      "function_name": "list_phones",
      "api_description": "Retrieve a list of phones for a specific brand.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\159\\\\list_phones_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\159\\phone_specifications_GET.py",
      "function_name": "phone_specifications",
      "api_description": "Retrieve specifications for a specific phone.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\159\\\\phone_specifications_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\159\\search_GET.py",
      "function_name": "search",
      "api_description": "Search for phones based on a query.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\159\\top_by_fans_GET.py",
      "function_name": "top_by_fans",
      "api_description": "Retrieve the top phones by fans.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\159\\\\top_by_fans_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\159\\top_by_interest_GET.py",
      "function_name": "top_by_interest",
      "api_description": "Retrieve the top phones by interest.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\159\\\\top_by_interest_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\16\\get_all_licenses_GET.py",
      "function_name": "get_all_licenses",
      "api_description": "Retrieves a list of all licenses.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\16\\get_api_status_GET.py",
      "function_name": "get_api_status",
      "api_description": "Retrieves the current status of the API.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\16\\get_api_version_GET.py",
      "function_name": "get_api_version",
      "api_description": "Retrieves the current version of the API.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\16\\get_rules_GET.py",
      "function_name": "get_rules",
      "api_description": "Retrieves the rules for licenses.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\16\\get_single_license_GET.py",
      "function_name": "get_single_license",
      "api_description": "Retrieves details of a single license using the license ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\160\\get_all_characters_GET.py",
      "function_name": "get_all_characters",
      "api_description": "Retrieve a list of all characters from Blue Archive. By default, it returns 20 characters.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\160\\get_all_students_GET.py",
      "function_name": "get_all_students",
      "api_description": "Retrieve a list of all students. By default, it returns 4 students.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\160\\get_characters_by_name_GET.py",
      "function_name": "get_characters_by_name",
      "api_description": "Retrieve characters by their specific name.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\160\\get_random_character_GET.py",
      "function_name": "get_random_character",
      "api_description": "Retrieve a random character from Blue Archive. You can specify the count to get more than one character.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\161\\ai_meme_POST.py",
      "function_name": "ai_meme",
      "api_description": "Generates a fresh meme from scratch using Imgflip's deep neural network trained on millions of public memes.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\161\\automeme_POST.py",
      "function_name": "automeme",
      "api_description": "Automatically caption one of the top 2,048 memes based only on the input text.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\161\\caption_image_POST.py",
      "function_name": "caption_image",
      "api_description": "Add a caption to an Imgflip meme template.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\161\\get_memes_GET.py",
      "function_name": "get_memes",
      "api_description": "Gets an array of popular memes that may be captioned with this API.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\161\\search_memes_POST.py",
      "function_name": "search_memes",
      "api_description": "Search for meme templates that can be captioned with the /caption_image endpoint.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\162\\get_pok\u00e9mon_ability_by_name_GET.py",
      "function_name": "get_pok\u8305mon_ability_by_name",
      "api_description": {
        "title": "Pok\u00e9API Documentation",
        "endpoints": [
          {
            "name": "Get Pok\u00e9mon by Name or ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon by its name or ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon/{name_or_id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name_or_id",
                "type": "string",
                "description": "The name or ID of the Pok\u00e9mon",
                "default": null,
                "example": "ditto"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Species by Name or ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon species by its name or ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon-species/{name_or_id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name_or_id",
                "type": "string",
                "description": "The name or ID of the Pok\u00e9mon species",
                "default": null,
                "example": "aegislash"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Type by ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon type by its ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/type/{id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the Pok\u00e9mon type",
                "default": null,
                "example": 3
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Ability by Name",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon ability by its name.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/ability/{name}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "The name of the Pok\u00e9mon ability",
                "default": null,
                "example": "battle-armor"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon List",
            "description": "Retrieves a list of Pok\u00e9mon with optional limit and offset parameters.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "limit",
                "type": "integer",
                "description": "The number of Pok\u00e9mon to retrieve",
                "default": 20,
                "example": 100000
              },
              {
                "name": "offset",
                "type": "integer",
                "description": "The number of Pok\u00e9mon to skip before starting to collect the result set",
                "default": 0,
                "example": 0
              }
            ]
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\162\\get_pok\u00e9mon_by_name_or_id_GET.py",
      "function_name": "get_pok\u8305mon_by_name_or_id",
      "api_description": {
        "title": "Pok\u00e9API Documentation",
        "endpoints": [
          {
            "name": "Get Pok\u00e9mon by Name or ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon by its name or ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon/{name_or_id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name_or_id",
                "type": "string",
                "description": "The name or ID of the Pok\u00e9mon",
                "default": null,
                "example": "ditto"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Species by Name or ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon species by its name or ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon-species/{name_or_id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name_or_id",
                "type": "string",
                "description": "The name or ID of the Pok\u00e9mon species",
                "default": null,
                "example": "aegislash"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Type by ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon type by its ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/type/{id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the Pok\u00e9mon type",
                "default": null,
                "example": 3
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Ability by Name",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon ability by its name.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/ability/{name}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "The name of the Pok\u00e9mon ability",
                "default": null,
                "example": "battle-armor"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon List",
            "description": "Retrieves a list of Pok\u00e9mon with optional limit and offset parameters.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "limit",
                "type": "integer",
                "description": "The number of Pok\u00e9mon to retrieve",
                "default": 20,
                "example": 100000
              },
              {
                "name": "offset",
                "type": "integer",
                "description": "The number of Pok\u00e9mon to skip before starting to collect the result set",
                "default": 0,
                "example": 0
              }
            ]
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\162\\get_pok\u00e9mon_list_GET.py",
      "function_name": "get_pok\u8305mon_list",
      "api_description": {
        "title": "Pok\u00e9API Documentation",
        "endpoints": [
          {
            "name": "Get Pok\u00e9mon by Name or ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon by its name or ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon/{name_or_id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name_or_id",
                "type": "string",
                "description": "The name or ID of the Pok\u00e9mon",
                "default": null,
                "example": "ditto"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Species by Name or ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon species by its name or ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon-species/{name_or_id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name_or_id",
                "type": "string",
                "description": "The name or ID of the Pok\u00e9mon species",
                "default": null,
                "example": "aegislash"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Type by ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon type by its ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/type/{id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the Pok\u00e9mon type",
                "default": null,
                "example": 3
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Ability by Name",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon ability by its name.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/ability/{name}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "The name of the Pok\u00e9mon ability",
                "default": null,
                "example": "battle-armor"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon List",
            "description": "Retrieves a list of Pok\u00e9mon with optional limit and offset parameters.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "limit",
                "type": "integer",
                "description": "The number of Pok\u00e9mon to retrieve",
                "default": 20,
                "example": 100000
              },
              {
                "name": "offset",
                "type": "integer",
                "description": "The number of Pok\u00e9mon to skip before starting to collect the result set",
                "default": 0,
                "example": 0
              }
            ]
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\162\\get_pok\u00e9mon_species_by_name_or_id_GET.py",
      "function_name": "get_pok\u8305mon_species_by_name_or_id",
      "api_description": {
        "title": "Pok\u00e9API Documentation",
        "endpoints": [
          {
            "name": "Get Pok\u00e9mon by Name or ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon by its name or ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon/{name_or_id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name_or_id",
                "type": "string",
                "description": "The name or ID of the Pok\u00e9mon",
                "default": null,
                "example": "ditto"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Species by Name or ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon species by its name or ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon-species/{name_or_id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name_or_id",
                "type": "string",
                "description": "The name or ID of the Pok\u00e9mon species",
                "default": null,
                "example": "aegislash"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Type by ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon type by its ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/type/{id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the Pok\u00e9mon type",
                "default": null,
                "example": 3
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Ability by Name",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon ability by its name.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/ability/{name}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "The name of the Pok\u00e9mon ability",
                "default": null,
                "example": "battle-armor"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon List",
            "description": "Retrieves a list of Pok\u00e9mon with optional limit and offset parameters.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "limit",
                "type": "integer",
                "description": "The number of Pok\u00e9mon to retrieve",
                "default": 20,
                "example": 100000
              },
              {
                "name": "offset",
                "type": "integer",
                "description": "The number of Pok\u00e9mon to skip before starting to collect the result set",
                "default": 0,
                "example": 0
              }
            ]
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\162\\get_pok\u00e9mon_type_by_id_GET.py",
      "function_name": "get_pok\u8305mon_type_by_id",
      "api_description": {
        "title": "Pok\u00e9API Documentation",
        "endpoints": [
          {
            "name": "Get Pok\u00e9mon by Name or ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon by its name or ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon/{name_or_id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name_or_id",
                "type": "string",
                "description": "The name or ID of the Pok\u00e9mon",
                "default": null,
                "example": "ditto"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Species by Name or ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon species by its name or ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon-species/{name_or_id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name_or_id",
                "type": "string",
                "description": "The name or ID of the Pok\u00e9mon species",
                "default": null,
                "example": "aegislash"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Type by ID",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon type by its ID.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/type/{id}",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the Pok\u00e9mon type",
                "default": null,
                "example": 3
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon Ability by Name",
            "description": "Retrieves detailed information about a specific Pok\u00e9mon ability by its name.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/ability/{name}",
            "headers": [],
            "required_parameters": [
              {
                "name": "name",
                "type": "string",
                "description": "The name of the Pok\u00e9mon ability",
                "default": null,
                "example": "battle-armor"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Pok\u00e9mon List",
            "description": "Retrieves a list of Pok\u00e9mon with optional limit and offset parameters.",
            "method": "GET",
            "url": "https://pokeapi.co/api/v2/pokemon",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "limit",
                "type": "integer",
                "description": "The number of Pok\u00e9mon to retrieve",
                "default": 20,
                "example": 100000
              },
              {
                "name": "offset",
                "type": "integer",
                "description": "The number of Pok\u00e9mon to skip before starting to collect the result set",
                "default": 0,
                "example": 0
              }
            ]
          }
        ]
      },
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\162\\\\get_pok\u00e9mon_type_by_id_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\163\\get_meme_from_subreddit_GET.py",
      "function_name": "get_meme_from_subreddit",
      "api_description": "Fetches a random meme from a specified subreddit.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\163\\get_multiple_memes_from_subreddit_GET.py",
      "function_name": "get_multiple_memes_from_subreddit",
      "api_description": "Fetches a specified number of memes from a specified subreddit.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\163\\\\get_multiple_memes_from_subreddit_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\163\\get_multiple_memes_GET.py",
      "function_name": "get_multiple_memes",
      "api_description": "Fetches a specified number of random memes.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\163\\\\get_multiple_memes_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\163\\get_random_meme_GET.py",
      "function_name": "get_random_meme",
      "api_description": "Fetches a random meme from predefined subreddits.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\164\\generate_random_strings_GET.py",
      "function_name": "generate_random_strings",
      "api_description": "Generates a specified number of random strings of a specified length.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\164\\\\generate_random_strings_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\165\\get_a_random_pun_GET.py",
      "function_name": "get_a_random_pun",
      "api_description": "Retrieve a random pun from our collection.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\165\\\\get_a_random_pun_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\165\\get_puns_by_pagination_GET.py",
      "function_name": "get_puns_by_pagination",
      "api_description": "Retrieve puns by providing a page number. Fixed to 10 puns per page.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\165\\\\get_puns_by_pagination_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\165\\get_puns_by_searching_GET.py",
      "function_name": "get_puns_by_searching",
      "api_description": "Retrieve puns by searching with keywords.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\165\\\\get_puns_by_searching_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\165\\get_pun_by_id_GET.py",
      "function_name": "get_pun_by_id",
      "api_description": "Retrieve a specific pun by providing its unique identifier (ID).",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\165\\\\get_pun_by_id_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\165\\get_pun_meme_GET.py",
      "function_name": "get_pun_meme",
      "api_description": "Retrieve a random pun meme.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\165\\\\get_pun_meme_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\166\\search_cards_GET.py",
      "function_name": "search_cards",
      "api_description": "Perform advanced search queries to find cards by name, type, release date, legality, and more.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\17\\invoke_assessment_POST.py",
      "function_name": "invoke_assessment",
      "api_description": "Used to invoke a new scan of a website. By default, the HTTP Observatory will return a cached site result if the site has been scanned anytime in the previous 24 hours. Regardless of the value of rescan, a site cannot be scanned at a frequency greater than every three minutes. It will return a single scan object on success.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\17\\retrieve_assessment_GET.py",
      "function_name": "retrieve_assessment",
      "api_description": "Used to retrieve the results of an existing, ongoing, or completed scan. Returns a scan object on success.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\17\\retrieve_host_s_scan_history_GET.py",
      "function_name": "retrieve_host_s_scan_history",
      "api_description": "Returns all public scans made to a website, including its grade and score. Returning a host history object.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\17\\retrieve_overall_grade_distribution_GET.py",
      "function_name": "retrieve_overall_grade_distribution",
      "api_description": "Returns each possible grade in the HTTP Observatory, as well as how many scans have fallen into that grade. Returns a grade distribution object.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\17\\retrieve_recent_scans_GET.py",
      "function_name": "retrieve_recent_scans",
      "api_description": "Retrieves the ten most recent scans that fall within a given score range. Maps hostnames to scores, returning a recent scans object.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\17\\retrieve_scanner_states__deprecated__GET.py",
      "function_name": "retrieve_scanner_states__deprecated_",
      "api_description": "Returns the state of the scanner. It can be useful for determining how busy the HTTP Observatory is. Returns a Scanner state object.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\17\\retrieve_test_results_GET.py",
      "function_name": "retrieve_test_results",
      "api_description": "Retrieves the results of all subtests once the scan's state has been placed in the FINISHED state. It will return a single tests object.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\18\\get_capacity_data_GET.py",
      "function_name": "get_capacity_data",
      "api_description": "Retrieves current data on BC Ferries sailings with capacity information.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\18\\get_non_capacity_data_GET.py",
      "function_name": "get_non_capacity_data",
      "api_description": "Retrieves current data on BC Ferries sailings without capacity information.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\19\\all_state_metadata_GET.py",
      "function_name": "all_state_metadata",
      "api_description": "Retrieve basic information about all states, including notes about methodology and data sources.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\19\\historic_data_for_a_state_or_territory_GET.py",
      "function_name": "historic_data_for_a_state_or_territory",
      "api_description": "Retrieve all historic data for a single state.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\19\\national_data_historic_us_values_GET.py",
      "function_name": "national_data_historic_us_values",
      "api_description": "Retrieve all COVID data for the US.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\19\\simplified_historic_data_for_a_state_or_territory_GET.py",
      "function_name": "simplified_historic_data_for_a_state_or_territory",
      "api_description": "Retrieve simplified historic data for a single state.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\19\\simplified_single_day_of_data_for_a_state_or_territory_GET.py",
      "function_name": "simplified_single_day_of_data_for_a_state_or_territory",
      "api_description": "Retrieve simplified data for a single day for a state or territory.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\19\\simplified_single_day_of_data_for_the_us_GET.py",
      "function_name": "simplified_single_day_of_data_for_the_us",
      "api_description": "Retrieve simplified data for one day for the US.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\19\\single_day_of_data_for_a_state_or_territory_GET.py",
      "function_name": "single_day_of_data_for_a_state_or_territory",
      "api_description": "Retrieve data for a single day for a state or territory.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\19\\single_day_of_data_for_the_us_GET.py",
      "function_name": "single_day_of_data_for_the_us",
      "api_description": "Retrieve one day of data for the US.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\19\\single_state_metadata_GET.py",
      "function_name": "single_state_metadata",
      "api_description": "Retrieve basic information about a single state, including notes about methodology and data sources.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\2\\get_postal_code_information_GET.py",
      "function_name": "get_postal_code_information",
      "api_description": "Retrieves information about a specific postal code.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\2\\\\get_postal_code_information_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\20\\generate_placeholder_text_GET.py",
      "function_name": "generate_placeholder_text",
      "api_description": "Generates placeholder text based on specified parameters.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\20\\\\generate_placeholder_text_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\21\\get_national_population_data_GET.py",
      "function_name": "get_national_population_data",
      "api_description": "Retrieves population data at the national level.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\21\\get_state_population_data_GET.py",
      "function_name": "get_state_population_data",
      "api_description": "Retrieves population data at the state level.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\22\\get_author_by_slug_GET.py",
      "function_name": "get_author_by_slug",
      "api_description": "Get a single author by slug. This method can be used to get author details such as bio, website link, and profile image.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\22\\\\get_author_by_slug_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\22\\get_quote_by_id_GET.py",
      "function_name": "get_quote_by_id",
      "api_description": "Get a quote by its ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\22\\\\get_quote_by_id_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\22\\get_random_quotes_GET.py",
      "function_name": "get_random_quotes",
      "api_description": "Get one or more random quotes from the database. This method supports several filters that can be used to get random quotes with specific properties.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\22\\\\get_random_quotes_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\22\\get_random_quote_GET.py",
      "function_name": "get_random_quote",
      "api_description": "Returns a single random quote from the database. This method is deprecated in favor of Get Random Quotes.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\22\\\\get_random_quote_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\22\\list_authors_GET.py",
      "function_name": "list_authors",
      "api_description": "Get all authors matching the given query. This endpoint can be used to list authors, with several options for sorting and filtering.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\22\\\\list_authors_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\22\\list_quotes_GET.py",
      "function_name": "list_quotes",
      "api_description": "Get all quotes matching a given query. By default, this will return a paginated list of all quotes, sorted by _id.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\22\\\\list_quotes_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\22\\list_tags_GET.py",
      "function_name": "list_tags",
      "api_description": "Get a list of all tags.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\22\\\\list_tags_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\22\\search_authors_GET.py",
      "function_name": "search_authors",
      "api_description": "Search for authors by name. It is designed to power a search bar for authors that displays autocomplete suggestions as the user types.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\22\\\\search_authors_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\22\\search_quotes_GET.py",
      "function_name": "search_quotes",
      "api_description": "Search for quotes by keywords, content, and/or author name. This method is powered by Atlas Search and is designed to power a search bar UI.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\22\\\\search_quotes_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\23\\field_options_GET.py",
      "function_name": "field_options",
      "api_description": "Fetches the available options for trigger fields, query fields, action fields, and feature fields.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\23\\perform_a_query_POST.py",
      "function_name": "perform_a_query",
      "api_description": "Performs the specified query using the user query fields stored on IFTTT.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\23\\run_an_action_POST.py",
      "function_name": "run_an_action",
      "api_description": "Runs the specified action using the user action fields stored on IFTTT.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\23\\show_a_connection_GET.py",
      "function_name": "show_a_connection",
      "api_description": "Provides details about a specific connection.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\23\\show_the_current_service_and_user_GET.py",
      "function_name": "show_the_current_service_and_user",
      "api_description": "Returns information about the authentication of the current request.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\23\\test_trigger_event_webhook_POST.py",
      "function_name": "test_trigger_event_webhook",
      "api_description": "Simulates a new event. A request to this endpoint will result in a test Trigger event webhook request to your API's Webhook endpoint.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\23\\update_a_connection_PUT.py",
      "function_name": [],
      "api_description": {
        "title": "IFTTT Connect API Documentation",
        "endpoints": [
          {
            "name": "Show the current service and user",
            "description": "Returns information about the authentication of the current request.",
            "method": "GET",
            "url": "https://connect.ifttt.com/v2/me",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the user",
                "default": null,
                "example": "123"
              }
            ]
          },
          {
            "name": "Show a connection",
            "description": "Provides details about a specific connection.",
            "method": "GET",
            "url": "https://connect.ifttt.com/v2/connections/{{connection_id}}",
            "headers": [],
            "required_parameters": [
              {
                "name": "connection_id",
                "type": "string",
                "description": "The ID of the connection",
                "default": null,
                "example": "C8p3q9T6"
              }
            ],
            "optional_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the user",
                "default": null,
                "example": "123"
              }
            ]
          },
          {
            "name": "Update a connection",
            "description": "Updates a specific user's connection.",
            "method": "PUT",
            "url": "https://connect.ifttt.com/v2/connections/{{connection_id}}/user_connection",
            "headers": [],
            "required_parameters": [
              {
                "name": "connection_id",
                "type": "string",
                "description": "The ID of the connection",
                "default": null,
                "example": "C8p3q9T6"
              },
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the user",
                "default": null,
                "example": "123"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Field options",
            "description": "Fetches the available options for trigger fields, query fields, action fields, and feature fields.",
            "method": "GET",
            "url": "https://connect.ifttt.com/v2/connections/{{connection_id}}/{{type}}/{{type_id}}/field_options",
            "headers": [],
            "required_parameters": [
              {
                "name": "connection_id",
                "type": "string",
                "description": "The ID of the connection",
                "default": null,
                "example": "C8p3q9T6"
              },
              {
                "name": "type",
                "type": "string",
                "description": "The type of field. Must be `triggers`, `queries`, `actions`, or `features`.",
                "default": null,
                "example": "actions"
              },
              {
                "name": "type_id",
                "type": "string",
                "description": "The ID for the specific trigger, query, action, or feature.",
                "default": null,
                "example": "acme_cloud_storage.archive"
              }
            ],
            "optional_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the user",
                "default": null,
                "example": "123"
              }
            ]
          },
          {
            "name": "Perform a query",
            "description": "Performs the specified query using the user query fields stored on IFTTT.",
            "method": "POST",
            "url": "https://connect.ifttt.com/v2/connections/{{connection_id}}/queries/{{query_id}}/perform",
            "headers": [],
            "required_parameters": [
              {
                "name": "connection_id",
                "type": "string",
                "description": "The ID of the connection",
                "default": null,
                "example": "C8p3q9T6"
              },
              {
                "name": "query_id",
                "type": "string",
                "description": "The ID of the query",
                "default": null,
                "example": "acme_cloud_storage.list_files"
              },
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the user",
                "default": null,
                "example": "123"
              }
            ],
            "optional_parameters": [
              {
                "name": "fields",
                "type": "object",
                "description": "A map of query fields. This is effectively query parameters.",
                "default": null,
                "example": {
                  "folder_name": "aBwLdm2ydHVya0BQbWFpbC8jb22=;2641ab0g"
                }
              },
              {
                "name": "includes",
                "type": "array",
                "description": "An array of query ingredients. Query ingredients included in this list will be resolved to a drill-down result.",
                "default": null,
                "example": [
                  "versions"
                ]
              },
              {
                "name": "limit",
                "type": "number",
                "description": "A limit for the number of items in the response.",
                "default": null,
                "example": 1
              },
              {
                "name": "cursor",
                "type": "string",
                "description": "A cursor that addresses a specific page of a result set.",
                "default": null,
                "example": "151517700064544d60c3a02405f8bd5520d3e31571"
              }
            ]
          },
          {
            "name": "Run an action",
            "description": "Runs the specified action using the user action fields stored on IFTTT.",
            "method": "POST",
            "url": "https://connect.ifttt.com/v2/connections/{{connection_id}}/actions/{{action_id}}/run",
            "headers": [],
            "required_parameters": [
              {
                "name": "connection_id",
                "type": "string",
                "description": "The ID of the connection",
                "default": null,
                "example": "C8p3q9T6"
              },
              {
                "name": "action_id",
                "type": "string",
                "description": "The ID of the action",
                "default": null,
                "example": "acme_cloud_storage.upload_from_url"
              },
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the user",
                "default": null,
                "example": "123"
              }
            ],
            "optional_parameters": [
              {
                "name": "fields",
                "type": "object",
                "description": "A map of action fields. This is effectively action parameters.",
                "default": null,
                "example": {
                  "folder_name": "aBwLdm2ydHVya0BQbWFpbC8jb22=;2641ab0g",
                  "filename": "screenshot_04_23_1977",
                  "url": "https://my.service/path/to/resource.png"
                }
              },
              {
                "name": "user_feature_id",
                "type": "string",
                "description": "If provided, the connection will be run with this configuration.",
                "default": null,
                "example": "4da42aa6-3858-4722-9ded-6a7ecdefd91f"
              }
            ]
          },
          {
            "name": "Test trigger event webhook",
            "description": "Simulates a new event. A request to this endpoint will result in a test Trigger event webhook request to your API's Webhook endpoint.",
            "method": "POST",
            "url": "https://connect.ifttt.com/v2/connections/{{connection_id}}/triggers/{{trigger_id}}/test",
            "headers": [],
            "required_parameters": [
              {
                "name": "connection_id",
                "type": "string",
                "description": "The ID of the connection",
                "default": null,
                "example": "C8p3q9T6"
              },
              {
                "name": "trigger_id",
                "type": "string",
                "description": "The ID of the trigger",
                "default": null,
                "example": "acme_cloud_storage.new_file_added"
              },
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the user",
                "default": null,
                "example": "123"
              }
            ],
            "optional_parameters": [
              {
                "name": "user_feature_id",
                "type": "string",
                "description": "If provided, the connection will be run with this configuration.",
                "default": null,
                "example": "90276cb1-e8ff-4718-a34f-c73cf75c49cf"
              }
            ]
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\24\\request_colors_data_GET.py",
      "function_name": "request_colors_data",
      "api_description": "Retrieve a requested color, its complementary, and its grayscale in different formats along with the black or white text corresponding to each color according to its brightness.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\25\\contains_profanity_GET.py",
      "function_name": "contains_profanity",
      "api_description": "Returns 'true' if input text contains words matching the profanity list. If no matches are found, returns 'false'.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\25\\json_response_GET.py",
      "function_name": "json_response",
      "api_description": "Returns processed input text as JSON.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\25\\plain_text_response_GET.py",
      "function_name": "plain_text_response",
      "api_description": "Returns processed input text as plain text.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\25\\xml_response_GET.py",
      "function_name": "xml_response",
      "api_description": "Returns processed input text as XML.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\26\\live_demo_GET.py",
      "function_name": "live_demo",
      "api_description": "Provides a live demo of serving a file from a GitHub repository.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\26\\serve_file_from_bitbucket_GET.py",
      "function_name": "serve_file_from_bitbucket",
      "api_description": "Serves a static file from a Bitbucket repository.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\26\\serve_file_from_github_GET.py",
      "function_name": "serve_file_from_github",
      "api_description": "Serves a static file from a GitHub repository.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\26\\serve_file_from_gitlab_GET.py",
      "function_name": "serve_file_from_gitlab",
      "api_description": "Serves a static file from a GitLab repository.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\27\\check_if_a_number_is_even_GET.py",
      "function_name": "check_if_a_number_is_even",
      "api_description": "Returns whether a given number is even.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\27\\\\check_if_a_number_is_even_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\28\\create_diagram__get__GET.py",
      "function_name": "create_diagram__get_",
      "api_description": "Creates a diagram from a textual description using a GET request. The diagram must be encoded in the URL using a deflate + base64 algorithm.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\28\\create_diagram__post__POST.py",
      "function_name": "create_diagram__post_",
      "api_description": "Creates a diagram from a textual description using a POST request. The diagram can be sent as plain text or JSON.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\29\\complete_location_of_client_s_ip_GET.py",
      "function_name": "complete_location_of_client_s_ip",
      "api_description": "Returns the complete location of the client (device) that\u2019s making the request.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\29\\complete_location_of_specific_ip_GET.py",
      "function_name": "complete_location_of_specific_ip",
      "api_description": "Returns the complete location information for an IP address specified in the URL.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\29\\specific_location_field_of_client_s_ip_GET.py",
      "function_name": "specific_location_field_of_client_s_ip",
      "api_description": "Returns a single location field for the client (device) that\u2019s making the request.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\29\\specific_location_field_of_specific_ip_GET.py",
      "function_name": "specific_location_field_of_specific_ip",
      "api_description": "Returns a single location field for an IP address specified in the URL.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\3\\get_covid_19_cases_for_a_specific_country_GET.py",
      "function_name": "get_covid_19_cases_for_a_specific_country",
      "api_description": "Retrieves COVID-19 cases for a specified country. To extract summary results for the whole world, use 'world' as the country parameter.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\3\\list_all_covid_19_cases_per_country_GET.py",
      "function_name": "list_all_covid_19_cases_per_country",
      "api_description": "Retrieves a list of all COVID-19 cases per country. If no country parameter is specified, the full dataset will be returned.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\30\\get_random_quote_GET.py",
      "function_name": "get_random_quote",
      "api_description": "Retrieves a random quote from the Quotes on Design database.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\31\\get_ask_hn_stories_GET.py",
      "function_name": "get_ask_hn_stories",
      "api_description": "Retrieves up to 200 latest Ask HN stories.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\31\\get_best_stories_GET.py",
      "function_name": "get_best_stories",
      "api_description": "Retrieves up to 500 best stories.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\31\\get_changed_items_and_profiles_GET.py",
      "function_name": "get_changed_items_and_profiles",
      "api_description": "Retrieves the latest changed items and profiles.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\31\\get_item_GET.py",
      "function_name": "get_item",
      "api_description": "Retrieves a specific item (story, comment, job, Ask HN, or poll) by its unique ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\31\\\\get_item_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\31\\get_job_stories_GET.py",
      "function_name": "get_job_stories",
      "api_description": "Retrieves up to 200 latest Job stories.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\31\\get_max_item_id_GET.py",
      "function_name": "get_max_item_id",
      "api_description": "Retrieves the current largest item ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\31\\get_new_stories_GET.py",
      "function_name": "get_new_stories",
      "api_description": "Retrieves up to 500 new stories.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\31\\get_show_hn_stories_GET.py",
      "function_name": "get_show_hn_stories",
      "api_description": "Retrieves up to 200 latest Show HN stories.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\31\\get_top_stories_GET.py",
      "function_name": "get_top_stories",
      "api_description": "Retrieves up to 500 top stories.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\31\\get_user_GET.py",
      "function_name": "get_user",
      "api_description": "Retrieves a specific user by their unique username.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\32\\get_public_ip__ipv4__GET.py",
      "function_name": "get_public_ip__ipv4_",
      "api_description": "Retrieves the public IPv4 address of the client.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\32\\get_public_ip__ipv6__GET.py",
      "function_name": "get_public_ip__ipv6_",
      "api_description": "Retrieves the public IPv6 address of the client.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\32\\get_public_ip__universal__ipv4_ipv6__GET.py",
      "function_name": "get_public_ip__universal__ipv4_ipv6_",
      "api_description": "Retrieves the public IP address of the client, supporting both IPv4 and IPv6.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\33\\automatic_mode_GET.py",
      "function_name": "automatic_mode",
      "api_description": "Automatically determine the correct language based on the visitor's IP address and return the country code (or language code) and the translation for the word 'Hello'.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\33\\manual_mode_GET.py",
      "function_name": "manual_mode",
      "api_description": "Pass your visitor\u2019s default browser language and/or their IP address to HelloSalut to get the country code (or language code) and the translation for the word 'Hello'.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\34\\create_gotiny_link_POST.py",
      "function_name": "create_gotiny_link",
      "api_description": "The GoTiny API lets you quickly obtain a short code that's used to redirect to a specified URL.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\34\\resolve_gotiny_link_GET.py",
      "function_name": "resolve_gotiny_link",
      "api_description": "Get the long URL that corresponds with a GoTiny link.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\35\\get_all_drupal_association_individual_members_GET.py",
      "function_name": "get_all_drupal_association_individual_members",
      "api_description": "Retrieve all individual members of the Drupal Association.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\35\\get_all_drupal_association_organization_members_GET.py",
      "function_name": "get_all_drupal_association_organization_members",
      "api_description": "Retrieve all organization members of the Drupal Association.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\35\\get_comments_for_a_node_GET.py",
      "function_name": "get_comments_for_a_node",
      "api_description": "Retrieve all comments for a specific node.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\35\\get_drupalci_job_data_GET.py",
      "function_name": "get_drupalci_job_data",
      "api_description": "Retrieve data for a specific DrupalCI job.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\35\\\\get_drupalci_job_data_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\35\\get_file_data_GET.py",
      "function_name": "get_file_data",
      "api_description": "Retrieve data for a specific file.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\35\\\\get_file_data_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\35\\get_node_data_GET.py",
      "function_name": "get_node_data",
      "api_description": "Retrieve data for a specific node.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\35\\\\get_node_data_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\35\\get_project_maintainers_GET.py",
      "function_name": "get_project_maintainers",
      "api_description": "Retrieve maintainers for a specific project.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\35\\get_taxonomy_terms_for_a_vocabulary_GET.py",
      "function_name": "get_taxonomy_terms_for_a_vocabulary",
      "api_description": "Retrieve all taxonomy terms for a specific vocabulary.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\35\\get_taxonomy_vocabulary_by_id_GET.py",
      "function_name": "get_taxonomy_vocabulary_by_id",
      "api_description": "Retrieve a taxonomy vocabulary by its ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\35\\get_user_data_GET.py",
      "function_name": "get_user_data",
      "api_description": "Retrieve data for a specific user.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\35\\\\get_user_data_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\36\\day_summary_GET.py",
      "function_name": "day_summary",
      "api_description": "Retorna resumo di\u00e1rio de negocia\u00e7\u00f5es realizadas.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\36\\\\day_summary_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\36\\orderbook_GET.py",
      "function_name": "orderbook",
      "api_description": "Livro de ofertas \u00e9 composto por duas listas: (1) uma lista com as ofertas de compras ordenadas pelo maior valor; (2) uma lista com as ofertas de venda ordenadas pelo menor valor.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\36\\ticker_GET.py",
      "function_name": "ticker",
      "api_description": "Retorna informa\u00e7\u00f5es com o resumo das \u00faltimas 24 horas de negocia\u00e7\u00f5es.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\36\\trades_GET.py",
      "function_name": [],
      "api_description": {
        "title": "Mercado Bitcoin API Documentation",
        "endpoints": [
          {
            "name": "Ticker",
            "description": "Retorna informa\u00e7\u00f5es com o resumo das \u00faltimas 24 horas de negocia\u00e7\u00f5es.",
            "method": "GET",
            "url": "https://www.mercadobitcoin.net/api/<coin>/ticker/",
            "headers": [],
            "required_parameters": [
              {
                "name": "coin",
                "type": "string",
                "description": "Acr\u00f4nimo da moeda digital",
                "default": null,
                "example": "BTC"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Orderbook",
            "description": "Livro de ofertas \u00e9 composto por duas listas: (1) uma lista com as ofertas de compras ordenadas pelo maior valor; (2) uma lista com as ofertas de venda ordenadas pelo menor valor.",
            "method": "GET",
            "url": "https://www.mercadobitcoin.net/api/<coin>/orderbook/",
            "headers": [],
            "required_parameters": [
              {
                "name": "coin",
                "type": "string",
                "description": "Acr\u00f4nimo da moeda digital",
                "default": null,
                "example": "BTC"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Trades",
            "description": "Hist\u00f3rico de negocia\u00e7\u00f5es realizadas.",
            "method": "GET",
            "url": "https://www.mercadobitcoin.net/api/<coin>/trades/",
            "headers": [],
            "required_parameters": [
              {
                "name": "coin",
                "type": "string",
                "description": "Acr\u00f4nimo da moeda digital",
                "default": null,
                "example": "BTC"
              }
            ],
            "optional_parameters": [
              {
                "name": "tid",
                "type": "integer",
                "description": "Retorna at\u00e9 1000 negocia\u00e7\u00f5es a partir do identificador da negocia\u00e7\u00e3o informado.",
                "default": null,
                "example": 5700
              },
              {
                "name": "since",
                "type": "integer",
                "description": "Retorna at\u00e9 1000 negocia\u00e7\u00f5es a partir do identificador da negocia\u00e7\u00e3o informado.",
                "default": null,
                "example": 5700
              },
              {
                "name": "from",
                "type": "integer",
                "description": "Retorna at\u00e9 1000 negocia\u00e7\u00f5es a partir da data informada.",
                "default": null,
                "example": 1501871369
              },
              {
                "name": "to",
                "type": "integer",
                "description": "Retorna at\u00e9 1000 negocia\u00e7\u00f5es entre o intervalo de timestamp informado.",
                "default": null,
                "example": 1501891200
              }
            ]
          },
          {
            "name": "Day Summary",
            "description": "Retorna resumo di\u00e1rio de negocia\u00e7\u00f5es realizadas.",
            "method": "GET",
            "url": "https://www.mercadobitcoin.net/api/<coin>/day-summary/<year>/<month>/<day>/",
            "headers": [],
            "required_parameters": [
              {
                "name": "coin",
                "type": "string",
                "description": "Acr\u00f4nimo da moeda digital",
                "default": null,
                "example": "BTC"
              },
              {
                "name": "year",
                "type": "integer",
                "description": "Ano referente ao dia do ano requisitado.",
                "default": null,
                "example": 2013
              },
              {
                "name": "month",
                "type": "integer",
                "description": "M\u00eas referente ao dia do ano requisitado.",
                "default": null,
                "example": 6
              },
              {
                "name": "day",
                "type": "integer",
                "description": "Dia do m\u00eas referente ao dia do ano requisitado.",
                "default": null,
                "example": 20
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\36\\\\trades_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\37\\convert_json_to_jsonp_GET.py",
      "function_name": "convert_json_to_jsonp",
      "api_description": "Converts a JSON URL to JSONP format for easy cross-domain data requests using pure JavaScript.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\38\\github_extra_pins_GET.py",
      "function_name": "github_extra_pins",
      "api_description": "Generates a card to pin more than 6 repositories in a GitHub profile.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\38\\github_gist_pins_GET.py",
      "function_name": "github_gist_pins",
      "api_description": "Generates a card to pin gists in a GitHub profile.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\38\\github_stats_card_GET.py",
      "function_name": "github_stats_card",
      "api_description": "Generates a GitHub stats card for a specified user.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\38\\top_languages_card_GET.py",
      "function_name": "top_languages_card",
      "api_description": "Generates a card showing the most frequently used languages of a specified user.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\38\\wakatime_stats_card_GET.py",
      "function_name": "wakatime_stats_card",
      "api_description": "Generates a card showing WakaTime stats for a specified user.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\39\\get_notice_details_GET.py",
      "function_name": "get_notice_details",
      "api_description": "Get extended set of data for a notice.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\39\\\\get_notice_details_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\39\\get_notice_source_data_GET.py",
      "function_name": "get_notice_source_data",
      "api_description": "Get source data for a notice - as fetched by a scraper.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\39\\\\get_notice_source_data_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\39\\get_section_details_GET.py",
      "function_name": "get_section_details",
      "api_description": "Get extended set of data for a section.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\39\\\\get_section_details_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\39\\get_section_source_data_GET.py",
      "function_name": "get_section_source_data",
      "api_description": "Get source data for a section - as fetched by a scraper.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\39\\\\get_section_source_data_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\39\\get_tender_details_GET.py",
      "function_name": "get_tender_details",
      "api_description": "Get extended set of data for a tender.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\39\\\\get_tender_details_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\39\\get_tender_source_data_GET.py",
      "function_name": "get_tender_source_data",
      "api_description": "Get source data for a tender - as fetched by a scraper.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\39\\\\get_tender_source_data_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\39\\list_notices_GET.py",
      "function_name": "list_notices",
      "api_description": "List all notices published for Spain.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\39\\list_notice_sections_GET.py",
      "function_name": "list_notice_sections",
      "api_description": "List sections published for a notice.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\39\\\\list_notice_sections_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\39\\list_tenders_GET.py",
      "function_name": "list_tenders",
      "api_description": "List all tenders published for Spain.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\39\\list_tender_documents_GET.py",
      "function_name": "list_tender_documents",
      "api_description": "List documents published for a tender.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\39\\\\list_tender_documents_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\39\\list_tender_notices_GET.py",
      "function_name": "list_tender_notices",
      "api_description": "List notices published for a tender.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\39\\\\list_tender_notices_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\4\\get_summary_GET.py",
      "function_name": "get_summary",
      "api_description": "Returns the current date's national-level data including cumulative and new cases, fatalities, tests, recoveries, vaccinations, and more.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\40\\get_keanu_image_GET.py",
      "function_name": "get_keanu_image",
      "api_description": "Retrieves a random photo of Keanu Reeves based on specified dimensions and options.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\41\\get_link_GET.py",
      "function_name": "get_link",
      "api_description": "Transforms a CTP URN into a direct link to the corresponding text.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\41\\get_status_GET.py",
      "function_name": "get_status",
      "api_description": "Retrieves the current status of a user.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\41\\get_text_GET.py",
      "function_name": "get_text",
      "api_description": "Retrieves textual data for a given CTP URN.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\41\\read_link_GET.py",
      "function_name": "read_link",
      "api_description": "Obtains the URN corresponding to a given URL.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\42\\convert_easting_and_northing_to_latitude_and_longitude_GET.py",
      "function_name": "convert_easting_and_northing_to_latitude_and_longitude",
      "api_description": "Convert an OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitude.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\43\\convert_easting_and_northing_to_latitude_and_longitude_GET.py",
      "function_name": "convert_easting_and_northing_to_latitude_and_longitude",
      "api_description": "Convert an OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitude.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\44\\decode_uuid_GET.py",
      "function_name": "decode_uuid",
      "api_description": "Decodes a given UUID and provides information about its version and other details.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\44\\generate_multiple_timestamp_first_uuids_GET.py",
      "function_name": "generate_multiple_timestamp_first_uuids",
      "api_description": "Generates multiple timestamp-first UUIDs which have the current timestamp embedded in them to ensure uniqueness.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\44\\generate_multiple_version_1_uuids_GET.py",
      "function_name": "generate_multiple_version_1_uuids",
      "api_description": "Generates multiple version-1 UUIDs based on time, the server generating the UUID, and pseudo-randomness.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\44\\generate_multiple_version_4_uuids_GET.py",
      "function_name": "generate_multiple_version_4_uuids",
      "api_description": "Generates multiple version-4 UUIDs which are randomly generated.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\44\\generate_timestamp_first_uuid_GET.py",
      "function_name": "generate_timestamp_first_uuid",
      "api_description": "Generates a timestamp-first UUID which has the current timestamp embedded in it to ensure uniqueness.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\44\\generate_version_1_uuid_GET.py",
      "function_name": "generate_version_1_uuid",
      "api_description": "Generates a version-1 UUID based on time, the server generating the UUID, and pseudo-randomness.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\44\\generate_version_3_uuid_GET.py",
      "function_name": "generate_version_3_uuid",
      "api_description": "Generates a version-3 UUID based on an MD5 hash of the namespace and name provided.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\44\\generate_version_4_uuid_GET.py",
      "function_name": "generate_version_4_uuid",
      "api_description": "Generates a version-4 UUID which is randomly generated.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\44\\generate_version_5_uuid_GET.py",
      "function_name": "generate_version_5_uuid",
      "api_description": "Generates a version-5 UUID based on a SHA-1 hash of the namespace and name provided.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\45\\bulk_ip_address_lookup_POST.py",
      "function_name": "bulk_ip_address_lookup",
      "api_description": "Query up to 100 IP addresses (either IPv4 or IPv6) in one single request.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\45\\lookup_single_ip_address_or_asn_GET.py",
      "function_name": "lookup_single_ip_address_or_asn",
      "api_description": "Lookup a single IPv4 or IPv6 address or ASN by specifying the query parameter q.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\46\\get_feed_GET.py",
      "function_name": "get_feed",
      "api_description": "Retrieves a feed by its Onestop ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\46\\get_operator_GET.py",
      "function_name": "get_operator",
      "api_description": "Retrieves an operator by its Onestop ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\46\\get_route_GET.py",
      "function_name": "get_route",
      "api_description": "Retrieves a route by its Onestop ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\46\\get_stop_GET.py",
      "function_name": "get_stop",
      "api_description": "Retrieves a stop by its Onestop ID.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\47\\current_iss_location_GET.py",
      "function_name": "current_iss_location",
      "api_description": "Retrieves the current location of the International Space Station (ISS).",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\47\\number_of_people_in_space_GET.py",
      "function_name": "number_of_people_in_space",
      "api_description": "Retrieves the current number of people in space and their names.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\48\\validate_phone_number_GET.py",
      "function_name": "validate_phone_number",
      "api_description": "Validates and formats a phone number.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\49\\generate_random_user_GET.py",
      "function_name": "generate_random_user",
      "api_description": "Generates a random user with various details such as name, location, email, login credentials, and more.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\5\\atom_feed_GET.py",
      "function_name": "atom_feed",
      "api_description": "Access the Atom feed.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\5\\normalized_data_GET.py",
      "function_name": "normalized_data",
      "api_description": "Access normalized data.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\5\\raw_data_GET.py",
      "function_name": "raw_data",
      "api_description": "Access raw data.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\5\\rss_feed_GET.py",
      "function_name": "rss_feed",
      "api_description": "Access the RSS feed.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\5\\schema_GET.py",
      "function_name": "schema",
      "api_description": "Access schema information.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\5\\sources_GET.py",
      "function_name": "sources",
      "api_description": "Access sources.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\5\\source_registrations_GET.py",
      "function_name": "source_registrations",
      "api_description": "Access source registrations.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\5\\status_GET.py",
      "function_name": "status",
      "api_description": "Check the status of the API.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\5\\users_GET.py",
      "function_name": "users",
      "api_description": "Access user information.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\50\\get_blurred_image_GET.py",
      "function_name": "get_blurred_image",
      "api_description": "Retrieve a blurred image with specified width and height.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\50\\\\get_blurred_image_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\50\\get_grayscale_image_GET.py",
      "function_name": "get_grayscale_image",
      "api_description": "Retrieve a grayscale image with specified width and height.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\50\\\\get_grayscale_image_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\50\\get_image_details_by_id_GET.py",
      "function_name": "get_image_details_by_id",
      "api_description": "Retrieve information about a specific image by its ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\50\\get_image_details_by_seed_GET.py",
      "function_name": "get_image_details_by_seed",
      "api_description": "Retrieve information about a specific image by its seed.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\50\\get_random_image_GET.py",
      "function_name": "get_random_image",
      "api_description": "Retrieve a random image with specified width and height.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\50\\\\get_random_image_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\50\\get_specific_image_GET.py",
      "function_name": "get_specific_image",
      "api_description": "Retrieve a specific image by its ID with specified width and height.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\50\\\\get_specific_image_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\50\\get_square_image_GET.py",
      "function_name": "get_square_image",
      "api_description": "Retrieve a square image with specified size.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\50\\\\get_square_image_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\50\\get_static_random_image_GET.py",
      "function_name": "get_static_random_image",
      "api_description": "Retrieve the same random image every time based on a seed with specified width and height.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\50\\\\get_static_random_image_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\50\\list_images_GET.py",
      "function_name": "list_images",
      "api_description": "Retrieve a list of images with pagination.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\51\\get_color_names_GET.py",
      "function_name": "get_color_names",
      "api_description": "Retrieves color names for given hexadecimal color values.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\51\\get_supported_color_name_lists_GET.py",
      "function_name": "get_supported_color_name_lists",
      "api_description": "Retrieves all supported color name lists.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\52\\get_ip_information_GET.py",
      "function_name": "get_ip_information",
      "api_description": "Retrieves information about the IP address making the request.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\53\\minecraft_account_lookup_GET.py",
      "function_name": "minecraft_account_lookup",
      "api_description": "Fetches data for a Minecraft account by username or ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\53\\steam_account_lookup_GET.py",
      "function_name": "steam_account_lookup",
      "api_description": "Fetches data for a Steam account by ID.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\53\\xbox_account_lookup_GET.py",
      "function_name": "xbox_account_lookup",
      "api_description": "Fetches data for an Xbox account by ID or username.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\54\\fetch_facilities_summary_GET.py",
      "function_name": "fetch_facilities_summary",
      "api_description": "Fetches a summary of facilities data.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\54\\fetch_list_of_facilities_GET.py",
      "function_name": "fetch_list_of_facilities",
      "api_description": "Fetches a list of facilities.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\54\\fetch_no__of_cases_timeline_GET.py",
      "function_name": "fetch_no__of_cases_timeline",
      "api_description": "Fetches the timeline of the number of cases.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\54\\fetch_raw_data_by_month_GET.py",
      "function_name": "fetch_raw_data_by_month",
      "api_description": "Fetches raw Covid-19 data for a specific month.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\54\\fetch_raw_data_by_specific_date_GET.py",
      "function_name": "fetch_raw_data_by_specific_date",
      "api_description": "Fetches raw Covid-19 data for a specific date.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\54\\fetch_raw_data_GET.py",
      "function_name": "fetch_raw_data",
      "api_description": "Fetches raw Covid-19 data ordered by case_code.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\54\\fetch_raw_data_with_filters_GET.py",
      "function_name": "fetch_raw_data_with_filters",
      "api_description": "Fetches raw Covid-19 data with specified filters.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\54\\fetch_raw_facility_hospital_records_GET.py",
      "function_name": "fetch_raw_facility_hospital_records",
      "api_description": "Fetches raw facility/hospital records.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\54\\fetch_summary_GET.py",
      "function_name": "fetch_summary",
      "api_description": "Fetches a summary of Covid-19 data.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\54\\fetch_top_regions_GET.py",
      "function_name": "fetch_top_regions",
      "api_description": "Fetches the top regions with the highest number of cases.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\54\\get_list_of_all_possible_values_for_the_specified_field_GET.py",
      "function_name": "get_list_of_all_possible_values_for_the_specified_field",
      "api_description": "Retrieves a list of all possible values for a specified field.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\55\\get_trace_information_GET.py",
      "function_name": "get_trace_information",
      "api_description": "Retrieves various information such as IP Address, TimeStamp, User Agent, Country Code, IATA, HTTP Version, TLS/SSL Version, and more by Cloudflare.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\56\\get_status_code_image_GET.py",
      "function_name": "get_status_code_image",
      "api_description": "Retrieves an image representing the HTTP status code in the specified format.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_ailments_GET.py",
      "function_name": "get_all_ailments",
      "api_description": "Retrieves all ailments.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_armor_pieces_GET.py",
      "function_name": "get_all_armor_pieces",
      "api_description": "Retrieves all armor pieces.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_armor_sets_GET.py",
      "function_name": "get_all_armor_sets",
      "api_description": "Retrieves all armor sets.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_charms_GET.py",
      "function_name": "get_all_charms",
      "api_description": "Retrieves all charms.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_decorations_GET.py",
      "function_name": "get_all_decorations",
      "api_description": "Retrieves all decorations.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_events_GET.py",
      "function_name": "get_all_events",
      "api_description": "Retrieves all ongoing and scheduled in-game events.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_items_GET.py",
      "function_name": "get_all_items",
      "api_description": "Retrieves all items.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_locations_GET.py",
      "function_name": "get_all_locations",
      "api_description": "Retrieves all locations.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_monsters_GET.py",
      "function_name": "get_all_monsters",
      "api_description": "Retrieves all monsters.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_motion_values_GET.py",
      "function_name": "get_all_motion_values",
      "api_description": "Retrieves all motion values.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_skills_GET.py",
      "function_name": "get_all_skills",
      "api_description": "Retrieves all skills.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_all_weapons_GET.py",
      "function_name": "get_all_weapons",
      "api_description": "Retrieves all weapons.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_ailment_GET.py",
      "function_name": "get_a_specific_ailment",
      "api_description": "Retrieves a specific ailment by ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_ailment_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_armor_piece_GET.py",
      "function_name": "get_a_specific_armor_piece",
      "api_description": "Retrieves a specific armor piece by ID or slug.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_armor_piece_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_armor_set_GET.py",
      "function_name": "get_a_specific_armor_set",
      "api_description": "Retrieves a specific armor set by ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_armor_set_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_charm_GET.py",
      "function_name": "get_a_specific_charm",
      "api_description": "Retrieves a specific charm by ID or slug.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_charm_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_decoration_GET.py",
      "function_name": "get_a_specific_decoration",
      "api_description": "Retrieves a specific decoration by ID or slug.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_decoration_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_event_GET.py",
      "function_name": "get_a_specific_event",
      "api_description": "Retrieves a specific event by ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_event_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_item_GET.py",
      "function_name": "get_a_specific_item",
      "api_description": "Retrieves a specific item by ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_item_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_location_GET.py",
      "function_name": "get_a_specific_location",
      "api_description": "Retrieves a specific location by ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_location_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_monster_GET.py",
      "function_name": "get_a_specific_monster",
      "api_description": "Retrieves a specific monster by ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_monster_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_motion_value_GET.py",
      "function_name": "get_a_specific_motion_value",
      "api_description": "Retrieves a specific motion value by ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_motion_value_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_skill_GET.py",
      "function_name": "get_a_specific_skill",
      "api_description": "Retrieves a specific skill by ID or slug.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_skill_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_a_specific_weapon_GET.py",
      "function_name": "get_a_specific_weapon",
      "api_description": "Retrieves a specific weapon by ID or slug.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\57\\\\get_a_specific_weapon_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\57\\get_motion_values_by_weapon_GET.py",
      "function_name": "get_motion_values_by_weapon",
      "api_description": "Retrieves motion values by weapon type.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\58\\get_cities_GET.py",
      "function_name": "get_cities",
      "api_description": "Fetches all cities or a specific city by ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\58\\get_municipalities_GET.py",
      "function_name": "get_municipalities",
      "api_description": "Fetches all municipalities or a specific municipality by ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\58\\get_states_GET.py",
      "function_name": "get_states",
      "api_description": "Fetches all states or a specific state by ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\58\\get_zip_codes_GET.py",
      "function_name": "get_zip_codes",
      "api_description": "Fetches zip codes with optional filters for city, state, colony, or zip code.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\59\\get_auroracoin_exchange_rate_GET.py",
      "function_name": "get_auroracoin_exchange_rate",
      "api_description": "Get current Auroracoin exchange rate and various statistics for the past day.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_auroracoin_exchange_rate_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_auroracoin_exchange_rate_history_GET.py",
      "function_name": "get_auroracoin_exchange_rate_history",
      "api_description": "Get daily exchange rate history for the past year.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_auroracoin_exchange_rate_history_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_auroracoin_order_book_GET.py",
      "function_name": "get_auroracoin_order_book",
      "api_description": "Get list of current sale and purchase offers on ISX.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_auroracoin_order_book_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_auroracoin_transactions_GET.py",
      "function_name": "get_auroracoin_transactions",
      "api_description": "Get history of Auroracoin transactions on ISX.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_auroracoin_transactions_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_bicycle_counter_status_GET.py",
      "function_name": "get_bicycle_counter_status",
      "api_description": "Get current status of bicycle counters in Iceland, currently only one located by Sudurlandsbraut in Reykjavik.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_bicycle_counter_status_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_carpooling_drivers_GET.py",
      "function_name": "get_carpooling_drivers",
      "api_description": "Get a list of drivers requesting passengers, sorted by departure date.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_carpooling_drivers_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_carpooling_passengers_GET.py",
      "function_name": "get_carpooling_passengers",
      "api_description": "Get a list of passengers requesting rides, sorted by preferred departure date.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_carpooling_passengers_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_currency_data_GET.py",
      "function_name": "get_currency_data",
      "api_description": "Get currency data in relation to ISK.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_currency_data_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_earthquake_data_GET.py",
      "function_name": "get_earthquake_data",
      "api_description": "Get earthquake monitoring data for the last 48 hours.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_earthquake_data_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_eurojackpot_numbers_GET.py",
      "function_name": "get_eurojackpot_numbers",
      "api_description": "Get the most recent numbers for EuroJackpot.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_eurojackpot_numbers_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_hospital_status_GET.py",
      "function_name": "get_hospital_status",
      "api_description": "Get the current status of the National University Hospital of Iceland.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_hospital_status_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_icelandic_lottery_numbers_GET.py",
      "function_name": "get_icelandic_lottery_numbers",
      "api_description": "Get the most recent numbers for the Icelandic lottery.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_icelandic_lottery_numbers_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_international_flights_GET.py",
      "function_name": "get_international_flights",
      "api_description": "Get a list of all international flights departing and arriving at Keflavik Airport today.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_international_flights_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_particulates_status_GET.py",
      "function_name": "get_particulates_status",
      "api_description": "Get current status of particulates in Reykjavik City.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_particulates_status_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_petrol_stations_GET.py",
      "function_name": "get_petrol_stations",
      "api_description": "Lookup locations and gas prices for petrol stations in Iceland.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_petrol_stations_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_sar_school_courses_GET.py",
      "function_name": "get_sar_school_courses",
      "api_description": "Get a list of all courses scheduled by the Search and Rescue school for training of SAR Squad members.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_sar_school_courses_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_sports_events_GET.py",
      "function_name": "get_sports_events",
      "api_description": "Get events for Icelandic football and/or handball.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_sports_events_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_tv_schedules_GET.py",
      "function_name": "get_tv_schedules",
      "api_description": "Get schedules for Icelandic TV stations.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_tv_schedules_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_vikingalotto_numbers_GET.py",
      "function_name": "get_vikingalotto_numbers",
      "api_description": "Get the most recent numbers for Vikingalotto.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_vikingalotto_numbers_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\get_weather_information_GET.py",
      "function_name": "get_weather_information",
      "api_description": "Get weather information for Iceland.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\get_weather_information_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\list_of_concerts_in_iceland_GET.py",
      "function_name": "list_of_concerts_in_iceland",
      "api_description": "Get a list of all the concerts in Iceland sorted by date.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\list_of_concerts_in_iceland_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\lookup_icelandic_addresses_GET.py",
      "function_name": "lookup_icelandic_addresses",
      "api_description": "Lookup addresses in Iceland through the Icelandic Post API.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\lookup_icelandic_addresses_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\real_time_bus_locations_GET.py",
      "function_name": "real_time_bus_locations",
      "api_description": "Get real-time location of buses. Results are only shown for active buses.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\real_time_bus_locations_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\search_icelandic_company_registry_GET.py",
      "function_name": "search_icelandic_company_registry",
      "api_description": "Search the Icelandic company registry. At least one parameter is required.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\search_icelandic_company_registry_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\search_icelandic_horse_database_GET.py",
      "function_name": "search_icelandic_horse_database",
      "api_description": "Search the Icelandic horse database Worldfengur. At least one of the following is required: id, name and origin, or microchip.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\search_icelandic_horse_database_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\search_icelandic_ship_registry_GET.py",
      "function_name": "search_icelandic_ship_registry",
      "api_description": "Search the Icelandic ship registry.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\search_icelandic_ship_registry_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\59\\search_icelandic_vehicle_registry_GET.py",
      "function_name": "search_icelandic_vehicle_registry",
      "api_description": "Search the Icelandic vehicle registry.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\59\\\\search_icelandic_vehicle_registry_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\6\\point_query_GET.py",
      "function_name": "point_query",
      "api_description": "Returns the elevation at a single point or a series of points.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\60\\debt_to_the_penny_GET.py",
      "function_name": "debt_to_the_penny",
      "api_description": "Retrieve data on the U.S. national debt.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\60\\rates_of_exchange_GET.py",
      "function_name": "rates_of_exchange",
      "api_description": "Retrieve exchange rates for various currencies.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\60\\treasury_offset_program_GET.py",
      "function_name": "treasury_offset_program",
      "api_description": "Retrieve data on the Treasury Offset Program.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\61\\create_assessment_POST.py",
      "function_name": "create_assessment",
      "api_description": "Creates a new assessment using the specified deck.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\62\\list_all_asteroids_GET.py",
      "function_name": "list_all_asteroids",
      "api_description": "This endpoint lists all asteroids. The query and limit parameters are optional.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\63\\get_random_genre_GET.py",
      "function_name": "get_random_genre",
      "api_description": "Fetches a random genre.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\63\\get_random_genre_story_GET.py",
      "function_name": "get_random_genre_story",
      "api_description": "Fetches a random genre story.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\64\\download_daily_malware_batches_GET.py",
      "function_name": "download_daily_malware_batches",
      "api_description": "Download daily batches of payloads (malware samples) fetched from malware sites tracked by URLhaus.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\64\\download_hourly_malware_batches_GET.py",
      "function_name": "download_hourly_malware_batches",
      "api_description": "Download hourly batches of payloads (malware samples) fetched from malware sites tracked by URLhaus.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\64\\download_malware_sample_GET.py",
      "function_name": "download_malware_sample",
      "api_description": "Download a copy of a specific payload (malware sample) using its SHA256 hash.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\64\\\\download_malware_sample_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\64\\query_host_information_POST.py",
      "function_name": "query_host_information",
      "api_description": "Retrieve information about a specific host (IPv4 address, hostname, or domain name).",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\64\\query_payload_information_POST.py",
      "function_name": "query_payload_information",
      "api_description": "Retrieve information about a specific payload (malware sample) using its MD5 or SHA256 hash.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\64\\query_recent_payloads_GET.py",
      "function_name": "query_recent_payloads",
      "api_description": "Retrieve a list of recent payloads seen by URLhaus in the past 3 days, with a maximum of 1000 entries.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\64\\query_recent_urls_GET.py",
      "function_name": "query_recent_urls",
      "api_description": "Retrieve a list of recent URLs added to URLhaus in the past 3 days, with a maximum of 1000 entries.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\64\\query_signature_information_POST.py",
      "function_name": "query_signature_information",
      "api_description": "Retrieve information about a specific signature.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\64\\query_tag_information_POST.py",
      "function_name": "query_tag_information",
      "api_description": "Retrieve information about a specific tag.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\64\\query_url_information_by_id_POST.py",
      "function_name": "query_url_information_by_id",
      "api_description": "Retrieve information about a specific URL using its ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\64\\query_url_information_POST.py",
      "function_name": "query_url_information",
      "api_description": "Retrieve information about a specific URL.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\65\\get_blue_dollar_exchange_rate_GET.py",
      "function_name": "get_blue_dollar_exchange_rate",
      "api_description": "Retrieves the current blue dollar exchange rate in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\65\\get_bolsa_dollar_exchange_rate_GET.py",
      "function_name": "get_bolsa_dollar_exchange_rate",
      "api_description": "Retrieves the current bolsa dollar exchange rate in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\65\\get_brazilian_real_exchange_rate_GET.py",
      "function_name": "get_brazilian_real_exchange_rate",
      "api_description": "Retrieves the current Brazilian real exchange rate in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\65\\get_card_dollar_exchange_rate_GET.py",
      "function_name": "get_card_dollar_exchange_rate",
      "api_description": "Retrieves the current card dollar exchange rate in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\65\\get_ccl_dollar_exchange_rate_GET.py",
      "function_name": "get_ccl_dollar_exchange_rate",
      "api_description": "Retrieves the current CCL dollar exchange rate in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\65\\get_chilean_peso_exchange_rate_GET.py",
      "function_name": "get_chilean_peso_exchange_rate",
      "api_description": "Retrieves the current Chilean peso exchange rate in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\65\\get_crypto_dollar_exchange_rate_GET.py",
      "function_name": "get_crypto_dollar_exchange_rate",
      "api_description": "Retrieves the current crypto dollar exchange rate in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\65\\get_current_dollar_exchange_rate_GET.py",
      "function_name": "get_current_dollar_exchange_rate",
      "api_description": "Retrieves the current exchange rate for various types of dollars in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\65\\get_euro_exchange_rate_GET.py",
      "function_name": "get_euro_exchange_rate",
      "api_description": "Retrieves the current euro exchange rate in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\65\\get_official_dollar_exchange_rate_GET.py",
      "function_name": "get_official_dollar_exchange_rate",
      "api_description": "Retrieves the current official dollar exchange rate in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\65\\get_uruguayan_peso_exchange_rate_GET.py",
      "function_name": "get_uruguayan_peso_exchange_rate",
      "api_description": "Retrieves the current Uruguayan peso exchange rate in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\65\\get_wholesale_dollar_exchange_rate_GET.py",
      "function_name": "get_wholesale_dollar_exchange_rate",
      "api_description": "Retrieves the current wholesale dollar exchange rate in Argentina.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\66\\get_all_contributors_GET.py",
      "function_name": "get_all_contributors",
      "api_description": "Retrieves a listing of all contributors and their usernames.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\66\\get_contributions_by_user_GET.py",
      "function_name": "get_contributions_by_user",
      "api_description": "Retrieves all contributions made by a specific GitHub user.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\66\\get_contributors_for_recipe_GET.py",
      "function_name": "get_contributors_for_recipe",
      "api_description": "Retrieves information about the contributors for a specific recipe.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\66\\get_random_taco_GET.py",
      "function_name": "get_random_taco",
      "api_description": "Retrieves a random taco recipe including Base Layer, Mixin, Condiment, Seasoning, and Shell.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\66\\get_recipe_slugs_GET.py",
      "function_name": "get_recipe_slugs",
      "api_description": "Retrieves a mapping of slugs for a given recipe type.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\67\\calculate_expression_GET.py",
      "function_name": "calculate_expression",
      "api_description": "Reads a string input, decodes the base64 encoding, interprets it by breaking it down into smaller statements, and solves it following the order of precedence. Returns either an HTTP error code or a correct solution.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\68\\get_person_GET.py",
      "function_name": "get_person",
      "api_description": "Retrieves a person by ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\68\\\\get_person_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\68\\get_planet_GET.py",
      "function_name": "get_planet",
      "api_description": "Retrieves a planet by ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\68\\\\get_planet_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\68\\get_starship_GET.py",
      "function_name": "get_starship",
      "api_description": "Retrieves a starship by ID.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\68\\\\get_starship_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\69\\get_jsonp_response_GET.py",
      "function_name": "get_jsonp_response",
      "api_description": "Retrieves a JSONP response from the API using a callback function.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\69\\get_json_response_GET.py",
      "function_name": "get_json_response",
      "api_description": "Retrieves a JSON response from the API.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\69\\get_text_response_GET.py",
      "function_name": "get_text_response",
      "api_description": "Retrieves a plain text response from the API.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\7\\get_election_data_GET.py",
      "function_name": "get_election_data",
      "api_description": "Retrieves the current election data including candidates and votes.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\7\\get_metadata_GET.py",
      "function_name": "get_metadata",
      "api_description": "Retrieves metadata about the election candidates.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\7\\get_parties_GET.py",
      "function_name": "get_parties",
      "api_description": "Retrieves a list of political parties involved in the election.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\7\\get_votes_GET.py",
      "function_name": "get_votes",
      "api_description": "Retrieves the current vote counts for each party.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\70\\batch_gender_prediction_POST.py",
      "function_name": "batch_gender_prediction",
      "api_description": "Predicts the gender for multiple names in a single request.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\70\\check_gender_of_a_name_GET.py",
      "function_name": "check_gender_of_a_name",
      "api_description": "Predicts the gender of a given name.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\71\\get_dataset_list_GET.py",
      "function_name": "get_dataset_list",
      "api_description": "Retrieves a JSON-formatted list of all datasets available on the site.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\71\\get_tag_list_GET.py",
      "function_name": "get_tag_list",
      "api_description": "Retrieves a JSON-formatted list of all tags available on the site.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\71\\search_packages_GET.py",
      "function_name": "search_packages",
      "api_description": "Searches for datasets or resources matching a query.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\71\\search_resources_GET.py",
      "function_name": "search_resources",
      "api_description": "Searches for resources matching a query.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\71\\show_package_GET.py",
      "function_name": "show_package",
      "api_description": "Retrieves a full JSON representation of a dataset, resource, or other object by ID.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\71\\show_tag_GET.py",
      "function_name": "show_tag",
      "api_description": "Retrieves a full JSON representation of a tag by ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\72\\currencies_GET.py",
      "function_name": "currencies",
      "api_description": "Look up all currencies supported by the marketstack API.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\72\\dividends_data_GET.py",
      "function_name": "dividends_data",
      "api_description": "Look up information about the stock dividend for different symbols.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\72\\end_of_day_data_GET.py",
      "function_name": "end_of_day_data",
      "api_description": "Obtain end-of-day data for one or multiple stock tickers.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\72\\exchanges_GET.py",
      "function_name": "exchanges",
      "api_description": "Look up information about any of the 70+ stock exchanges supported by marketstack.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\72\\intraday_data_GET.py",
      "function_name": "intraday_data",
      "api_description": "Obtain intraday data with data intervals as short as one minute.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\72\\market_indices_GET.py",
      "function_name": "market_indices",
      "api_description": "Deliver end-of-day data for 750+ of the world's major indices, including the S&P 500 Index, the Dow Jones Industrial Average Index as well as the NASDAQ Composite Index.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\72\\splits_data_GET.py",
      "function_name": "splits_data",
      "api_description": "Look up information about the stock splits factor for different symbols.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\72\\tickers_GET.py",
      "function_name": "tickers",
      "api_description": "Look up information about one or multiple stock ticker symbols as well as obtain end-of-day, real-time and intraday market data for single tickers.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\72\\timezones_GET.py",
      "function_name": "timezones",
      "api_description": "Look up information about all supported timezones.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\73\\create_account_POST.py",
      "function_name": "create_account",
      "api_description": "Create a new user account.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\73\\get_article_content_GET.py",
      "function_name": "get_article_content",
      "api_description": "Get the contents of an article on English Wikipedia in HTML.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\73\\\\get_article_content_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\73\\login_POST.py",
      "function_name": "login",
      "api_description": "Log in and get authentication cookies.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\73\\logout_POST.py",
      "function_name": "logout",
      "api_description": "Log out and clear session data.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\73\\query_GET.py",
      "function_name": "query",
      "api_description": "Fetch data from and about MediaWiki.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\73\\\\query_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\74\\generate_random_password_GET.py",
      "function_name": "generate_random_password",
      "api_description": "Generates a random password of varying complexity.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\75\\get_next_mcu_film_GET.py",
      "function_name": "get_next_mcu_film",
      "api_description": "Retrieves information about the next MCU film.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\75\\get_next_mcu_film__development__GET.py",
      "function_name": "get_next_mcu_film__development_",
      "api_description": "Retrieves information about the next MCU film from the development branch.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\76\\get_all_characters_GET.py",
      "function_name": "get_all_characters",
      "api_description": "Returns all the characters found in the Puyo Nexus Wiki.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\76\\get_character_by_query_GET.py",
      "function_name": "get_character_by_query",
      "api_description": "Returns all the characters that match the query in either its name, Kana spelling, romanization, or other names.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\77\\companies_GET.py",
      "function_name": "companies",
      "api_description": "Retrieves a list of companies.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\77\\datasets_GET.py",
      "function_name": "datasets",
      "api_description": "Retrieves a list of datasets.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\77\\maritime_ports_GET.py",
      "function_name": "maritime_ports",
      "api_description": "Retrieves a list of maritime ports.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\77\\maritime_vessels_GET.py",
      "function_name": "maritime_vessels",
      "api_description": "Retrieves a list of maritime vessels.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\77\\retail_items_GET.py",
      "function_name": "retail_items",
      "api_description": "Retrieves a list of retail items.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\77\\series_GET.py",
      "function_name": "series",
      "api_description": "Retrieves a list of data series.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\77\\sources_GET.py",
      "function_name": "sources",
      "api_description": "Retrieves a list of data sources.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\78\\get_authors_GET.py",
      "function_name": "get_authors",
      "api_description": "Retrieves a list of all authors.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\78\\get_author_details_GET.py",
      "function_name": "get_author_details",
      "api_description": "Retrieves details of poems by a specific author.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\78\\get_lines_GET.py",
      "function_name": "get_lines",
      "api_description": "Retrieves poems containing specific lines.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\78\\get_poems_by_combination_GET.py",
      "function_name": "get_poems_by_combination",
      "api_description": "Retrieves poems based on a combination of input fields and search terms.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\78\\get_poems_by_line_count_GET.py",
      "function_name": "get_poems_by_line_count",
      "api_description": "Retrieves poems with a specific number of lines.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\78\\\\get_poems_by_line_count_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\78\\get_random_poems_GET.py",
      "function_name": "get_random_poems",
      "api_description": "Retrieves a specified number of random poems.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\78\\\\get_random_poems_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\78\\get_titles_GET.py",
      "function_name": "get_titles",
      "api_description": "Retrieves a list of all poem titles.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\78\\get_title_details_GET.py",
      "function_name": "get_title_details",
      "api_description": "Retrieves details of a specific poem by title.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\79\\get_current_stable_version_GET.py",
      "function_name": "get_current_stable_version",
      "api_description": "Shows the current stable version of the API.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\79\\get_latest_memes_GET.py",
      "function_name": "get_latest_memes",
      "api_description": "Shows n latest memes.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\79\\\\get_latest_memes_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\79\\get_memes_with_pagination_GET.py",
      "function_name": "get_memes_with_pagination",
      "api_description": "Shows n memes with pagination.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\79\\\\get_memes_with_pagination_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\79\\get_random_memes_GET.py",
      "function_name": "get_random_memes",
      "api_description": "Shows randomly n memes.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\79\\\\get_random_memes_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\8\\generate_chart_GET.py",
      "function_name": "generate_chart",
      "api_description": "Generates a chart image based on the specified parameters.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\8\\\\generate_chart_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\80\\current_exchange_rate_of_a_currency_GET.py",
      "function_name": "current_exchange_rate_of_a_currency",
      "api_description": "Retrieve the current exchange rate of a specified currency from a specified table type.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\80\\current_gold_price_GET.py",
      "function_name": "current_gold_price",
      "api_description": "Retrieve the current gold price.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\80\\current_table_of_exchange_rates_GET.py",
      "function_name": "current_table_of_exchange_rates",
      "api_description": "Retrieve the current table of exchange rates of a specified type.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\80\\exchange_rate_of_a_currency_published_on_specific_date_GET.py",
      "function_name": "exchange_rate_of_a_currency_published_on_specific_date",
      "api_description": "Retrieve the exchange rate of a specified currency from a specified table type published on a specific date.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\80\\exchange_rate_of_a_currency_published_today_GET.py",
      "function_name": "exchange_rate_of_a_currency_published_today",
      "api_description": "Retrieve the exchange rate of a specified currency from a specified table type published today.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\80\\exchange_rate_table_published_on_specific_date_GET.py",
      "function_name": "exchange_rate_table_published_on_specific_date",
      "api_description": "Retrieve the exchange rate table of a specified type published on a specific date.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\80\\exchange_rate_table_published_today_GET.py",
      "function_name": "exchange_rate_table_published_today",
      "api_description": "Retrieve the exchange rate table of a specified type published today.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\80\\gold_price_published_on_specific_date_GET.py",
      "function_name": "gold_price_published_on_specific_date",
      "api_description": "Retrieve the gold price published on a specific date.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\80\\gold_price_published_today_GET.py",
      "function_name": "gold_price_published_today",
      "api_description": "Retrieve the gold price published today.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\80\\series_of_exchange_rates_of_a_currency_published_in_date_range_GET.py",
      "function_name": "series_of_exchange_rates_of_a_currency_published_in_date_range",
      "api_description": "Retrieve a series of exchange rates of a specified currency from a specified table type published from start date to end date.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\80\\series_of_exchange_rate_tables_published_in_date_range_GET.py",
      "function_name": "series_of_exchange_rate_tables_published_in_date_range",
      "api_description": "Retrieve a series of exchange rate tables of a specified type published from start date to end date.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\80\\series_of_gold_prices_published_in_date_range_GET.py",
      "function_name": "series_of_gold_prices_published_in_date_range",
      "api_description": "Retrieve a series of gold prices published from start date to end date.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\80\\series_of_latest_exchange_rates_of_a_currency_GET.py",
      "function_name": "series_of_latest_exchange_rates_of_a_currency",
      "api_description": "Retrieve a series of the latest exchange rates of a specified currency from a specified table type.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\80\\\\series_of_latest_exchange_rates_of_a_currency_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\80\\series_of_latest_gold_prices_GET.py",
      "function_name": "series_of_latest_gold_prices",
      "api_description": "Retrieve a series of the latest gold price quotations.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\80\\\\series_of_latest_gold_prices_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\80\\series_of_latest_tables_of_exchange_rates_GET.py",
      "function_name": "series_of_latest_tables_of_exchange_rates",
      "api_description": "Retrieve a series of the latest tables of exchange rates of a specified type.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\80\\\\series_of_latest_tables_of_exchange_rates_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\81\\create_a_post_POST.py",
      "function_name": "create_a_post",
      "api_description": "Creates a new post.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\81\\delete_a_post_DELETE.py",
      "function_name": [],
      "api_description": {
        "title": "JSONPlaceholder API Documentation",
        "endpoints": [
          {
            "name": "Get All Posts",
            "description": "Retrieves a list of all posts.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/posts",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Post by ID",
            "description": "Retrieves a single post by its ID.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Comments for Post",
            "description": "Retrieves comments for a specific post by post ID.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/posts/1/comments",
            "headers": [],
            "required_parameters": [
              {
                "name": "postId",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Comments by Post ID",
            "description": "Retrieves comments filtered by post ID.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/comments?postId=1",
            "headers": [],
            "required_parameters": [
              {
                "name": "postId",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Create a Post",
            "description": "Creates a new post.",
            "method": "POST",
            "url": "https://jsonplaceholder.typicode.com/posts",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "required_parameters": [
              {
                "name": "title",
                "type": "string",
                "description": "The title of the post",
                "default": null,
                "example": "My New Post"
              },
              {
                "name": "body",
                "type": "string",
                "description": "The body content of the post",
                "default": null,
                "example": "This is the content of my new post."
              },
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user creating the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Update a Post",
            "description": "Updates an existing post by its ID.",
            "method": "PUT",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              },
              {
                "name": "title",
                "type": "string",
                "description": "The title of the post",
                "default": null,
                "example": "Updated Post Title"
              },
              {
                "name": "body",
                "type": "string",
                "description": "The body content of the post",
                "default": null,
                "example": "This is the updated content of the post."
              },
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user updating the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Partially Update a Post",
            "description": "Partially updates an existing post by its ID.",
            "method": "PATCH",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              },
              {
                "name": "title",
                "type": "string",
                "description": "The title of the post",
                "default": null,
                "example": "Partially Updated Post Title"
              },
              {
                "name": "body",
                "type": "string",
                "description": "The body content of the post",
                "default": null,
                "example": "This is the partially updated content of the post."
              },
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user updating the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete a Post",
            "description": "Deletes an existing post by its ID.",
            "method": "DELETE",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\81\\get_all_posts_GET.py",
      "function_name": "get_all_posts",
      "api_description": "Retrieves a list of all posts.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\81\\get_comments_by_post_id_GET.py",
      "function_name": "get_comments_by_post_id",
      "api_description": "Retrieves comments filtered by post ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\81\\get_comments_for_post_GET.py",
      "function_name": "get_comments_for_post",
      "api_description": "Retrieves comments for a specific post by post ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\81\\get_post_by_id_GET.py",
      "function_name": "get_post_by_id",
      "api_description": "Retrieves a single post by its ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\81\\partially_update_a_post_PATCH.py",
      "function_name": [],
      "api_description": {
        "title": "JSONPlaceholder API Documentation",
        "endpoints": [
          {
            "name": "Get All Posts",
            "description": "Retrieves a list of all posts.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/posts",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Post by ID",
            "description": "Retrieves a single post by its ID.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Comments for Post",
            "description": "Retrieves comments for a specific post by post ID.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/posts/1/comments",
            "headers": [],
            "required_parameters": [
              {
                "name": "postId",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Comments by Post ID",
            "description": "Retrieves comments filtered by post ID.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/comments?postId=1",
            "headers": [],
            "required_parameters": [
              {
                "name": "postId",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Create a Post",
            "description": "Creates a new post.",
            "method": "POST",
            "url": "https://jsonplaceholder.typicode.com/posts",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "required_parameters": [
              {
                "name": "title",
                "type": "string",
                "description": "The title of the post",
                "default": null,
                "example": "My New Post"
              },
              {
                "name": "body",
                "type": "string",
                "description": "The body content of the post",
                "default": null,
                "example": "This is the content of my new post."
              },
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user creating the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Update a Post",
            "description": "Updates an existing post by its ID.",
            "method": "PUT",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              },
              {
                "name": "title",
                "type": "string",
                "description": "The title of the post",
                "default": null,
                "example": "Updated Post Title"
              },
              {
                "name": "body",
                "type": "string",
                "description": "The body content of the post",
                "default": null,
                "example": "This is the updated content of the post."
              },
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user updating the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Partially Update a Post",
            "description": "Partially updates an existing post by its ID.",
            "method": "PATCH",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              },
              {
                "name": "title",
                "type": "string",
                "description": "The title of the post",
                "default": null,
                "example": "Partially Updated Post Title"
              },
              {
                "name": "body",
                "type": "string",
                "description": "The body content of the post",
                "default": null,
                "example": "This is the partially updated content of the post."
              },
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user updating the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete a Post",
            "description": "Deletes an existing post by its ID.",
            "method": "DELETE",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\81\\update_a_post_PUT.py",
      "function_name": [],
      "api_description": {
        "title": "JSONPlaceholder API Documentation",
        "endpoints": [
          {
            "name": "Get All Posts",
            "description": "Retrieves a list of all posts.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/posts",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Post by ID",
            "description": "Retrieves a single post by its ID.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Comments for Post",
            "description": "Retrieves comments for a specific post by post ID.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/posts/1/comments",
            "headers": [],
            "required_parameters": [
              {
                "name": "postId",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Comments by Post ID",
            "description": "Retrieves comments filtered by post ID.",
            "method": "GET",
            "url": "https://jsonplaceholder.typicode.com/comments?postId=1",
            "headers": [],
            "required_parameters": [
              {
                "name": "postId",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Create a Post",
            "description": "Creates a new post.",
            "method": "POST",
            "url": "https://jsonplaceholder.typicode.com/posts",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "required_parameters": [
              {
                "name": "title",
                "type": "string",
                "description": "The title of the post",
                "default": null,
                "example": "My New Post"
              },
              {
                "name": "body",
                "type": "string",
                "description": "The body content of the post",
                "default": null,
                "example": "This is the content of my new post."
              },
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user creating the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Update a Post",
            "description": "Updates an existing post by its ID.",
            "method": "PUT",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              },
              {
                "name": "title",
                "type": "string",
                "description": "The title of the post",
                "default": null,
                "example": "Updated Post Title"
              },
              {
                "name": "body",
                "type": "string",
                "description": "The body content of the post",
                "default": null,
                "example": "This is the updated content of the post."
              },
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user updating the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Partially Update a Post",
            "description": "Partially updates an existing post by its ID.",
            "method": "PATCH",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              },
              {
                "name": "title",
                "type": "string",
                "description": "The title of the post",
                "default": null,
                "example": "Partially Updated Post Title"
              },
              {
                "name": "body",
                "type": "string",
                "description": "The body content of the post",
                "default": null,
                "example": "This is the partially updated content of the post."
              },
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user updating the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete a Post",
            "description": "Deletes an existing post by its ID.",
            "method": "DELETE",
            "url": "https://jsonplaceholder.typicode.com/posts/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the post",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\82\\api_status_GET.py",
      "function_name": "api_status",
      "api_description": "Checks downtimes or upgrade schedules of the API.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\82\\get_bank_details_using_ifsc_GET.py",
      "function_name": "get_bank_details_using_ifsc",
      "api_description": "Fetches bank details using the IFSC code.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\82\\get_data_by_selections_GET.py",
      "function_name": "get_data_by_selections",
      "api_description": "Fetches bank data based on various selection criteria.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\82\\get_excel_file_of_any_bank_GET.py",
      "function_name": "get_excel_file_of_any_bank",
      "api_description": "Downloads an Excel file containing details of any bank.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\83\\get_chapter_GET.py",
      "function_name": "get_chapter",
      "api_description": "Get a specific chapter of the Quran for a specific edition.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\83\\\\get_chapter_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\83\\get_chapter__minified__GET.py",
      "function_name": "get_chapter__minified_",
      "api_description": "Get a specific chapter of the Quran in minified format for a specific edition.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\83\\\\get_chapter__minified__GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\83\\get_edition_GET.py",
      "function_name": "get_edition",
      "api_description": "Get the whole Quran or Quran translation for a specific edition.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\83\\get_edition__latin_script_with_diacritical_marks__GET.py",
      "function_name": "get_edition__latin_script_with_diacritical_marks_",
      "api_description": "Get the whole Quran or Quran translation in Latin (Roman) script with diacritical marks for a specific edition.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\83\\get_edition__latin_script__GET.py",
      "function_name": "get_edition__latin_script_",
      "api_description": "Get the whole Quran or Quran translation in Latin (Roman) script for a specific edition.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\83\\get_juz_GET.py",
      "function_name": "get_juz",
      "api_description": "Get a specific Juz of the Quran for a specific edition.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\83\\\\get_juz_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\83\\get_manzil_GET.py",
      "function_name": "get_manzil",
      "api_description": "Get a specific Manzil of the Quran for a specific edition.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\83\\\\get_manzil_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\83\\get_maqra_GET.py",
      "function_name": "get_maqra",
      "api_description": "Get a specific Maqra of the Quran for a specific edition.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\83\\\\get_maqra_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\83\\get_page_GET.py",
      "function_name": "get_page",
      "api_description": "Get a specific page of the Quran for a specific edition.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\83\\\\get_page_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\83\\get_quran_info_GET.py",
      "function_name": "get_quran_info",
      "api_description": "Get all the details about the Quran such as number of Juzs, Sajdas, Rukus, etc.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\83\\get_ruku_GET.py",
      "function_name": "get_ruku",
      "api_description": "Get a specific Ruku of the Quran for a specific edition.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\83\\\\get_ruku_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\83\\get_verse_GET.py",
      "function_name": "get_verse",
      "api_description": "Get a specific verse of a chapter of the Quran for a specific edition.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\83\\\\get_verse_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\83\\list_editions_GET.py",
      "function_name": "list_editions",
      "api_description": "Lists all the available editions in prettified JSON format.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\83\\list_editions__minified__GET.py",
      "function_name": "list_editions__minified_",
      "api_description": "Lists all the available editions in minified JSON format.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\83\\list_fonts_GET.py",
      "function_name": "list_fonts",
      "api_description": "Lists available Arabic fonts.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\84\\proxy_get_request_POST.py",
      "function_name": "proxy_get_request",
      "api_description": "Get around the annoying CORS error by using this proxy as a middle man.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\85\\all_characters_GET.py",
      "function_name": "all_characters",
      "api_description": "Retrieves a list of all characters.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\85\\all_episodes_GET.py",
      "function_name": "all_episodes",
      "api_description": "Retrieves a list of all episodes.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\85\\all_locations_GET.py",
      "function_name": "all_locations",
      "api_description": "Retrieves a list of all locations.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\85\\all_quotes_GET.py",
      "function_name": "all_quotes",
      "api_description": "Retrieves a list of all quotes from Final Space.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\85\\endpoints_data_GET.py",
      "function_name": "endpoints_data",
      "api_description": "Provides information about all available API resources.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\85\\single_character_GET.py",
      "function_name": "single_character",
      "api_description": "Retrieves information about a single character by ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\85\\single_episode_GET.py",
      "function_name": "single_episode",
      "api_description": "Retrieves information about a single episode by ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\85\\single_location_GET.py",
      "function_name": "single_location",
      "api_description": "Retrieves information about a single location by ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\87\\batch_geocoding_POST.py",
      "function_name": "batch_geocoding",
      "api_description": "Processes a batch of locations and outputs the location information.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\87\\forward_geocoding_GET.py",
      "function_name": "forward_geocoding",
      "api_description": "Converts a place name into geographic coordinates.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\87\\geolocate_ip_address_POST.py",
      "function_name": "geolocate_ip_address",
      "api_description": "Converts an IP address into geographic coordinates.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\87\\geoparsing_POST.py",
      "function_name": "geoparsing",
      "api_description": "Identifies and parses place names from free-text descriptions and converts them into geographic coordinates.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\87\\reverse_geocoding_GET.py",
      "function_name": "reverse_geocoding",
      "api_description": "Converts geographic coordinates into a description of the nearest location.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\88\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438_\u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a_\u0434\u043e\u043b\u043b\u0430\u0440\u0430_\u0441\u0448\u0430_GET.py",
      "function_name": "\u950c\u82af\u8c22\u890d\u8914\u68b0\u85aa\u61c8\u68b0_\u5199\u61c8\u85aa\u90aa\u5c51\u61c8\u6cfb\u61c8_\u6cfb\u82af\u890c\u61c8\u8909\u82af\u80c1\u82af\u6cfb_\u5199\u82af\u8c22\u8c22\u90aa\u8909\u90aa_\u890b\u8915\u90aa",
      "api_description": {
        "title": "\u0411\u0430\u043d\u043a \u0420\u043e\u0441\u0441\u0438\u0438 API Documentation",
        "endpoints": [
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_daily.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date_req",
                "type": "string",
                "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443.",
                "default": null,
                "example": "02/03/2002"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_dynamic.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "02/03/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "14/03/2001"
              },
              {
                "name": "VAL_NM_RQ",
                "type": "string",
                "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b.",
                "default": null,
                "example": "R01235"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_ostat.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/06/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "05/06/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_metall.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_mkr.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_depo.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_News.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_bic.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "bic",
                "type": "string",
                "description": "\u041a\u043e\u0434 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
                "default": null,
                "example": "044525774"
              },
              {
                "name": "name",
                "type": "string",
                "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 (\u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f) \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438.",
                "default": null,
                "example": "\u0410\u0412\u0422\u041e"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_swap.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2002"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2002"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XMLCoinsBase.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2005"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2005"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435.",
            "method": "GET",
            "url": "http://www.cbr.ru/ref/blacklist/BlackList.xml",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\88\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438_\u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a_\u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445_\u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432_GET.py",
      "function_name": "\u950c\u82af\u8c22\u890d\u8914\u68b0\u85aa\u61c8\u68b0_\u5199\u61c8\u85aa\u90aa\u5c51\u61c8\u6cfb\u61c8_\u6cfb\u82af\u890c\u61c8\u8909\u82af\u80c1\u82af\u6cfb_\u5199\u8909\u90aa\u8c10\u82af\u8911\u68b0\u85aa\u85aa\u8918\u890f_\u5c51\u68b0\u890c\u90aa\u8c22\u8c22\u82af\u80c1",
      "api_description": {
        "title": "\u0411\u0430\u043d\u043a \u0420\u043e\u0441\u0441\u0438\u0438 API Documentation",
        "endpoints": [
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_daily.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date_req",
                "type": "string",
                "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443.",
                "default": null,
                "example": "02/03/2002"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_dynamic.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "02/03/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "14/03/2001"
              },
              {
                "name": "VAL_NM_RQ",
                "type": "string",
                "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b.",
                "default": null,
                "example": "R01235"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_ostat.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/06/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "05/06/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_metall.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_mkr.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_depo.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_News.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_bic.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "bic",
                "type": "string",
                "description": "\u041a\u043e\u0434 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
                "default": null,
                "example": "044525774"
              },
              {
                "name": "name",
                "type": "string",
                "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 (\u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f) \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438.",
                "default": null,
                "example": "\u0410\u0412\u0422\u041e"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_swap.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2002"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2002"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XMLCoinsBase.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2005"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2005"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435.",
            "method": "GET",
            "url": "http://www.cbr.ru/ref/blacklist/BlackList.xml",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\88\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438_\u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445_\u0446\u0435\u043d_\u0431\u0430\u043d\u043a\u0430_\u0440\u043e\u0441\u0441\u0438\u0438_\u043d\u0430_\u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435_\u043c\u043e\u043d\u0435\u0442\u044b_GET.py",
      "function_name": "\u950c\u82af\u8c22\u890d\u8914\u68b0\u85aa\u61c8\u68b0_\u5199\u61c8\u85aa\u90aa\u5c51\u61c8\u6cfb\u61c8_\u82af\u890c\u950c\u890d\u890b\u6cfb\u85aa\u8918\u890f_\u8911\u68b0\u85aa_\u659c\u90aa\u85aa\u6cfb\u90aa_\u8909\u82af\u890b\u890b\u61c8\u61c8_\u85aa\u90aa_\u61c8\u85aa\u80c1\u68b0\u890b\u890c\u61c8\u8911\u61c8\u82af\u85aa\u85aa\u8918\u68b0_\u5c51\u82af\u85aa\u68b0\u890c\u8918",
      "api_description": {
        "title": "\u0411\u0430\u043d\u043a \u0420\u043e\u0441\u0441\u0438\u0438 API Documentation",
        "endpoints": [
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_daily.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date_req",
                "type": "string",
                "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443.",
                "default": null,
                "example": "02/03/2002"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_dynamic.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "02/03/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "14/03/2001"
              },
              {
                "name": "VAL_NM_RQ",
                "type": "string",
                "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b.",
                "default": null,
                "example": "R01235"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_ostat.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/06/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "05/06/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_metall.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_mkr.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_depo.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_News.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_bic.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "bic",
                "type": "string",
                "description": "\u041a\u043e\u0434 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
                "default": null,
                "example": "044525774"
              },
              {
                "name": "name",
                "type": "string",
                "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 (\u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f) \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438.",
                "default": null,
                "example": "\u0410\u0412\u0422\u041e"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_swap.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2002"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2002"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XMLCoinsBase.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2005"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2005"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435.",
            "method": "GET",
            "url": "http://www.cbr.ru/ref/blacklist/BlackList.xml",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\88\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438_\u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439_\u043e\u0431_\u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445_\u0441\u0440\u0435\u0434\u0441\u0442\u0432_\u043d\u0430_\u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445_\u0441\u0447\u0435\u0442\u0430\u0445_\u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445_\u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439_GET.py",
      "function_name": "\u950c\u82af\u8c22\u890d\u8914\u68b0\u85aa\u61c8\u68b0_\u5199\u61c8\u85aa\u90aa\u5c51\u61c8\u6cfb\u61c8_\u890b\u80c1\u68b0\u5199\u68b0\u85aa\u61c8\u6cc4_\u82af\u659c_\u82af\u890b\u890c\u90aa\u890c\u6cfb\u90aa\u890f_\u890b\u8909\u68b0\u5199\u890b\u890c\u80c1_\u85aa\u90aa_\u6cfb\u82af\u8909\u8909\u68b0\u890b\u950c\u82af\u85aa\u5199\u68b0\u85aa\u890c\u890b\u6cfb\u61c8\u890f_\u890b\u8914\u68b0\u890c\u90aa\u890f_\u6cfb\u8909\u68b0\u5199\u61c8\u890c\u85aa\u8918\u890f_\u82af\u8909\u8c10\u90aa\u85aa\u61c8\u87f9\u90aa\u8911\u61c8\u6cc4",
      "api_description": {
        "title": "\u0411\u0430\u043d\u043a \u0420\u043e\u0441\u0441\u0438\u0438 API Documentation",
        "endpoints": [
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_daily.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date_req",
                "type": "string",
                "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443.",
                "default": null,
                "example": "02/03/2002"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_dynamic.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "02/03/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "14/03/2001"
              },
              {
                "name": "VAL_NM_RQ",
                "type": "string",
                "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b.",
                "default": null,
                "example": "R01235"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_ostat.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/06/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "05/06/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_metall.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_mkr.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_depo.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_News.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_bic.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "bic",
                "type": "string",
                "description": "\u041a\u043e\u0434 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
                "default": null,
                "example": "044525774"
              },
              {
                "name": "name",
                "type": "string",
                "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 (\u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f) \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438.",
                "default": null,
                "example": "\u0410\u0412\u0422\u041e"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_swap.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2002"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2002"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XMLCoinsBase.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2005"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2005"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435.",
            "method": "GET",
            "url": "http://www.cbr.ru/ref/blacklist/BlackList.xml",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\88\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438_\u0441\u0442\u0430\u0432\u043e\u043a__\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439_\u0441\u0432\u043e\u043f__GET.py",
      "function_name": "\u950c\u82af\u8c22\u890d\u8914\u68b0\u85aa\u61c8\u68b0_\u5199\u61c8\u85aa\u90aa\u5c51\u61c8\u6cfb\u61c8_\u890b\u890c\u90aa\u80c1\u82af\u6cfb__\u80c1\u90aa\u8c22\u891e\u890c\u85aa\u8918\u6cc4_\u890b\u80c1\u82af\u950c_",
      "api_description": {
        "title": "\u0411\u0430\u043d\u043a \u0420\u043e\u0441\u0441\u0438\u0438 API Documentation",
        "endpoints": [
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_daily.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date_req",
                "type": "string",
                "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443.",
                "default": null,
                "example": "02/03/2002"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_dynamic.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "02/03/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "14/03/2001"
              },
              {
                "name": "VAL_NM_RQ",
                "type": "string",
                "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b.",
                "default": null,
                "example": "R01235"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_ostat.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/06/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "05/06/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_metall.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_mkr.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_depo.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_News.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_bic.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "bic",
                "type": "string",
                "description": "\u041a\u043e\u0434 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
                "default": null,
                "example": "044525774"
              },
              {
                "name": "name",
                "type": "string",
                "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 (\u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f) \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438.",
                "default": null,
                "example": "\u0410\u0412\u0422\u041e"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_swap.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2002"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2002"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XMLCoinsBase.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2005"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2005"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435.",
            "method": "GET",
            "url": "http://www.cbr.ru/ref/blacklist/BlackList.xml",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\88\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438_\u0441\u0442\u0430\u0432\u043e\u043a_\u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e_\u0440\u044b\u043d\u043a\u0430_GET.py",
      "function_name": "\u950c\u82af\u8c22\u890d\u8914\u68b0\u85aa\u61c8\u68b0_\u5199\u61c8\u85aa\u90aa\u5c51\u61c8\u6cfb\u61c8_\u890b\u890c\u90aa\u80c1\u82af\u6cfb_\u5c51\u68b0\u5378\u659c\u90aa\u85aa\u6cfb\u82af\u80c1\u890b\u6cfb\u82af\u8c10\u82af_\u8909\u8918\u85aa\u6cfb\u90aa",
      "api_description": {
        "title": "\u0411\u0430\u043d\u043a \u0420\u043e\u0441\u0441\u0438\u0438 API Documentation",
        "endpoints": [
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_daily.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date_req",
                "type": "string",
                "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443.",
                "default": null,
                "example": "02/03/2002"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_dynamic.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "02/03/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "14/03/2001"
              },
              {
                "name": "VAL_NM_RQ",
                "type": "string",
                "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b.",
                "default": null,
                "example": "R01235"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_ostat.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/06/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "05/06/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_metall.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_mkr.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_depo.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_News.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_bic.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "bic",
                "type": "string",
                "description": "\u041a\u043e\u0434 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
                "default": null,
                "example": "044525774"
              },
              {
                "name": "name",
                "type": "string",
                "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 (\u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f) \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438.",
                "default": null,
                "example": "\u0410\u0412\u0422\u041e"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_swap.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2002"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2002"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XMLCoinsBase.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2005"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2005"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435.",
            "method": "GET",
            "url": "http://www.cbr.ru/ref/blacklist/BlackList.xml",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\88\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438_\u0441\u0442\u0430\u0432\u043e\u043a_\u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f_\u0441\u0440\u0435\u0434\u0441\u0442\u0432_\u043f\u043e_\u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c_\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c_\u0431\u0430\u043d\u043a\u0430_\u0440\u043e\u0441\u0441\u0438\u0438_\u043d\u0430_\u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c_\u0440\u044b\u043d\u043a\u0435_GET.py",
      "function_name": "\u950c\u82af\u8c22\u890d\u8914\u68b0\u85aa\u61c8\u68b0_\u5199\u61c8\u85aa\u90aa\u5c51\u61c8\u6cfb\u61c8_\u890b\u890c\u90aa\u80c1\u82af\u6cfb_\u950c\u8909\u61c8\u80c1\u8c22\u68b0\u8914\u68b0\u85aa\u61c8\u891f_\u890b\u8909\u68b0\u5199\u890b\u890c\u80c1_\u950c\u82af_\u5199\u68b0\u950c\u82af\u87f9\u61c8\u890c\u85aa\u8918\u5c51_\u82af\u950c\u68b0\u8909\u90aa\u8911\u61c8\u891f\u5c51_\u659c\u90aa\u85aa\u6cfb\u90aa_\u8909\u82af\u890b\u890b\u61c8\u61c8_\u85aa\u90aa_\u5199\u68b0\u85aa\u68b0\u5378\u85aa\u82af\u5c51_\u8909\u8918\u85aa\u6cfb\u68b0",
      "api_description": {
        "title": "\u0411\u0430\u043d\u043a \u0420\u043e\u0441\u0441\u0438\u0438 API Documentation",
        "endpoints": [
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_daily.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date_req",
                "type": "string",
                "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443.",
                "default": null,
                "example": "02/03/2002"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_dynamic.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "02/03/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "14/03/2001"
              },
              {
                "name": "VAL_NM_RQ",
                "type": "string",
                "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b.",
                "default": null,
                "example": "R01235"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_ostat.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/06/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "05/06/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_metall.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_mkr.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_depo.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_News.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_bic.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "bic",
                "type": "string",
                "description": "\u041a\u043e\u0434 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
                "default": null,
                "example": "044525774"
              },
              {
                "name": "name",
                "type": "string",
                "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 (\u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f) \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438.",
                "default": null,
                "example": "\u0410\u0412\u0422\u041e"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_swap.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2002"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2002"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XMLCoinsBase.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2005"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2005"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435.",
            "method": "GET",
            "url": "http://www.cbr.ru/ref/blacklist/BlackList.xml",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\88\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a_\u043d\u0430_\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439_\u0434\u0435\u043d\u044c_GET.py",
      "function_name": "\u950c\u82af\u8c22\u890d\u8914\u68b0\u85aa\u61c8\u68b0_\u6cfb\u82af\u890c\u61c8\u8909\u82af\u80c1\u82af\u6cfb_\u85aa\u90aa_\u87f9\u90aa\u5199\u90aa\u85aa\u85aa\u8918\u6cc4_\u5199\u68b0\u85aa\u891c",
      "api_description": {
        "title": "\u0411\u0430\u043d\u043a \u0420\u043e\u0441\u0441\u0438\u0438 API Documentation",
        "endpoints": [
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_daily.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date_req",
                "type": "string",
                "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443.",
                "default": null,
                "example": "02/03/2002"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_dynamic.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "02/03/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "14/03/2001"
              },
              {
                "name": "VAL_NM_RQ",
                "type": "string",
                "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b.",
                "default": null,
                "example": "R01235"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_ostat.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/06/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "05/06/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_metall.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_mkr.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_depo.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_News.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_bic.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "bic",
                "type": "string",
                "description": "\u041a\u043e\u0434 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
                "default": null,
                "example": "044525774"
              },
              {
                "name": "name",
                "type": "string",
                "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 (\u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f) \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438.",
                "default": null,
                "example": "\u0410\u0412\u0422\u041e"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_swap.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2002"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2002"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XMLCoinsBase.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2005"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2005"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435.",
            "method": "GET",
            "url": "http://www.cbr.ru/ref/blacklist/BlackList.xml",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\88\\\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a_\u043d\u0430_\u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439_\u0434\u0435\u043d\u044c_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\88\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439_\u0441\u0435\u0440\u0432\u0435\u0440\u0430_GET.py",
      "function_name": "\u950c\u82af\u8c22\u890d\u8914\u68b0\u85aa\u61c8\u68b0_\u85aa\u82af\u80c1\u82af\u890b\u890c\u68b0\u6cc4_\u890b\u68b0\u8909\u80c1\u68b0\u8909\u90aa",
      "api_description": {
        "title": "\u0411\u0430\u043d\u043a \u0420\u043e\u0441\u0441\u0438\u0438 API Documentation",
        "endpoints": [
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_daily.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date_req",
                "type": "string",
                "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443.",
                "default": null,
                "example": "02/03/2002"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_dynamic.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "02/03/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "14/03/2001"
              },
              {
                "name": "VAL_NM_RQ",
                "type": "string",
                "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b.",
                "default": null,
                "example": "R01235"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_ostat.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/06/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "05/06/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_metall.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_mkr.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_depo.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_News.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_bic.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "bic",
                "type": "string",
                "description": "\u041a\u043e\u0434 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
                "default": null,
                "example": "044525774"
              },
              {
                "name": "name",
                "type": "string",
                "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 (\u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f) \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438.",
                "default": null,
                "example": "\u0410\u0412\u0422\u041e"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_swap.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2002"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2002"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XMLCoinsBase.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2005"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2005"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435.",
            "method": "GET",
            "url": "http://www.cbr.ru/ref/blacklist/BlackList.xml",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\88\\\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439_\u0441\u0435\u0440\u0432\u0435\u0440\u0430_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\88\\\u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435_\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f_\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439_\u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445_\u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439_\u043a\u043e\u0434\u0430\u043c_bic_GET.py",
      "function_name": "\u950c\u82af\u8c22\u890d\u8914\u68b0\u85aa\u61c8\u68b0_\u890b\u82af\u82af\u890c\u80c1\u68b0\u890c\u890b\u890c\u80c1\u61c8\u891f_\u85aa\u90aa\u87f9\u80c1\u90aa\u85aa\u61c8\u6cc4_\u6cfb\u8909\u68b0\u5199\u61c8\u890c\u85aa\u8918\u890f_\u82af\u8909\u8c10\u90aa\u85aa\u61c8\u87f9\u90aa\u8911\u61c8\u6cc4_\u6cfb\u82af\u5199\u90aa\u5c51_bic",
      "api_description": {
        "title": "\u0411\u0430\u043d\u043a \u0420\u043e\u0441\u0441\u0438\u0438 API Documentation",
        "endpoints": [
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_daily.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date_req",
                "type": "string",
                "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443.",
                "default": null,
                "example": "02/03/2002"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_dynamic.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "02/03/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "14/03/2001"
              },
              {
                "name": "VAL_NM_RQ",
                "type": "string",
                "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b.",
                "default": null,
                "example": "R01235"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_ostat.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/06/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "05/06/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_metall.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_mkr.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_depo.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_News.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_bic.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "bic",
                "type": "string",
                "description": "\u041a\u043e\u0434 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
                "default": null,
                "example": "044525774"
              },
              {
                "name": "name",
                "type": "string",
                "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 (\u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f) \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438.",
                "default": null,
                "example": "\u0410\u0412\u0422\u041e"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_swap.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2002"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2002"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XMLCoinsBase.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2005"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2005"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435.",
            "method": "GET",
            "url": "http://www.cbr.ru/ref/blacklist/BlackList.xml",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\88\\\u0441\u043f\u0438\u0441\u043e\u043a_\u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439_\u0441_\u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438_\u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438_\u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439_\u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438_\u043d\u0430_\u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c_\u0440\u044b\u043d\u043a\u0435_GET.py",
      "function_name": "\u890b\u950c\u61c8\u890b\u82af\u6cfb_\u6cfb\u82af\u5c51\u950c\u90aa\u85aa\u61c8\u6cc4_\u890b_\u80c1\u8918\u891f\u80c1\u8c22\u68b0\u85aa\u85aa\u8918\u5c51\u61c8_\u950c\u8909\u61c8\u87f9\u85aa\u90aa\u6cfb\u90aa\u5c51\u61c8_\u85aa\u68b0\u8c22\u68b0\u8c10\u90aa\u8c22\u891c\u85aa\u82af\u6cc4_\u5199\u68b0\u891f\u890c\u68b0\u8c22\u891c\u85aa\u82af\u890b\u890c\u61c8_\u85aa\u90aa_\u890e\u61c8\u85aa\u90aa\u85aa\u890b\u82af\u80c1\u82af\u5c51_\u8909\u8918\u85aa\u6cfb\u68b0",
      "api_description": {
        "title": "\u0411\u0430\u043d\u043a \u0420\u043e\u0441\u0441\u0438\u0438 API Documentation",
        "endpoints": [
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_daily.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "date_req",
                "type": "string",
                "description": "\u0414\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u043d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u0434\u0430\u0442\u0443.",
                "default": null,
                "example": "02/03/2002"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0421\u0428\u0410 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_dynamic.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "02/03/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "14/03/2001"
              },
              {
                "name": "VAL_NM_RQ",
                "type": "string",
                "description": "\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u0434 \u0432\u0430\u043b\u044e\u0442\u044b.",
                "default": null,
                "example": "R01235"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u0441\u043f\u043e\u043d\u0434\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0441\u0447\u0435\u0442\u0430\u0445 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_ostat.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/06/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "05/06/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043a\u043e\u0442\u0438\u0440\u043e\u0432\u043e\u043a \u0434\u0440\u0430\u0433\u043e\u0446\u0435\u043d\u043d\u044b\u0445 \u043c\u0435\u0442\u0430\u043b\u043b\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_metall.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u0436\u0431\u0430\u043d\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u0440\u044b\u043d\u043a\u0430 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_mkr.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u0440\u0438\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u043f\u043e \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043d\u044b\u043c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f\u043c \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0434\u0435\u043d\u0435\u0436\u043d\u043e\u043c \u0440\u044b\u043d\u043a\u0435 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_depo.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/07/2001"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "13/07/2001"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_News.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0439 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u044b\u0445 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0439 \u043a\u043e\u0434\u0430\u043c BIC (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XML_bic.asp",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "bic",
                "type": "string",
                "description": "\u041a\u043e\u0434 \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 (9 \u0437\u043d\u0430\u043a\u043e\u0432).",
                "default": null,
                "example": "044525774"
              },
              {
                "name": "name",
                "type": "string",
                "description": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 (\u0447\u0430\u0441\u0442\u044c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f) \u043a\u0440\u0435\u0434\u0438\u0442\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438.",
                "default": null,
                "example": "\u0410\u0412\u0422\u041e"
              }
            ]
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u00ab\u0432\u0430\u043b\u044e\u0442\u043d\u044b\u0439 \u0441\u0432\u043e\u043f\u00bb \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/xml_swap.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2002"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2002"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0438\u043d\u0430\u043c\u0438\u043a\u0438 \u043e\u0442\u043f\u0443\u0441\u043a\u043d\u044b\u0445 \u0446\u0435\u043d \u0411\u0430\u043d\u043a\u0430 \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434.",
            "method": "GET",
            "url": "http://www.cbr.ru/scripts/XMLCoinsBase.asp",
            "headers": [],
            "required_parameters": [
              {
                "name": "date_req1",
                "type": "string",
                "description": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "01/12/2005"
              },
              {
                "name": "date_req2",
                "type": "string",
                "description": "\u041a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u0434\u0430\u0442\u0430 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0430 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 dd/mm/yyyy.",
                "default": null,
                "example": "06/12/2005"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435",
            "description": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0439 \u0441 \u0432\u044b\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c\u0438 \u043d\u0435\u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0444\u0438\u043d\u0430\u043d\u0441\u043e\u0432\u043e\u043c \u0440\u044b\u043d\u043a\u0435.",
            "method": "GET",
            "url": "http://www.cbr.ru/ref/blacklist/BlackList.xml",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          }
        ]
      },
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\89\\get_rates_data_GET.py",
      "function_name": "get_rates_data",
      "api_description": "Retrieves the current exchange rates for specified currency pairs.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\89\\get_supported_currency_pairs_GET.py",
      "function_name": "get_supported_currency_pairs",
      "api_description": "Retrieves a list of supported currency pairs.",
      "status": "code_error",
      "error_type": "code_error"
    },
    {
      "path": "extractor\\apidocs\\9\\search_makeup_products_GET.py",
      "function_name": [],
      "api_description": {
        "title": "Makeup API Documentation",
        "endpoints": [
          {
            "name": "Search Makeup Products",
            "description": "Search for makeup products and filter them by various parameters such as brand, price, product category, and tags.",
            "method": "GET",
            "url": "http://makeup-api.herokuapp.com/api/v1/products.json",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "product_type",
                "type": "string",
                "description": "The type of makeup being searched for (e.g., lipstick, eyeliner).",
                "default": null,
                "example": "lipstick"
              },
              {
                "name": "product_category",
                "type": "string",
                "description": "Sub-category for each makeup type (e.g., lip gloss is a category of lipstick).",
                "default": null,
                "example": "lip gloss"
              },
              {
                "name": "product_tags",
                "type": "string, list separated by commas",
                "description": "Options each product could be tagged with (e.g., vegan). Each product can have multiple tags.",
                "default": null,
                "example": "vegan,gluten free"
              },
              {
                "name": "brand",
                "type": "string",
                "description": "Brand of the product.",
                "default": null,
                "example": "maybelline"
              },
              {
                "name": "price_greater_than",
                "type": "number",
                "description": "Will return a list of products with price greater than the indicated number (exclusive).",
                "default": null,
                "example": 10
              },
              {
                "name": "price_less_than",
                "type": "number",
                "description": "Will return a list of products with price less than the indicated number (exclusive).",
                "default": null,
                "example": 50
              },
              {
                "name": "rating_greater_than",
                "type": "number",
                "description": "Will return a list of products with a rating more than the indicated number (exclusive).",
                "default": null,
                "example": 4
              },
              {
                "name": "rating_less_than",
                "type": "number",
                "description": "Will return a list of products with a rating less than the indicated number (exclusive).",
                "default": null,
                "example": 3
              }
            ]
          }
        ]
      },
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\9\\\\search_makeup_products_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\90\\create_product_POST.py",
      "function_name": "create_product",
      "api_description": "Creates a new product.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\90\\delete_product_DELETE.py",
      "function_name": [],
      "api_description": {
        "title": "Fake Store API Documentation",
        "endpoints": [
          {
            "name": "Get All Products",
            "description": "Retrieves a list of all products.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Product by ID",
            "description": "Retrieves a single product by its ID.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Product Categories",
            "description": "Retrieves a list of all product categories.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products/categories",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Products by Category",
            "description": "Retrieves products by a specific category.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products/category/jewelery",
            "headers": [],
            "required_parameters": [
              {
                "name": "category",
                "type": "string",
                "description": "The category of the products",
                "default": null,
                "example": "jewelery"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Cart by User ID",
            "description": "Retrieves the cart items for a specific user.",
            "method": "GET",
            "url": "https://fakestoreapi.com/carts?userId=1",
            "headers": [],
            "required_parameters": [
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Limited Products",
            "description": "Retrieves a limited number of products.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products?limit=5",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "limit",
                "type": "integer",
                "description": "The number of products to retrieve",
                "default": null,
                "example": 5
              }
            ]
          },
          {
            "name": "Create Product",
            "description": "Creates a new product.",
            "method": "POST",
            "url": "https://fakestoreapi.com/products",
            "headers": [],
            "required_parameters": [
              {
                "name": "title",
                "type": "string",
                "description": "The title of the product",
                "default": null,
                "example": "New Product"
              },
              {
                "name": "price",
                "type": "number",
                "description": "The price of the product",
                "default": null,
                "example": 29.99
              },
              {
                "name": "description",
                "type": "string",
                "description": "The description of the product",
                "default": null,
                "example": "This is a new product."
              },
              {
                "name": "image",
                "type": "string",
                "description": "The image URL of the product",
                "default": null,
                "example": "https://example.com/image.jpg"
              },
              {
                "name": "category",
                "type": "string",
                "description": "The category of the product",
                "default": null,
                "example": "electronics"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Update Product",
            "description": "Updates an existing product by its ID.",
            "method": "PUT",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              },
              {
                "name": "title",
                "type": "string",
                "description": "The title of the product",
                "default": null,
                "example": "Updated Product"
              },
              {
                "name": "price",
                "type": "number",
                "description": "The price of the product",
                "default": null,
                "example": 39.99
              },
              {
                "name": "description",
                "type": "string",
                "description": "The description of the product",
                "default": null,
                "example": "This is an updated product."
              },
              {
                "name": "image",
                "type": "string",
                "description": "The image URL of the product",
                "default": null,
                "example": "https://example.com/updated_image.jpg"
              },
              {
                "name": "category",
                "type": "string",
                "description": "The category of the product",
                "default": null,
                "example": "electronics"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Partially Update Product",
            "description": "Partially updates an existing product by its ID.",
            "method": "PATCH",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": [
              {
                "name": "title",
                "type": "string",
                "description": "The title of the product",
                "default": null,
                "example": "Partially Updated Product"
              },
              {
                "name": "price",
                "type": "number",
                "description": "The price of the product",
                "default": null,
                "example": 34.99
              },
              {
                "name": "description",
                "type": "string",
                "description": "The description of the product",
                "default": null,
                "example": "This is a partially updated product."
              },
              {
                "name": "image",
                "type": "string",
                "description": "The image URL of the product",
                "default": null,
                "example": "https://example.com/partially_updated_image.jpg"
              },
              {
                "name": "category",
                "type": "string",
                "description": "The category of the product",
                "default": null,
                "example": "electronics"
              }
            ]
          },
          {
            "name": "Delete Product",
            "description": "Deletes an existing product by its ID.",
            "method": "DELETE",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\90\\get_all_products_GET.py",
      "function_name": "get_all_products",
      "api_description": "Retrieves a list of all products.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\90\\get_cart_by_user_id_GET.py",
      "function_name": "get_cart_by_user_id",
      "api_description": "Retrieves the cart items for a specific user.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\90\\get_limited_products_GET.py",
      "function_name": "get_limited_products",
      "api_description": "Retrieves a limited number of products.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\90\\get_products_by_category_GET.py",
      "function_name": "get_products_by_category",
      "api_description": "Retrieves products by a specific category.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\90\\get_product_by_id_GET.py",
      "function_name": "get_product_by_id",
      "api_description": "Retrieves a single product by its ID.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\90\\get_product_categories_GET.py",
      "function_name": "get_product_categories",
      "api_description": "Retrieves a list of all product categories.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\90\\partially_update_product_PATCH.py",
      "function_name": [],
      "api_description": {
        "title": "Fake Store API Documentation",
        "endpoints": [
          {
            "name": "Get All Products",
            "description": "Retrieves a list of all products.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Product by ID",
            "description": "Retrieves a single product by its ID.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Product Categories",
            "description": "Retrieves a list of all product categories.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products/categories",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Products by Category",
            "description": "Retrieves products by a specific category.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products/category/jewelery",
            "headers": [],
            "required_parameters": [
              {
                "name": "category",
                "type": "string",
                "description": "The category of the products",
                "default": null,
                "example": "jewelery"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Cart by User ID",
            "description": "Retrieves the cart items for a specific user.",
            "method": "GET",
            "url": "https://fakestoreapi.com/carts?userId=1",
            "headers": [],
            "required_parameters": [
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Limited Products",
            "description": "Retrieves a limited number of products.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products?limit=5",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "limit",
                "type": "integer",
                "description": "The number of products to retrieve",
                "default": null,
                "example": 5
              }
            ]
          },
          {
            "name": "Create Product",
            "description": "Creates a new product.",
            "method": "POST",
            "url": "https://fakestoreapi.com/products",
            "headers": [],
            "required_parameters": [
              {
                "name": "title",
                "type": "string",
                "description": "The title of the product",
                "default": null,
                "example": "New Product"
              },
              {
                "name": "price",
                "type": "number",
                "description": "The price of the product",
                "default": null,
                "example": 29.99
              },
              {
                "name": "description",
                "type": "string",
                "description": "The description of the product",
                "default": null,
                "example": "This is a new product."
              },
              {
                "name": "image",
                "type": "string",
                "description": "The image URL of the product",
                "default": null,
                "example": "https://example.com/image.jpg"
              },
              {
                "name": "category",
                "type": "string",
                "description": "The category of the product",
                "default": null,
                "example": "electronics"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Update Product",
            "description": "Updates an existing product by its ID.",
            "method": "PUT",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              },
              {
                "name": "title",
                "type": "string",
                "description": "The title of the product",
                "default": null,
                "example": "Updated Product"
              },
              {
                "name": "price",
                "type": "number",
                "description": "The price of the product",
                "default": null,
                "example": 39.99
              },
              {
                "name": "description",
                "type": "string",
                "description": "The description of the product",
                "default": null,
                "example": "This is an updated product."
              },
              {
                "name": "image",
                "type": "string",
                "description": "The image URL of the product",
                "default": null,
                "example": "https://example.com/updated_image.jpg"
              },
              {
                "name": "category",
                "type": "string",
                "description": "The category of the product",
                "default": null,
                "example": "electronics"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Partially Update Product",
            "description": "Partially updates an existing product by its ID.",
            "method": "PATCH",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": [
              {
                "name": "title",
                "type": "string",
                "description": "The title of the product",
                "default": null,
                "example": "Partially Updated Product"
              },
              {
                "name": "price",
                "type": "number",
                "description": "The price of the product",
                "default": null,
                "example": 34.99
              },
              {
                "name": "description",
                "type": "string",
                "description": "The description of the product",
                "default": null,
                "example": "This is a partially updated product."
              },
              {
                "name": "image",
                "type": "string",
                "description": "The image URL of the product",
                "default": null,
                "example": "https://example.com/partially_updated_image.jpg"
              },
              {
                "name": "category",
                "type": "string",
                "description": "The category of the product",
                "default": null,
                "example": "electronics"
              }
            ]
          },
          {
            "name": "Delete Product",
            "description": "Deletes an existing product by its ID.",
            "method": "DELETE",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\90\\update_product_PUT.py",
      "function_name": [],
      "api_description": {
        "title": "Fake Store API Documentation",
        "endpoints": [
          {
            "name": "Get All Products",
            "description": "Retrieves a list of all products.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Product by ID",
            "description": "Retrieves a single product by its ID.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Product Categories",
            "description": "Retrieves a list of all product categories.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products/categories",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": []
          },
          {
            "name": "Get Products by Category",
            "description": "Retrieves products by a specific category.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products/category/jewelery",
            "headers": [],
            "required_parameters": [
              {
                "name": "category",
                "type": "string",
                "description": "The category of the products",
                "default": null,
                "example": "jewelery"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Cart by User ID",
            "description": "Retrieves the cart items for a specific user.",
            "method": "GET",
            "url": "https://fakestoreapi.com/carts?userId=1",
            "headers": [],
            "required_parameters": [
              {
                "name": "userId",
                "type": "integer",
                "description": "The ID of the user",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Get Limited Products",
            "description": "Retrieves a limited number of products.",
            "method": "GET",
            "url": "https://fakestoreapi.com/products?limit=5",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
              {
                "name": "limit",
                "type": "integer",
                "description": "The number of products to retrieve",
                "default": null,
                "example": 5
              }
            ]
          },
          {
            "name": "Create Product",
            "description": "Creates a new product.",
            "method": "POST",
            "url": "https://fakestoreapi.com/products",
            "headers": [],
            "required_parameters": [
              {
                "name": "title",
                "type": "string",
                "description": "The title of the product",
                "default": null,
                "example": "New Product"
              },
              {
                "name": "price",
                "type": "number",
                "description": "The price of the product",
                "default": null,
                "example": 29.99
              },
              {
                "name": "description",
                "type": "string",
                "description": "The description of the product",
                "default": null,
                "example": "This is a new product."
              },
              {
                "name": "image",
                "type": "string",
                "description": "The image URL of the product",
                "default": null,
                "example": "https://example.com/image.jpg"
              },
              {
                "name": "category",
                "type": "string",
                "description": "The category of the product",
                "default": null,
                "example": "electronics"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Update Product",
            "description": "Updates an existing product by its ID.",
            "method": "PUT",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              },
              {
                "name": "title",
                "type": "string",
                "description": "The title of the product",
                "default": null,
                "example": "Updated Product"
              },
              {
                "name": "price",
                "type": "number",
                "description": "The price of the product",
                "default": null,
                "example": 39.99
              },
              {
                "name": "description",
                "type": "string",
                "description": "The description of the product",
                "default": null,
                "example": "This is an updated product."
              },
              {
                "name": "image",
                "type": "string",
                "description": "The image URL of the product",
                "default": null,
                "example": "https://example.com/updated_image.jpg"
              },
              {
                "name": "category",
                "type": "string",
                "description": "The category of the product",
                "default": null,
                "example": "electronics"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Partially Update Product",
            "description": "Partially updates an existing product by its ID.",
            "method": "PATCH",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": [
              {
                "name": "title",
                "type": "string",
                "description": "The title of the product",
                "default": null,
                "example": "Partially Updated Product"
              },
              {
                "name": "price",
                "type": "number",
                "description": "The price of the product",
                "default": null,
                "example": 34.99
              },
              {
                "name": "description",
                "type": "string",
                "description": "The description of the product",
                "default": null,
                "example": "This is a partially updated product."
              },
              {
                "name": "image",
                "type": "string",
                "description": "The image URL of the product",
                "default": null,
                "example": "https://example.com/partially_updated_image.jpg"
              },
              {
                "name": "category",
                "type": "string",
                "description": "The category of the product",
                "default": null,
                "example": "electronics"
              }
            ]
          },
          {
            "name": "Delete Product",
            "description": "Deletes an existing product by its ID.",
            "method": "DELETE",
            "url": "https://fakestoreapi.com/products/1",
            "headers": [],
            "required_parameters": [
              {
                "name": "id",
                "type": "integer",
                "description": "The ID of the product",
                "default": null,
                "example": 1
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\91\\get_a_random_quote_GET.py",
      "function_name": "get_a_random_quote",
      "api_description": "Retrieves a random quote from Game of Thrones.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\91\\get_character_s_details_with_his_quotes_GET.py",
      "function_name": "get_character_s_details_with_his_quotes",
      "api_description": "Retrieves details of a specific character along with their quotes from Game of Thrones.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\91\\get_house_s_details_GET.py",
      "function_name": "get_house_s_details",
      "api_description": "Retrieves details of a specific house from Game of Thrones.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\91\\get_quotes_from_a_character_GET.py",
      "function_name": "get_quotes_from_a_character",
      "api_description": "Retrieves quotes from a specific character in Game of Thrones.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\91\\get_several_random_quotes_GET.py",
      "function_name": "get_several_random_quotes",
      "api_description": "Retrieves several random quotes from Game of Thrones.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\91\\list_of_characters_with_their_quotes_GET.py",
      "function_name": "list_of_characters_with_their_quotes",
      "api_description": "Retrieves a list of characters with their quotes from Game of Thrones.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\91\\list_of_houses_with_their_members_GET.py",
      "function_name": "list_of_houses_with_their_members",
      "api_description": "Retrieves a list of houses with their members from Game of Thrones.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\92\\_sug_GET.py",
      "function_name": "_sug",
      "api_description": "Provides word suggestions given a partially-entered query using a combination of the operations described in the /words resource.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\92\\_words_GET.py",
      "function_name": "_words",
      "api_description": "Returns a list of words (and multiword expressions) from a given vocabulary that match a given set of constraints.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\93\\get_post_office_s__details_by_postal_pin_code_GET.py",
      "function_name": "get_post_office_s__details_by_postal_pin_code",
      "api_description": "Retrieves details of Post Office(s) by searching Postal PIN Code of India.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\93\\get_post_office_s__details_by_post_office_branch_name_GET.py",
      "function_name": "get_post_office_s__details_by_post_office_branch_name",
      "api_description": "Retrieves details of Post Office(s) by searching Post Office branch name of India.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\94\\get_vehicle_price_GET.py",
      "function_name": "get_vehicle_price",
      "api_description": "Gets the current price of a vehicle from the FIPE table for a specific year and fuel type.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\94\\list_brands_GET.py",
      "function_name": "list_brands",
      "api_description": "Lists the brands of the type of vehicle you want.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\94\\list_models_GET.py",
      "function_name": "list_models",
      "api_description": "Lists the models of vehicles for a specific brand.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\94\\list_years_GET.py",
      "function_name": "list_years",
      "api_description": "Lists the available years for a specific vehicle model.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\95\\delete_key_value_pair_DELETE.py",
      "function_name": [],
      "api_description": {
        "title": "Lanyard API Documentation",
        "endpoints": [
          {
            "name": "Get User Presence Data",
            "description": "Retrieves the presence data of a specified user.",
            "method": "GET",
            "url": "https://api.lanyard.rest/v1/users/:user_id",
            "headers": [],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Set Key-Value Pair",
            "description": "Sets a key-value pair in the user's KV store.",
            "method": "PUT",
            "url": "https://api.lanyard.rest/v1/users/:user_id/kv/:key",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "API key received from the Lanyard bot",
                "example": "your_api_key"
              }
            ],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              },
              {
                "name": "key",
                "type": "string",
                "description": "The key to set in the KV store",
                "default": null,
                "example": "location"
              },
              {
                "name": "value",
                "type": "string",
                "description": "The value to set for the key",
                "default": null,
                "example": "Los Angeles, CA"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Set Multiple Key-Value Pairs",
            "description": "Sets multiple key-value pairs in the user's KV store.",
            "method": "PATCH",
            "url": "https://api.lanyard.rest/v1/users/:user_id/kv",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "API key received from the Lanyard bot",
                "example": "your_api_key"
              }
            ],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              },
              {
                "name": "key_value_pairs",
                "type": "object",
                "description": "An object containing key-value pairs to set",
                "default": null,
                "example": {
                  "location": "Los Angeles, CA",
                  "status": "Online"
                }
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete Key-Value Pair",
            "description": "Deletes a key-value pair from the user's KV store.",
            "method": "DELETE",
            "url": "https://api.lanyard.rest/v1/users/:user_id/kv/:key",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "API key received from the Lanyard bot",
                "example": "your_api_key"
              }
            ],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              },
              {
                "name": "key",
                "type": "string",
                "description": "The key to delete from the KV store",
                "default": null,
                "example": "location"
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\95\\get_user_presence_data_GET.py",
      "function_name": "get_user_presence_data",
      "api_description": "Retrieves the presence data of a specified user.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\95\\set_key_value_pair_PUT.py",
      "function_name": [],
      "api_description": {
        "title": "Lanyard API Documentation",
        "endpoints": [
          {
            "name": "Get User Presence Data",
            "description": "Retrieves the presence data of a specified user.",
            "method": "GET",
            "url": "https://api.lanyard.rest/v1/users/:user_id",
            "headers": [],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Set Key-Value Pair",
            "description": "Sets a key-value pair in the user's KV store.",
            "method": "PUT",
            "url": "https://api.lanyard.rest/v1/users/:user_id/kv/:key",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "API key received from the Lanyard bot",
                "example": "your_api_key"
              }
            ],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              },
              {
                "name": "key",
                "type": "string",
                "description": "The key to set in the KV store",
                "default": null,
                "example": "location"
              },
              {
                "name": "value",
                "type": "string",
                "description": "The value to set for the key",
                "default": null,
                "example": "Los Angeles, CA"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Set Multiple Key-Value Pairs",
            "description": "Sets multiple key-value pairs in the user's KV store.",
            "method": "PATCH",
            "url": "https://api.lanyard.rest/v1/users/:user_id/kv",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "API key received from the Lanyard bot",
                "example": "your_api_key"
              }
            ],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              },
              {
                "name": "key_value_pairs",
                "type": "object",
                "description": "An object containing key-value pairs to set",
                "default": null,
                "example": {
                  "location": "Los Angeles, CA",
                  "status": "Online"
                }
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete Key-Value Pair",
            "description": "Deletes a key-value pair from the user's KV store.",
            "method": "DELETE",
            "url": "https://api.lanyard.rest/v1/users/:user_id/kv/:key",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "API key received from the Lanyard bot",
                "example": "your_api_key"
              }
            ],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              },
              {
                "name": "key",
                "type": "string",
                "description": "The key to delete from the KV store",
                "default": null,
                "example": "location"
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\95\\set_multiple_key_value_pairs_PATCH.py",
      "function_name": [],
      "api_description": {
        "title": "Lanyard API Documentation",
        "endpoints": [
          {
            "name": "Get User Presence Data",
            "description": "Retrieves the presence data of a specified user.",
            "method": "GET",
            "url": "https://api.lanyard.rest/v1/users/:user_id",
            "headers": [],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Set Key-Value Pair",
            "description": "Sets a key-value pair in the user's KV store.",
            "method": "PUT",
            "url": "https://api.lanyard.rest/v1/users/:user_id/kv/:key",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "API key received from the Lanyard bot",
                "example": "your_api_key"
              }
            ],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              },
              {
                "name": "key",
                "type": "string",
                "description": "The key to set in the KV store",
                "default": null,
                "example": "location"
              },
              {
                "name": "value",
                "type": "string",
                "description": "The value to set for the key",
                "default": null,
                "example": "Los Angeles, CA"
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Set Multiple Key-Value Pairs",
            "description": "Sets multiple key-value pairs in the user's KV store.",
            "method": "PATCH",
            "url": "https://api.lanyard.rest/v1/users/:user_id/kv",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "API key received from the Lanyard bot",
                "example": "your_api_key"
              }
            ],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              },
              {
                "name": "key_value_pairs",
                "type": "object",
                "description": "An object containing key-value pairs to set",
                "default": null,
                "example": {
                  "location": "Los Angeles, CA",
                  "status": "Online"
                }
              }
            ],
            "optional_parameters": []
          },
          {
            "name": "Delete Key-Value Pair",
            "description": "Deletes a key-value pair from the user's KV store.",
            "method": "DELETE",
            "url": "https://api.lanyard.rest/v1/users/:user_id/kv/:key",
            "headers": [
              {
                "name": "Authorization",
                "type": "string",
                "description": "API key received from the Lanyard bot",
                "example": "your_api_key"
              }
            ],
            "required_parameters": [
              {
                "name": "user_id",
                "type": "string",
                "description": "The ID of the Discord user",
                "default": null,
                "example": "94490510688792576"
              },
              {
                "name": "key",
                "type": "string",
                "description": "The key to delete from the KV store",
                "default": null,
                "example": "location"
              }
            ],
            "optional_parameters": []
          }
        ]
      },
      "status": null,
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\96\\autocomplete_a_postcode_partial_GET.py",
      "function_name": "autocomplete_a_postcode_partial",
      "api_description": "Provides autocomplete suggestions for a partial postcode.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\96\\bulk_lookup_postcodes_POST.py",
      "function_name": "bulk_lookup_postcodes",
      "api_description": "Retrieves information for multiple postcodes.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\96\\bulk_reverse_geocoding_POST.py",
      "function_name": "bulk_reverse_geocoding",
      "api_description": "Retrieves postcodes for multiple geolocations.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\96\\get_a_random_postcode_GET.py",
      "function_name": "get_a_random_postcode",
      "api_description": "Retrieves a random postcode.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\96\\get_nearest_outward_codes_for_a_given_longitude___latitude_GET.py",
      "function_name": "get_nearest_outward_codes_for_a_given_longitude___latitude",
      "api_description": "Retrieves nearest outward codes for a given longitude and latitude.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\96\\\\get_nearest_outward_codes_for_a_given_longitude___latitude_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\96\\get_nearest_postcodes_for_a_given_longitude___latitude_GET.py",
      "function_name": "get_nearest_postcodes_for_a_given_longitude___latitude",
      "api_description": "Retrieves nearest postcodes for a given longitude and latitude.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\96\\\\get_nearest_postcodes_for_a_given_longitude___latitude_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\96\\lookup_a_postcode_GET.py",
      "function_name": "lookup_a_postcode",
      "api_description": "Retrieves information for a given postcode.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\96\\lookup_outward_code_GET.py",
      "function_name": "lookup_outward_code",
      "api_description": "Retrieves information for an outward code.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\96\\lookup_terminated_postcode_GET.py",
      "function_name": "lookup_terminated_postcode",
      "api_description": "Retrieves information for a terminated postcode.",
      "status": "server_error",
      "error_type": "server_error"
    },
    {
      "path": "extractor\\apidocs\\96\\nearest_outward_code_for_outward_code_GET.py",
      "function_name": "nearest_outward_code_for_outward_code",
      "api_description": "Retrieves nearest outward codes for a given outward code.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\96\\nearest_postcodes_for_postcode_GET.py",
      "function_name": "nearest_postcodes_for_postcode",
      "api_description": "Retrieves nearest postcodes for a given postcode.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\96\\query_for_postcode_GET.py",
      "function_name": "query_for_postcode",
      "api_description": "Queries for a postcode.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\96\\validate_a_postcode_GET.py",
      "function_name": "validate_a_postcode",
      "api_description": "Validates a given postcode.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\97\\application_json_GET.py",
      "function_name": "application_json",
      "api_description": "Request known enumerated parameter values for the interface.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\97\\application_wadl_GET.py",
      "function_name": "application_wadl",
      "api_description": "Request WADL for the interface.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\97\\catalogs_GET.py",
      "function_name": "catalogs",
      "api_description": "Request available catalogs.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\97\\contributors_GET.py",
      "function_name": "contributors",
      "api_description": "Request available contributors.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\97\\count_GET.py",
      "function_name": "count",
      "api_description": "Perform a count on a data request. Count uses the same parameters as the query method.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\97\\query_GET.py",
      "function_name": "query",
      "api_description": "Submit a data request.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\97\\version_GET.py",
      "function_name": "version",
      "api_description": "Request full service version number.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\98\\get_multiple_quotes_GET.py",
      "function_name": "get_multiple_quotes",
      "api_description": "Retrieves an array of quotes from Stranger Things based on the specified number.",
      "status": "hard_error",
      "error_type": "Command '['python', 'extractor\\\\apidocs\\\\98\\\\get_multiple_quotes_GET.py']' returned non-zero exit status 1."
    },
    {
      "path": "extractor\\apidocs\\98\\get_random_quote_GET.py",
      "function_name": "get_random_quote",
      "api_description": "Retrieves a random quote from Stranger Things.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\99\\free_text_search_GET.py",
      "function_name": "free_text_search",
      "api_description": "Search for jokes containing a specific query.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\99\\retrieve_a_list_of_available_categories_GET.py",
      "function_name": "retrieve_a_list_of_available_categories",
      "api_description": "Retrieve a list of all available joke categories.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\99\\retrieve_a_random_chuck_norris_joke_from_a_given_category_GET.py",
      "function_name": "retrieve_a_random_chuck_norris_joke_from_a_given_category",
      "api_description": "Retrieve a random Chuck Norris joke from a specified category.",
      "status": "information",
      "error_type": null
    },
    {
      "path": "extractor\\apidocs\\99\\retrieve_a_random_chuck_norris_joke_GET.py",
      "function_name": "retrieve_a_random_chuck_norris_joke",
      "api_description": "Retrieve a random Chuck Norris joke in JSON format.",
      "status": "information",
      "error_type": null
    }
  ]
}