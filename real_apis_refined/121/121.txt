{
    "title": "BGG XML API2 Documentation",
    "endpoints": [
        {
            "name": "Thing Items",
            "description": "Retrieve information about physical, tangible products in the BGG database.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/thing?",
            "headers": [],
            "required_parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Specifies the id of the thing(s) to retrieve. Can be a comma-delimited list of ids.",
                    "default": null,
                    "example": "123,456"
                }
            ],
            "optional_parameters": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "Specifies the type of thing to filter results by. Can be a comma-delimited list of types.",
                    "default": null,
                    "example": "boardgame,boardgameexpansion"
                },
                {
                    "name": "versions",
                    "type": "integer",
                    "description": "Returns version info for the item.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "videos",
                    "type": "integer",
                    "description": "Returns videos for the item.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "stats",
                    "type": "integer",
                    "description": "Returns ranking and rating stats for the item.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "historical",
                    "type": "integer",
                    "description": "Not currently supported. Returns historical data over time.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "marketplace",
                    "type": "integer",
                    "description": "Returns marketplace data.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "comments",
                    "type": "integer",
                    "description": "Returns all comments about the item. Also includes ratings when commented.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "ratingcomments",
                    "type": "integer",
                    "description": "Returns all ratings for the item. Also includes comments when rated.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "description": "Controls the page of data to see for historical info, comments, and ratings data. Defaults to 1.",
                    "default": 1,
                    "example": "1"
                },
                {
                    "name": "pagesize",
                    "type": "integer",
                    "description": "Set the number of records to return in paging. Minimum is 10, maximum is 100.",
                    "default": null,
                    "example": "50"
                },
                {
                    "name": "from",
                    "type": "string",
                    "description": "Not currently supported. Filter results from a specific date (YYYY-MM-DD).",
                    "default": null,
                    "example": "2023-01-01"
                },
                {
                    "name": "to",
                    "type": "string",
                    "description": "Not currently supported. Filter results to a specific date (YYYY-MM-DD).",
                    "default": null,
                    "example": "2023-12-31"
                }
            ]
        },
        {
            "name": "Family Items",
            "description": "Retrieve information about more abstract or esoteric concepts represented by a family in the BGG database.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/family?",
            "headers": [],
            "required_parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Specifies the id of the family to retrieve. Can be a comma-delimited list of ids.",
                    "default": null,
                    "example": "123,456"
                }
            ],
            "optional_parameters": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "Specifies the type of family to filter results by. Can be a comma-delimited list of types.",
                    "default": null,
                    "example": "rpg,boardgamefamily"
                }
            ]
        },
        {
            "name": "Forum Lists",
            "description": "Request a list of forums for a particular type/id.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/forumlist?",
            "headers": [],
            "required_parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Specifies the id of the type of database entry you want the forum list for.",
                    "default": null,
                    "example": "123"
                }
            ],
            "optional_parameters": [
                {
                    "name": "type",
                    "type": "string",
                    "description": "The type of entry in the database.",
                    "default": null,
                    "example": "thing"
                }
            ]
        },
        {
            "name": "Forums",
            "description": "Request a list of threads in a particular forum.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/forum?",
            "headers": [],
            "required_parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Specifies the id of the forum.",
                    "default": null,
                    "example": "123"
                }
            ],
            "optional_parameters": [
                {
                    "name": "page",
                    "type": "integer",
                    "description": "The page of the thread list to return; page size is 50.",
                    "default": 1,
                    "example": "1"
                }
            ]
        },
        {
            "name": "Threads",
            "description": "Request forum threads by thread id.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/thread?",
            "headers": [],
            "required_parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Specifies the id of the thread to retrieve.",
                    "default": null,
                    "example": "123"
                }
            ],
            "optional_parameters": [
                {
                    "name": "minarticleid",
                    "type": "string",
                    "description": "Filters the results so that only articles with an equal or higher id than specified will be returned.",
                    "default": null,
                    "example": "100"
                },
                {
                    "name": "minarticledate",
                    "type": "string",
                    "description": "Filters the results so that only articles on the specified date or later will be returned (YYYY-MM-DD).",
                    "default": null,
                    "example": "2023-01-01"
                },
                {
                    "name": "minarticledate",
                    "type": "string",
                    "description": "Filters the results so that only articles after the specified date and time (YYYY-MM-DD HH:MM:SS) or later will be returned.",
                    "default": null,
                    "example": "2023-01-01 12:00:00"
                },
                {
                    "name": "count",
                    "type": "integer",
                    "description": "Limits the number of articles returned to no more than specified.",
                    "default": null,
                    "example": "10"
                },
                {
                    "name": "username",
                    "type": "string",
                    "description": "Not currently supported.",
                    "default": null,
                    "example": "john_doe"
                }
            ]
        },
        {
            "name": "Users",
            "description": "Request basic public profile information about a user by username.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/user?",
            "headers": [],
            "required_parameters": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "Specifies the user name (only one user is requestable at a time).",
                    "default": null,
                    "example": "john_doe"
                }
            ],
            "optional_parameters": [
                {
                    "name": "buddies",
                    "type": "integer",
                    "description": "Turns on optional buddies reporting. Results are paged.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "guilds",
                    "type": "integer",
                    "description": "Turns on optional guilds reporting. Results are paged.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "hot",
                    "type": "integer",
                    "description": "Include the user's hot 10 list from their profile. Omitted if empty.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "top",
                    "type": "integer",
                    "description": "Include the user's top 10 list from their profile. Omitted if empty.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "domain",
                    "type": "string",
                    "description": "Controls the domain for the users hot 10 and top 10 lists. The default is boardgame.",
                    "default": "boardgame",
                    "example": "rpg"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "description": "Specifies the page of buddy and guild results to return. The default page is 1.",
                    "default": 1,
                    "example": "1"
                }
            ]
        },
        {
            "name": "Guilds",
            "description": "Request information about particular guilds.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/guild?",
            "headers": [],
            "required_parameters": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "ID of the guild you want to view.",
                    "default": null,
                    "example": "123"
                }
            ],
            "optional_parameters": [
                {
                    "name": "members",
                    "type": "integer",
                    "description": "Include member roster in the results. Member list is paged and sorted.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "sort",
                    "type": "string",
                    "description": "Specifies how to sort the members list; default is username.",
                    "default": "username",
                    "example": "date"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "description": "The page of the members list to return. Page size is 25.",
                    "default": 1,
                    "example": "1"
                }
            ]
        },
        {
            "name": "Plays",
            "description": "Request plays logged by a particular user or for a particular item.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/plays?",
            "headers": [],
            "required_parameters": [],
            "optional_parameters": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "Name of the player you want to request play information for. Data is returned in backwards-chronological form.",
                    "default": null,
                    "example": "john_doe"
                },
                {
                    "name": "id",
                    "type": "string",
                    "description": "Id number of the item you want to request play information for. Data is returned in backwards-chronological form.",
                    "default": null,
                    "example": "123"
                },
                {
                    "name": "type",
                    "type": "string",
                    "description": "Type of the item you want to request play information for. Valid types include: thing, family.",
                    "default": null,
                    "example": "thing"
                },
                {
                    "name": "mindate",
                    "type": "string",
                    "description": "Returns only plays of the specified date or later (YYYY-MM-DD).",
                    "default": null,
                    "example": "2023-01-01"
                },
                {
                    "name": "maxdate",
                    "type": "string",
                    "description": "Returns only plays of the specified date or earlier (YYYY-MM-DD).",
                    "default": null,
                    "example": "2023-12-31"
                },
                {
                    "name": "subtype",
                    "type": "string",
                    "description": "Limits play results to the specified TYPE; boardgame is the default. Valid types include: boardgame, boardgameexpansion, boardgameaccessory, boardgameintegration, boardgamecompilation, boardgameimplementation, rpg, rpgitem, videogame.",
                    "default": "boardgame",
                    "example": "boardgame"
                },
                {
                    "name": "page",
                    "type": "integer",
                    "description": "The page of information to request. Page size is 100 records.",
                    "default": 1,
                    "example": "1"
                }
            ]
        },
        {
            "name": "Collection",
            "description": "Request details about a user's collection.",
            "method": "GET",
            "url": "https://boardgamegeek.com/xmlapi2/collection?",
            "headers": [],
            "required_parameters": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "Name of the user to request the collection for.",
                    "default": null,
                    "example": "john_doe"
                }
            ],
            "optional_parameters": [
                {
                    "name": "version",
                    "type": "integer",
                    "description": "Returns version info for each item in your collection.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "subtype",
                    "type": "string",
                    "description": "Specifies which collection you want to retrieve. TYPE may be boardgame, boardgameexpansion, boardgameaccessory, rpgitem, rpgissue, or videogame; the default is boardgame.",
                    "default": "boardgame",
                    "example": "boardgame"
                },
                {
                    "name": "excludesubtype",
                    "type": "string",
                    "description": "Specifies which subtype you want to exclude from the results.",
                    "default": null,
                    "example": "boardgameexpansion"
                },
                {
                    "name": "id",
                    "type": "string",
                    "description": "Filter collection to specifically listed item(s). Can be a comma-delimited list of item ids.",
                    "default": null,
                    "example": "123,456"
                },
                {
                    "name": "brief",
                    "type": "integer",
                    "description": "Returns more abbreviated results.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "stats",
                    "type": "integer",
                    "description": "Returns expanded rating/ranking info for the collection.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "own",
                    "type": "integer",
                    "description": "Filter for owned games. Set to 0 to exclude these items so marked. Set to 1 for returning owned games and 0 for non-owned games.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "rated",
                    "type": "integer",
                    "description": "Filter for whether an item has been rated. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "played",
                    "type": "integer",
                    "description": "Filter for whether an item has been played. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "comment",
                    "type": "integer",
                    "description": "Filter for items that have been commented. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "trade",
                    "type": "integer",
                    "description": "Filter for items marked for trade. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "want",
                    "type": "integer",
                    "description": "Filter for items wanted in trade. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "wishlist",
                    "type": "integer",
                    "description": "Filter for items on the wishlist. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "wishlistpriority",
                    "type": "integer",
                    "description": "Filter for wishlist priority. Returns only items of the specified priority.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "preordered",
                    "type": "integer",
                    "description": "Filter for pre-ordered games. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "wanttoplay",
                    "type": "integer",
                    "description": "Filter for items marked as wanting to play. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                    "default": null,
                    "example": "1"
                },
                {
                    "name": "wanttobuy",
                    "type": "integer",
                    "description": "Filter for ownership flag. Set to 0 to exclude these items so marked. Set to 1 to include only these items so marked.",
                    "default": null,
                    "example": "1"
                }
            ]
        }
    ]
}