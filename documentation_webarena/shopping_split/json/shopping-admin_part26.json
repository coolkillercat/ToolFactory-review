{
  "server_url": "http://ec2-3-129-135-45.us-east-2.compute.amazonaws.com:7770/rest/default",
  "paths": {
    "/V1/inventory/low-quantity-notification/{sourceCode}/{sku}": {
      "get": {
        "description": "Get the source item configuration",
        "parameters": [
          {
            "name": "sourceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-low-quantity-notification-api-data-source-item-configuration-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      }
    },
    "/V1/inventory/low-quantity-notifications-delete": {
      "post": {
        "description": "Delete multiple source items configuration for low quantity",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryLowquantitynotificationsdeletePostv1inventorylowquantitynotificationsdeletebody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      }
    },
    "/V1/inventory/source-items": {
      "get": {
        "description": "Find SourceItems by SearchCriteria We need to have this method for direct work with SourceItems because this object contains additional data like as qty, status (for example can be searchable by additional field)",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-item-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Save Multiple Source item data",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryLowquantitynotificationsdeletePostv1inventorylowquantitynotificationsdeletebody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      }
    },
    "/V1/inventory/source-items-delete": {
      "post": {
        "description": "Delete Multiple Source item data",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryLowquantitynotificationsdeletePostv1inventorylowquantitynotificationsdeletebody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      }
    },
    "/V1/inventory/source-selection-algorithm-list": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-algorithm-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      }
    },
    "/V1/inventory/source-selection-algorithm-result": {
      "post": {
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "inventoryRequest",
                  "algorithmCode"
                ],
                "properties": {
                  "inventoryRequest": {
                    "$ref": "#/components/schemas/inventory-source-selection-api-data-inventory-request-interface"
                  },
                  "algorithmCode": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "inventoryRequest",
                  "algorithmCode"
                ],
                "properties": {
                  "inventoryRequest": {
                    "$ref": "#/components/schemas/inventory-source-selection-api-data-inventory-request-interface"
                  },
                  "algorithmCode": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      }
    },
    "/V1/inventory/sources": {
      "get": {
        "description": "Find Sources by SearchCriteria SearchCriteria is not required because load all stocks is useful case",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Save Source data",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventorySourcesPostv1inventorysourcesbody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      }
    },
    "/V1/inventory/sources/{sourceCode}": {
      "get": {
        "description": "Get Source data by given code. If you want to create plugin on get method, also you need to create separate plugin on getList method, because entity loading way is different for these methods",
        "parameters": [
          {
            "name": "sourceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Save Source data",
        "parameters": [
          {
            "name": "sourceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventorySourcesPostv1inventorysourcesbody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      }
    },
    "/V1/inventory/stock-resolver/{type}/{code}": {
      "get": {
        "description": "Resolve Stock by Sales Channel type and code",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        }
      }
    }
  }
}